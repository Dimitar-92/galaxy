{"version":3,"sources":["webpack:///biojs_blasterjs.js","webpack:///webpack/bootstrap 1557eeb70da17c6897f4?33f2","webpack:///./config/plugins/visualizations/charts/static/repository/visualizations/biojs/blasterjs/wrapper.js","webpack:///./config/plugins/visualizations/charts/static/repository/plugins/biojs/blasterjs/biojs-vis-blasterjs/build/blasterjs.js"],"names":["define","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","Blasterjs","Backbone","Model","extend","initialize","options","alert","console","log","chart","a","dataset","settings","document","createElement","href","setAttribute","text","input","multiple","table","single","rootDiv","getElementById","targets","appendChild","blasterjs","multipleAlignments","alignmentsTable","singleAlignment","process","resolve","state","apply","undefined","5","require","global","e","t","n","r","s","o","u","i","f","Error","code","l","length","1","inherit","dest","src","noParent","Object","prototype","getOwnPropertyNames","forEach","name","hasOwnProperty","desc","getOwnPropertyDescriptor","defineProperty","__proto__","findType","meta","type","implements","implType","implMeta","proto","base","Class","classProto","clone","Array","isArray","implementedType","push","theClass","this","constructor","arguments","value","enumerable","configurable","writable","statics","object","Checker","typeOf","typeInfo","an","is","VERSION","self","window","2","factory","root","slice","each","obj","sources","source","prop","biojs-vis-blasterjs","opt","css","style","styleSheet","cssText","createTextNode","getElementsByTagName","string","myBlob","Blob","fakeEvent","target","files","_displayAlignments","addEventListener","evt","BlastAlignment","description","totalScore","queryCover","hsp","HSP","score","eValue","identities","positives","gaps","queryStart","query","queryEnd","comparison","subjectStart","subject","subjectEnd","getQueryLenght","content","lines","split","startsWith","getAlignments","parseBlastText","alignments","line1","line2","currentLine","hsps","replace","substr","substring","sbjctStart","sbjct","sbjctEnd","nextQuery","nextComparison","diference","j","parseFloat","x","alignment","toFixed","getQueryCover","cover","noOver","getHSPWithoutOverlapping","parseInt","end","start","hspNoOver","getNoOverlappingArray","partitionIntoOverlappingRanges","array","sort","b","getMaxEnd","rarray","g","result","getColor","colored","colorNb","getDivColor","getDivColorText","div","selectAlignment","item","parentElement","items","getElementsByClassName","fontWeight","createColorsDiv","container","divSpace","divClear","color","minWidth","minHeight","float","textAlign","innerHTML","bold","backgroundColor","clear","createQueryDiv","divQuery","marginTop","fontSize","width","height","createNumbersDiv","lenght","divNumbers","marginBottom","divideDivNumbers","createDivisionsDivNumbers","pixels","pxrest","divisions","size","px2","div1","div2","createHeader","colors","numbers","paddingBottom","createBody","queryLenght","alignmentContainer","createAlignmentDiv","white","link","init","offset","onmouseout","onmouseover","onclick","createChangeColorButton","button","className","marginRight","changeColors","createDownloadButton","downloadAlignmentsImg","removeChild","childNodes","blastDiv","firstChild","createAlignmentComparison","buttons","html2canvas","onrendered","canvas","body","toDataURL","download","click","hasChildNodes","containerButtons","buttonColors","buttonDownload","paddingTop","padding","border","cursos","margin","maxWidth","createTableHeader","thead","theadTr","theadDesc","theadScore","theadEval","theadIdent","theadPos","theadGaps","createTableButtons","butCSV","butImg","downloadTableCSV","downloadTableImg","createAlignmentTable","tableDiv","imgContainer","butContainer","tbody","tr","tdDesc","butDesc","callback","location","createSingleAlignment","display","background","tdScore","tdEval","tdIdent","tdPos","tdGaps","csvContent","encodedUri","encodeURI","alignmentDiv","alignmentPre","span","statsDiv","scoreDiv","expectedDiv","identitiesDiv","positivesDiv","gapsDiv","queryDiv","createSingleQueryDiv","comparisonDiv","createSingleComparisonDiv","subjectDiv","createSingleSubjectDiv","fontFamily","downloadSingleAlignmentImg","paddingLeft","buttonNext","goTo","tittle","textDiv","startDiv","endDiv","String","marginLeft","getAminoColor","charAt","spaceDiv","char","File","FileReader","FileList","onload","readAsText","prefix","indexOf","js-class","js-extend"],"mappings":"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","file":"biojs_blasterjs.js","sourcesContent":["define(function() { return /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(5) ], __WEBPACK_AMD_DEFINE_RESULT__ = function(Blasterjs) {\n\t    return Backbone.Model.extend({\n\t        initialize: function( options ) {\n\t            alert(\"Run 4\");\n\t\n\t            console.log(Blasterjs);\n\t            var chart    = options.chart;\n\t            var dataset  = options.dataset;\n\t            var settings = options.chart.settings;\n\t            //Simple example\n\t            var a = document.createElement('a');\n\t            a.href='http://sing.ei.uvigo.es/blasterjs/blast.out';\n\t            a.setAttribute(\"target\", \"_blank\");\n\t            a.text='Download an example file';\n\t            a.setAttribute(\"download\", \"blast.out\");\n\t            var input = document.createElement('input');\n\t            input.id = 'blastinput';\n\t            input.setAttribute(\"type\", \"file\");\n\t\n\t            var multiple = document.createElement('div');\n\t            multiple.id = \"blast-multiple-alignments\";\n\t            var table = document.createElement('div');\n\t            table.id = \"blast-alignments-table\";\n\t            var single = document.createElement('div');\n\t            single.id = \"blast-single-alignment\";\n\t\n\t            var rootDiv = document.getElementById(options.targets[0]+\"\");\n\t\n\t            rootDiv.appendChild(a);\n\t            rootDiv.appendChild(document.createElement('br'));\n\t            rootDiv.appendChild(document.createElement('br'));\n\t            rootDiv.appendChild(input);\n\t            rootDiv.appendChild(multiple);\n\t            rootDiv.appendChild(table);\n\t            rootDiv.appendChild(single);\n\t\n\t            var instance = blasterjs({\n\t                 input: \"blastinput\",\n\t                 multipleAlignments: \"blast-multiple-alignments\",\n\t                 alignmentsTable: \"blast-alignments-table\",\n\t                 singleAlignment: \"blast-single-alignment\"\n\t            });\n\t            options.process.resolve();\n\t            chart.state( 'ok', 'Chart drawn.' );\n\t            /*var m = new msa.msa({\n\t                el: $( '#'  + options.targets[ 0 ] ),\n\t                vis: {  conserv: settings.get( 'conserv' ) == 'true',\n\t                        overviewbox: settings.get( 'overviewbox' ) == 'true' },\n\t                menu: 'small',\n\t                bootstrapMenu: settings.get( 'menu' ) == 'true'\n\t            });\n\t            m.u.file.importURL( dataset.download_url, function() {\n\t                m.render();\n\t                chart.state( 'ok', 'Chart drawn.' );\n\t                options.process.resolve();\n\t            });*/\n\t        }\n\t    });\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n\n/***/ 5:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar require;var require;var require;/* WEBPACK VAR INJECTION */(function(global) {require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\t(function (global){\n\t/** @preserve http://github.com/easeway/js-class */\n\t\n\t// Class Definition using ECMA5 prototype chain\n\t\n\tfunction inherit(dest, src, noParent) {\n\t    while (src && src !== Object.prototype) {\n\t        Object.getOwnPropertyNames(src).forEach(function (name) {\n\t            if (name != '.class' && !dest.hasOwnProperty(name)) {\n\t                var desc = Object.getOwnPropertyDescriptor(src, name);\n\t                Object.defineProperty(dest, name, desc);\n\t            }\n\t        });\n\t        if (noParent) {\n\t            break;\n\t        }\n\t        src = src.__proto__;\n\t    }\n\t    return dest;\n\t}\n\t\n\tvar Class = function (base, proto, options) {\n\t    if (typeof(base) != 'function') {\n\t        options = proto;\n\t        proto = base;\n\t        base = Object;\n\t    }\n\t    if (!proto) {\n\t        proto = {};\n\t    }\n\t    if (!options) {\n\t        options = {};\n\t    }\n\t    \n\t    var meta = {\n\t        name: options.name,\n\t        base: base,\n\t        implements: []\n\t    }\n\t    var classProto = Class.clone(proto);\n\t    if (options.implements) {\n\t        (Array.isArray(options.implements) ? options.implements : [options.implements])\n\t            .forEach(function (implementedType) {\n\t                if (typeof(implementedType) == 'function' && implementedType.prototype) {\n\t                    meta.implements.push(implementedType);\n\t                    Class.extend(classProto, implementedType.prototype);\n\t                }\n\t            });\n\t    }\n\t    classProto.__proto__ = base.prototype;\n\t    var theClass = function () {\n\t        if (typeof(this.constructor) == 'function') {\n\t            this.constructor.apply(this, arguments);\n\t        }\n\t    };\n\t    meta.type = theClass;\n\t    theClass.prototype = classProto;\n\t    Object.defineProperty(theClass, '.class.meta', { value: meta, enumerable: false, configurable: false, writable: false });\n\t    Object.defineProperty(classProto, '.class', { value: theClass, enumerable: false, configurable: false, writable: false });\n\t    if (options.statics) {\n\t        Class.extend(theClass, options.statics);\n\t    }\n\t    return theClass;\n\t};\n\t\n\tClass.extend = inherit;\n\t\n\tClass.clone = function (object) {\n\t    return inherit({}, object);\n\t};\n\t\n\tfunction findType(meta, type) {\n\t    while (meta) {\n\t        if (meta.type.prototype === type.prototype) {\n\t            return true;\n\t        }\n\t        for (var i in meta.implements) {\n\t            var implType = meta.implements[i];\n\t            var implMeta = implType['.class.meta'];\n\t            if (implMeta) {\n\t                if (findType(implMeta, type)) {\n\t                    return true;\n\t                }\n\t            } else {\n\t                for (var proto = implType.prototype; proto; proto = proto.__proto__) {\n\t                    if (proto === type.prototype) {\n\t                        return true;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        meta = meta.base ? meta.base['.class.meta'] : undefined;\n\t    }\n\t    return false;\n\t}\n\t\n\tvar Checker = Class({\n\t    constructor: function (object) {\n\t        this.object = object;\n\t    },\n\t    \n\t    typeOf: function (type) {\n\t        if (this.object instanceof type) {\n\t            return true;\n\t        }\n\t        var meta = Class.typeInfo(this.object);\n\t        return meta && findType(meta, type);\n\t    }\n\t});\n\t\n\t// aliases\n\tChecker.prototype.a = Checker.prototype.typeOf;\n\tChecker.prototype.an = Checker.prototype.typeOf;\n\t\n\tClass.is = function (object) {\n\t    return new Checker(object);\n\t};\n\t\n\tClass.typeInfo = function (object) {\n\t    var theClass = object.__proto__['.class'];\n\t    return theClass ? theClass['.class.meta'] : undefined;\n\t};\n\t\n\tClass.VERSION = [0, 0, 2];\n\t\n\tif (module) {\n\t    module.exports = Class;\n\t} else {\n\t    global.Class = Class;   // for browser\n\t}\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{}],2:[function(require,module,exports){\n\t(function(factory) {\n\t  if(typeof exports === 'object') {\n\t    factory(exports);\n\t  } else {\n\t    factory(this);\n\t  }\n\t}).call(this, function(root) { \n\t\n\t  var slice   = Array.prototype.slice,\n\t      each    = Array.prototype.forEach;\n\t\n\t  var extend = function(obj) {\n\t    if(typeof obj !== 'object') throw obj + ' is not an object' ;\n\t\n\t    var sources = slice.call(arguments, 1); \n\t\n\t    each.call(sources, function(source) {\n\t      if(source) {\n\t        for(var prop in source) {\n\t          if(typeof source[prop] === 'object' && obj[prop]) {\n\t            extend.call(obj, obj[prop], source[prop]);\n\t          } else {\n\t            obj[prop] = source[prop];\n\t          }\n\t        } \n\t      }\n\t    });\n\t\n\t    return obj;\n\t  }\n\t\n\t  root.extend = extend;\n\t});\n\t\n\t},{}],\"biojs-vis-blasterjs\":[function(require,module,exports){\n\t/*\n\t * biojs-vis-blasterjs\n\t * https://github.com/sing-group/blasterjs\n\t *\n\t * Copyright (c) 2016 SING - Sistemas Informaticos de Nueva Generacion\n\t * Licensed under the MIT license.\n\t *\n\t *\n\t * BlasterJS\n\t *\n\t * @class\n\t * @extends Biojs\n\t *\n\t * @author <a href=\"mailto:aiblanco@uvigo.es\">Aitor Blanco Miguez</a>\n\t * @version 0.1.1\n\t * @category 3\n\t *\n\t * @requires Bootstrap 3\n\t * @dependency <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\" integrity=\"sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7\" crossorigin=\"anonymous\"></link>\n\t *\n\t * @requires <a href='html2canvas.js'>HTML2CANVAS</a>\n\t * @dependency <script type=\"text/javascript\" src=\"lib/html2canvas.js\"></script>\n\t *\n\t *\n\t * @param {Object} options An object with the options for BlasterJS component.\n\t *\n\t * @option {string} input\n\t *    Identifier of the INPUT tag where the BLAST output file should be selected.\n\t *\n\t * @option {string} multipleAlignments\n\t *    Identifier of the DIV tag where the multiple alignments should be displayed.\n\t *\n\t * @option {string} alignmentsTable\n\t *    Identifier of the DIV tag where the alignments table should be displayed.\n\t *\n\t * @option {string} singleAlignment\n\t *    Identifier of the DIV tag where the single should be displayed.\n\t * \n\t * @example\n\t * var instance = new Biojs.blasterjs({\n\t *      input: \"blastinput\",\n\t *      multipleAlignments: \"blast-multiple-alignments\",\n\t *      alignmentsTable: \"blast-alignments-table\",\n\t        singleAlignment: \"blast-single-alignment\"\n\t * });\n\t */\n\t\n\t\n\tvar blasterjs;\n\tvar Class = require('js-class');\n\tmodule.exports = blasterjs = Class(\n\t    /** @lends Biojs.blasterjs# */\n\t    {\n\t        constructor: function (options) {\n\t            var self = this;\n\t\n\t            require('js-extend').extend(this.opt, options);\n\t\n\t            var css = 'table tbody tr td button:hover{ text-decoration: underline;}';\n\t            var style = document.createElement('style');\n\t            if (style.styleSheet) {\n\t                style.styleSheet.cssText = css;\n\t            } else {\n\t                style.appendChild(document.createTextNode(css));\n\t            }\n\t            document.getElementsByTagName('head')[0].appendChild(style);\n\t            if (self.opt.string) {\n\t                var myBlob = new Blob([self.opt.string], {type : \"text/plain\"});\n\t                var fakeEvent = {\n\t                   target: {  files: [myBlob]   }\n\t                };\n\t                self._displayAlignments(fakeEvent, self);\n\t            }else{\n\t                document.getElementById(self.opt.input).addEventListener('change',  function(evt) { self._displayAlignments(evt, self) }, false);\n\t            } \n\t        },\n\t        \n\t        /**\n\t         * Default values for the options\n\t         * @name Biojs.blasterjs-opt\n\t         */\n\t        opt : {\n\t             input: \"blastinput\",\n\t             multipleAlignments: \"blast-multiple-alignments\",\n\t             alignmentsTable: \"blast-alignments-table\",\n\t             singleAlignment: \"blast-single-alignment\"\n\t        },\n\t        \n\t        /**\n\t         * Private: Read and display BLAST alignments.\n\t         * @ignore\n\t         */\n\t        _displayAlignments : function(evt, self) {\n\t            if (window.File && window.FileReader && window.FileList && window.Blob) {\n\t                var f = evt.target.files[0];\n\t                if (f) {\n\t                    var r = new FileReader();\n\t                    r.onload = function(e) { \n\t                        var queryLenght = getQueryLenght(e.target.result); \n\t                        var alignments  = getAlignments(e.target.result);\n\t                        createAlignmentComparison(alignments, queryLenght, true, self);\n\t                        createAlignmentTable(alignments, self);\n\t                        var hsps = alignments[0].hsp.length;\n\t                        createSingleAlignment(alignments[0], self, hsps, 0);\n\t                    }\n\t                    r.readAsText(f);\n\t                } else { \n\t                    alert('Failed to load file');\n\t                }\n\t            } else {\n\t              alert('The File APIs are not fully supported by your browser.');\n\t            }  \n\t        \n\t            function BlastAlignment (description,\n\t                                    length,\n\t                                    totalScore,\n\t                                    queryCover,\n\t                                    hsp){                \n\t                this.description  = description;\n\t                this.length       = length;\n\t                this.totalScore   = totalScore;\n\t                this.queryCover   = queryCover;\n\t                this.hsp          = hsp;\n\t            }\n\t\n\t            function HSP (score,\n\t                          eValue,\n\t                          identities,\n\t                          positives,\n\t                          gaps,\n\t                          queryStart,\n\t                          query,\n\t                          queryEnd,\n\t                          comparison,\n\t                          subjectStart,\n\t                          subject,\n\t                          subjectEnd ){\n\t                this.score        = score;\n\t                this.eValue       = eValue;\n\t                this.identities   = identities;\n\t                this.positives    = positives;\n\t                this.gaps         = gaps;\n\t                this.queryStart   = queryStart;\n\t                this.query        = query;\n\t                this.queryEnd     = queryEnd;\n\t                this.comparison   = comparison;\n\t                this.subjectStart = subjectStart;\n\t                this.subject      = subject;\n\t                this.subjectEnd   = subjectEnd;                \n\t            }\n\t            \n\t            String.prototype.startsWith = function(prefix) {\n\t                return this.indexOf(prefix) === 0;\n\t            }\n\t\n\t            function getQueryLenght(content){\n\t                var lines = content.split('\\n');\n\t                var length = 0;\n\t                for (var i = 0; i < lines.length; i++){\n\t                    if(lines[i].startsWith('Length=')){\n\t                        length = lines[i].split('=')[1];\n\t                        break;\n\t                    }\n\t                }\n\t                return length;\n\t            }\n\t\n\t            function getAlignments(content){\n\t                var lines = content.split('\\n');\n\t                return parseBlastText(content);  \n\t            }\n\t\n\t            function parseBlastText(content){\n\t                var lines = content.split('\\n');\n\t                var alignments = [];\n\t                for (var i = 0; i < lines.length; i++){\n\t                    if(lines[i].startsWith('>')){\n\t                        var line1 = lines[i].split('>')[1];\n\t                        var line2 = \"\";\n\t                        var currentLine = i;\n\t                        while (line2 == \"\"){\n\t                            currentLine = currentLine +1;\n\t                            if(lines[currentLine].startsWith('Length=')){\n\t                                line2 = lines[currentLine];\n\t                            }else{\n\t                                line1 += lines[currentLine];\n\t                            }\n\t                        }\n\t                        var description  = line1;\n\t                        var length       = line2.split('=')[1];\n\t                        var hsps = [];\n\t                        var multiple = false;\n\t                        do{\n\t                            if(multiple){\n\t                                currentLine = currentLine-1;   \n\t                            }\n\t                            if(lines[currentLine+2].startsWith(' Features in this part of subject sequence:')){                \n\t                                currentLine = currentLine+3;\n\t                            }\n\t                            var score = lines[currentLine+2].split(',')[0].replace(/\\s\\s+/g, ' ').split(' ')[3];\n\t                            var eValue       = lines[currentLine+2].split(',')[1].split(' ')[4];\n\t                            var identities   = lines[currentLine+3].split(',')[0].split('(')[1].substr(0, lines[currentLine+3].split(',')[0].split('(')[1].length-2);\n\t                            if(lines[0].startsWith('BLASTN')){\n\t                                var positives = 'N/A';\n\t                                var gaps    = lines[currentLine+3].split(',')[1].split('(')[1].substr(0, lines[currentLine+3].split(',')[1].split('(')[1].length-2);\n\t                            }else{\n\t                                var positives    = lines[currentLine+3].split(',')[1].split('(')[1].substr(0, lines[currentLine+3].split(',')[1].split('(')[1].length-2);\n\t                                var gaps         = lines[currentLine+3].split(',')[2].split('(')[1].substr(0, lines[currentLine+3].split(',')[2].split('(')[1].length-2);\n\t                            }\n\t                            if(lines[currentLine+4].split(',')[0].split(' ')[1] == 'Frame' || lines[currentLine+4].startsWith(' Strand')){\n\t                                currentLine = currentLine+1;   \n\t                            }\n\t                            var queryStart = lines[currentLine+5].substring(5).replace(/^\\s+/g, '').split(' ')[0];\n\t                            var query = lines[currentLine+5].substring(5).replace(/\\s+/g, '').replace(/[0-9]/g, '');\n\t                            var queryEnd = lines[currentLine+5].substring(5).replace(/^\\s+/g, '').split(' ')[lines[currentLine+5].substring(5).replace(/^\\s+/g, '').split(' ').length-1];\n\t                            var comparison = lines[currentLine+6].replace(/^\\s+/g, ''); \n\t                            var sbjctStart = lines[currentLine+7].substring(5).replace(/^\\s+/g, '').split(' ')[0];\n\t                            var sbjct = lines[currentLine+7].substring(5).replace(/\\s+/g, '').replace(/[0-9]/g, '');\n\t                            var sbjctEnd = lines[currentLine+7].substring(5).replace(/^\\s+/g, '').split(' ')[lines[currentLine+7].substring(5).replace(/^\\s+/g, '').split(' ').length-1];\n\t\n\t                            currentLine = currentLine+9;\n\t                            while (lines[currentLine].startsWith('Query')){\n\t                                var nextQuery = lines[currentLine].substring(5).replace(/\\s+/g, '').replace(/[0-9]/g, '');\n\t                                query += nextQuery;\n\t                                queryEnd = lines[currentLine].substring(5).replace(/^\\s+/g, '').split(' ')[lines[currentLine].substring(5).replace(/^\\s+/g, '').split(' ').length-1];\n\t                                sbjct += lines[currentLine+2].substring(5).replace(/\\s+/g, '').replace(/[0-9]/g, '');\n\t                                sbjctEnd = lines[currentLine+2].substring(5).replace(/^\\s+/g, '').split(' ')[lines[currentLine+2].substring(5).replace(/^\\s+/g, '').split(' ').length-1];\n\t\n\t                                var nextComparison = lines[currentLine+1].replace(/^\\s+/g, '');\n\t                                if(nextQuery.length > nextComparison.length){\n\t                                    var diference = nextQuery.length-nextComparison.length;\n\t                                    for(var j = 0; j < diference; j++){\n\t                                        nextComparison = ' '+nextComparison;   \n\t                                    }\n\t                                }\n\t                                comparison += nextComparison;\n\t                                currentLine = currentLine+4;\n\t                            }\n\t                            var hsp = new HSP(score, eValue, identities, positives, gaps, queryStart, query, queryEnd, comparison, sbjctStart, sbjct, sbjctEnd);\n\t                            hsps.push(hsp);\n\t                            multiple = true;\n\t                        }while(lines[currentLine+1].startsWith(' Score'));\n\t                        var totalScore = parseFloat(hsps[0].score);\n\t                        for(var x = 1; x< hsps.length; x++){\n\t                            totalScore = totalScore + parseFloat(hsps[x].score);   \n\t                        }\n\t                        var alignment = new BlastAlignment( description, length, totalScore.toFixed(1), getQueryCover(hsps, getQueryLenght(content)), hsps);\n\t                        alignments.push(alignment);\n\t                    }\n\t                }\n\t                return alignments;\n\t            }\n\t\n\t            function getQueryCover(hsps, length){\n\t                var cover = 0;\n\t                var noOver = getHSPWithoutOverlapping(hsps);\n\t                for(var i=0; i<noOver.length; i++){\n\t                    cover = cover + parseInt(100 * (noOver[i].end - noOver[i].start +1) / length);               \n\t                }\n\t                return  cover;   \n\t            }\n\t            \n\t            function getHSPWithoutOverlapping(hsps){\n\t                var hspNoOver=[];\n\t                for(var i=0; i<hsps.length; i++){\n\t                    hspNoOver.push({start:parseInt(hsps[i].queryStart),end:parseInt(hsps[i].queryEnd)});                    \n\t                }\n\t                return getNoOverlappingArray(partitionIntoOverlappingRanges(hspNoOver));\n\t            }\n\t            \n\t            function partitionIntoOverlappingRanges(array) {\n\t              array.sort(function (a,b) {\n\t                if (a.start < b.start)\n\t                  return -1;\n\t                if (a.start > b.start)\n\t                  return 1;\n\t                return 0;\n\t              });\n\t              var getMaxEnd = function(array) {\n\t                if (array.length==0) return false;\n\t                array.sort(function (a,b) {\n\t                  if (a.end < b.end)\n\t                    return 1;\n\t                  if (a.end > b.end)\n\t                    return -1;\n\t                  return 0;\n\t                });\n\t                return array[0].end;    \n\t              };\n\t              var rarray=[];\n\t              var g=0;\n\t              rarray[g]=[array[0]];\n\t\n\t              for (var i=1,l=array.length;i<l;i++) {\n\t                if ( (array[i].start>=array[i-1].start)\n\t                     &&\n\t                     (array[i].start<getMaxEnd(rarray[g]))\n\t                ) {    \n\t                  rarray[g].push(array[i]);\n\t                } else {\n\t                  g++;   \n\t                  rarray[g]=[array[i]];\n\t                }\n\t              }\n\t              return rarray;\n\t            }\n\t            \n\t            function getNoOverlappingArray(array){\n\t                var result = [];\n\t                for(var i=0; i<array.length; i++){\n\t                    var start=array[i][0].start;\n\t                    var end= array[i][0].end;\n\t                    for(var j=0; j<array[i].length; j++){\n\t                        if(array[i][j].start<start)\n\t                            start = array[i][j].start;\n\t                        if(array[i][j].end>end)\n\t                            end = array[i][j].end;\n\t                    }\n\t                    result.push({start:start,end:end});\n\t                }\n\t                return result;\n\t            }\n\t            \n\t            function getColor(colored, score){\n\t                var colorNb; \n\t                if (score<40){\n\t                    colorNb=1;\n\t                }else if (score>=40 && score<50){\n\t                    colorNb=2;\n\t                }else if (score>=50 && score<80){\n\t                    colorNb=3;\n\t                }else if (score>=80 && score<200){\n\t                    colorNb=4\n\t                }else {\n\t                    colorNb=5;\n\t                } \n\t                 return getDivColor(colored, colorNb);\n\t            }\n\t\n\t            function getDivColorText(div){\n\t                switch(div) {\n\t                    case 1:\n\t                        return '<40';\n\t                        break;\n\t                    case 2:\n\t                        return '40-50';\n\t                        break;\n\t                    case 3:\n\t                        return '50-80';\n\t                        break;\n\t                    case 4:\n\t                        return '80-200';\n\t                        break;\n\t                    case 5:\n\t                        return '>=200';\n\t                        break;\n\t                    default:\n\t                        return '0';\n\t                }\n\t            }\n\t\n\t            function getDivColor(colored, div){\n\t                if(colored){\n\t                    switch(div) {\n\t                        case 1:\n\t                            return '#5C6D7E';\n\t                            break;\n\t                        case 2:\n\t                            return '#9B59B6';\n\t                            break;\n\t                        case 3:\n\t                            return '#5CACE2';\n\t                            break;\n\t                        case 4:\n\t                            return '#57D68D';\n\t                            break;\n\t                        case 5:\n\t                            return '#C0392B';\n\t                            break;\n\t                        default:\n\t                            return '#FFF';\n\t                    }\n\t                }else{\n\t                    switch(div) {\n\t                        case 1:\n\t                            return '#BCBCBC';\n\t                            break;\n\t                        case 2:\n\t                            return '#989898';\n\t                            break;\n\t                        case 3:\n\t                            return '#747474';\n\t                            break;\n\t                        case 4:\n\t                            return '#565656';\n\t                            break;\n\t                        case 5:\n\t                            return '#343434';\n\t                            break;\n\t                        default:\n\t                            return '#FFF';\n\t                    }\n\t                }\n\t            }\n\t\n\t            function selectAlignment(alignment){\n\t                var item = document.getElementById(alignment).parentElement.parentElement;\n\t                var items = document.getElementsByClassName('alignment-table-description');\n\t                var i;\n\t                for (i = 0; i < items.length; i++) {\n\t                    items[i].style.fontWeight = 'normal';\n\t                    items[i].parentElement.parentElement.style.fontWeight = 'normal';\n\t                }\n\t                item.style.fontWeight = 'bold';\n\t                document.getElementById(alignment).style.fontWeight = 'bold';\n\t            }\n\t\n\t            function createColorsDiv(colored){\n\t                var container  = document.createElement('div');\n\t                var divSpace   = document.createElement('div');\n\t                var divClear   = document.createElement('div');\n\t                container.style.color = '#EEE';\n\t                divSpace.style.minWidth  = '50px';\n\t                divSpace.style.minHeight = '10px';\n\t                divSpace.style.float     = 'left';\n\t                container.appendChild(divSpace);\n\t                for(var i = 1; i <= 5; i++){\n\t                    var div = document.createElement('div');\n\t                    div.style.minWidth        = '100px';\n\t                    div.style.textAlign       = 'center';\n\t                    div.style.float           = 'left';        \n\t                    div.innerHTML             = getDivColorText(i).bold();\n\t                    div.style.backgroundColor = getDivColor(colored, i);\n\t                    container.appendChild(div);\n\t                }\n\t                divClear.style.clear = 'both';\n\t                container.appendChild(divClear);\n\t                return container;\n\t            }\n\t\n\t            function createQueryDiv(colored){\n\t                var container  = document.createElement('div');\n\t                var divSpace   = document.createElement('div');\n\t                var divQuery   = document.createElement('div');\n\t                var divClear   = document.createElement('div');\n\t                container.style.marginTop = '3px';\n\t                container.style.color     = '#5C6D7E';\n\t                container.style.fontSize  = '10px';\n\t                divSpace.style.width = '50px';\n\t                divSpace.innerHTML   = 'QUERY'.bold();\n\t                divSpace.style.float = 'left';\n\t                divQuery.style.width     = '500px';\n\t                divQuery.style.height    = '10px';\n\t                divQuery.style.float     = 'left';\n\t                divQuery.style.marginTop = '2px';\n\t                divClear.style.clear = 'both';\n\t                if(colored){\n\t                    divQuery.style.backgroundColor = '#C0392B'; \n\t                } else{\n\t                    divQuery.style.backgroundColor = '#343434';         \n\t                }\n\t                container.appendChild(divSpace);\n\t                container.appendChild(divQuery);\n\t                container.appendChild(divClear);\n\t                return container;\n\t            }\n\t\n\t            function createNumbersDiv(lenght){\n\t                var container    = document.createElement('div');\n\t                var divSpace     = document.createElement('div');\n\t                var divNumbers   = document.createElement('div');\n\t                var divClear     = document.createElement('div');\n\t                container.style.marginBottom = '5px';\n\t                container.style.fontSize     = '11px';\n\t                divSpace.style.minWidth  = '50px';\n\t                divSpace.style.minHeight = '10px';\n\t                divSpace.style.float     = 'left';    \n\t                divNumbers.style.float = 'left';\n\t                divClear.style.clear = 'both';  \n\t                divNumbers = divideDivNumbers(divNumbers, lenght);  \n\t                container.appendChild(divSpace);\n\t                container.appendChild(divNumbers);\n\t                container.appendChild(divClear);\n\t                return container;\n\t            }\n\t\n\t            function divideDivNumbers(container, lenght){\n\t                var divClear = document.createElement('div');\n\t                if(lenght > 4){\n\t                    if(lenght % 5 == 0){\n\t                        container = createDivisionsDivNumbers(container, 5, lenght/5, 100);\n\t                    }else{\n\t                        var pixels = 500/(5+((lenght%5)/5));\n\t                        container = createDivisionsDivNumbers(container, 5, parseInt(lenght/5), parseInt(pixels));            \n\t                        //Podemos hacerlo o no\n\t                        var pxrest = parseInt(500-(pixels*5));\n\t                        var div = document.createElement('div');\n\t                        div.style.float = 'left';\n\t                        div.style.width = pxrest+'px';\n\t                        div.style.textAlign = 'right';\n\t                        div.innerHTML = lenght;\n\t                        container.appendChild(div);\n\t                    }\n\t                }else{\n\t                    container = createDivisionsDivNumbers(container, lenght, 1, parseInt(500/lenght));\n\t                }    \n\t                divClear.style.clear = 'both'; \n\t                container.appendChild(divClear);\n\t                return container;\n\t            }\n\t\n\t            function createDivisionsDivNumbers(container, divisions, size, pixels){\n\t                for(var i = 0; i<divisions; i++){\n\t                    if(i == 0){\n\t                        var px2  = pixels/2;\n\t                        var div1 = document.createElement('div');\n\t                        var div2 = document.createElement('div');\n\t                        div1.style.float     = 'left';\n\t                        div1.style.width     = px2+'px';\n\t                        div1.style.textAlign = 'left';\n\t                        div1.innerHTML       = '0';\n\t                        div2.style.float     = 'left';\n\t                        div2.style.width     = px2+'px';\n\t                        div2.style.textAlign = 'right';\n\t                        div2.innerHTML       = size*(i+1);\n\t                        container.appendChild(div1); \n\t                        container.appendChild(div2); \n\t                    }else{\n\t                        var div = document.createElement('div');\n\t                        div.style.float     = 'left';\n\t                        div.style.width     = pixels+'px';\n\t                        div.style.textAlign = 'right';\n\t                        div.innerHTML       = size*(i+1);\n\t                        container.appendChild(div);\n\t                    }\n\t                }\n\t                return container;\n\t            }\n\t\n\t\n\t            function createHeader(container, colored, lenght){   \n\t                var text    = document.createElement('div');\n\t                var colors  = createColorsDiv(colored);\n\t                var query   = createQueryDiv(colored);\n\t                var numbers = createNumbersDiv(lenght);\n\t                text.style.color         = '#5C6D7E';\n\t                text.style.textAlign     = 'center';\n\t                text.style.paddingBottom = '5px';\n\t                text.innerHTML           = 'COLOR KEY FOR ALIGNMENT SCORES'.bold();\n\t                container.appendChild(text);\n\t                container.appendChild(colors);\n\t                container.appendChild(query);\n\t                container.appendChild(numbers);\n\t                return container;\n\t            }\n\t            \n\t            function createBody(alignments, queryLenght, container, colored){\n\t                var alignmentContainer = document.createElement('div');\n\t                alignmentContainer.style.paddingBottom = '10px';\n\t                for(var i = 0; i < alignments.length; i++){\n\t                    var alignment = createAlignmentDiv(getColor(colored, alignments[i].hsp[0].score), alignments[i], queryLenght);\n\t                    alignment.style.marginBottom = '4px';\n\t                    alignmentContainer.appendChild(alignment);\n\t                }\n\t                container.appendChild(alignmentContainer);\n\t                return container;\n\t            }\n\t                        \n\t            function createAlignmentDiv(color, alignment, queryLenght){ \n\t                var noOver = getHSPWithoutOverlapping(alignment.hsp);\n\t                \n\t                var container = document.createElement('div');\n\t                var divClear  = document.createElement('div');\n\t                container.style.minHeight = '12px';\n\t                \n\t                for(var i =0; i<noOver.length; i++){\n\t                    var white = document.createElement('div');\n\t                    var colored = document.createElement('div');\n\t                    var link = document.createElement('a');\n\t                    if(i==0){\n\t                        if(noOver[0].start == 1)                           \n\t                           var init = parseInt(50+((500*(noOver[0].start-1))/queryLenght));\n\t                        else\n\t                            var init = parseInt(50+((500*(noOver[0].start))/queryLenght));\n\t                        var offset = parseInt(550-init-(500*(queryLenght-noOver[0].end)/queryLenght));\n\t                    }else{\n\t                        var  init = parseInt((500*(noOver[i].start-noOver[i-1].end)/queryLenght));\n\t                        var offset = parseInt((500*(noOver[i].end-noOver[i].start)/queryLenght));\n\t                    }\n\t                    white.style.width           = init+'px';\n\t                    white.style.minHeight       = '4px';\n\t                    white.style.float           = 'left';\n\t                    colored.style.width           = offset+'px';\n\t                    colored.style.minHeight       = '12px';\n\t                    colored.style.float           = 'left';\n\t                    colored.style.backgroundColor =  color;    \n\t                    colored.onmouseout            = function(){document.getElementById('defline').value=' Mouse over to show defline and scores, click to show alignments';};\n\t                    colored.onmouseover           = function(){document.getElementById('defline').value=' '+alignment.description+'. S='+alignment.score+' E='+alignment.eValue;};\n\t                    \n\t                    \n\t                    link.href = '#'+alignment.description.split(' ')[0];  \n\t                    link.onclick=function(){ selectAlignment(alignment.description.split(' ')[0]); };\n\t                    link.appendChild(colored);\n\t                    container.appendChild(white);\n\t                    container.appendChild(link);\n\t                }\n\t                divClear.style.clear = 'both';\n\t                container.appendChild(divClear);\n\t                return container;\n\t            }\n\t\n\t            function createChangeColorButton(alignments, lenght, colored, self){\n\t                var button = document.createElement('button');\n\t                button.id                = 'changeColors';\n\t                button.className         = 'btn';\n\t                button.style.marginRight = '10px';\n\t                button.style.marginTop   = '5px';\n\t                if(colored == true){\n\t                    var text = document.createTextNode('Click to change colors to grayscale');\n\t                }else{\n\t                    var text = document.createTextNode('Click to change colors to full colored');\n\t                }\n\t                button.appendChild(text);\n\t                button.onclick=function(){ changeColors(alignments, lenght, button, colored, self); };\n\t                return button;\n\t            }\n\t\n\t            function createDownloadButton(){\n\t                var button = document.createElement('button');\n\t                button.id              = 'downloadAlignments';\n\t                button.className       = 'btn';\n\t                button.style.marginTop = '5px';\n\t                var text = document.createTextNode('Download as image'); \n\t                button.appendChild(text); \n\t                button.addEventListener('click', downloadAlignmentsImg);\n\t                return button;\n\t            }\n\t\n\t            function changeColors(alignments, lenght, button, colored, self){   \n\t                if(colored == true){\n\t                    colored = false;\n\t                }else{\n\t                    colored = true;   \n\t                }\n\t                button.removeChild(button.childNodes[0]);\n\t                var blastDiv = document.getElementById(self.opt.multipleAlignments);\n\t                while (blastDiv.firstChild) {\n\t                    blastDiv.removeChild(blastDiv.firstChild);\n\t                }\n\t                createAlignmentComparison(alignments, lenght, colored, self);\n\t            }\n\t\n\t            function downloadAlignmentsImg(){\n\t                var buttons   = document.getElementById('blast-multiple-alignments-buttons');\n\t                var input     = document.getElementById('defline');\n\t                var container = document.getElementById('alignments-container');\n\t                container.removeChild(buttons);\n\t                container.removeChild(input);\n\t                html2canvas(container, {\n\t                  onrendered: function(canvas) {\n\t                    document.body.appendChild(canvas);\n\t                    var a = document.createElement('a');\n\t                    document.body.appendChild(a);\n\t                    a.href     = canvas.toDataURL('img/png');\n\t                    a.download = 'alignments.png';\n\t                    a.click();\n\t                    document.body.removeChild(canvas);\n\t                    document.body.removeChild(a);\n\t                    container.appendChild(input);\n\t                    container.appendChild(buttons);\n\t                  }\n\t                });   \n\t            }\n\t\n\t            function createAlignmentComparison(alignments, queryLenght, colored, self){\n\t                var blastDiv  = document.getElementById(self.opt.multipleAlignments);\n\t                while(blastDiv.hasChildNodes()){\n\t                    blastDiv.removeChild(blastDiv.firstChild);\t\n\t                }\n\t                var container        = document.createElement('div');\n\t                var containerButtons = document.createElement('div');\n\t                var input            = document.createElement('input');\n\t                var buttonColors     = createChangeColorButton(alignments, queryLenght, colored, self);\n\t                var buttonDownload   = createDownloadButton();\n\t                blastDiv.style.paddingTop = '20px';\n\t                input.id    = 'defline';\n\t                input.name  = 'defline';\n\t                input.type  = 'text';\n\t                input.value = ' Mouse over to show defline and scores, click to show alignments';\n\t                input.style.width   = '556px';\n\t                input.style.padding = '1px';\n\t                input.style.border  = 0;\n\t                input.style.cursos  = 'auto';    \n\t                container.id                    = 'alignments-container';\n\t                container.style.border          = 'thin solid #DDD';\n\t                container.style.margin          = '0 auto';\n\t                container.style.padding         = '10px';\n\t                container.style.maxWidth        = '580px';\n\t                container.style.backgroundColor = '#FFF';\n\t                container = createHeader(container, colored, queryLenght);\n\t                container = createBody(alignments, queryLenght, container, colored);\n\t                container.appendChild(input);    \n\t                containerButtons.style.textAlign = 'right';\n\t                containerButtons.id              = 'blast-multiple-alignments-buttons';\n\t                blastDiv.style.minWidth        = '580px';\n\t                containerButtons.appendChild(buttonColors); \n\t                containerButtons.appendChild(buttonDownload);   \n\t                container.appendChild(containerButtons);\n\t                blastDiv.appendChild(container);\n\t            }\n\t\n\t            function createTableHeader(){\n\t                var table       = document.createElement('table');\n\t                var thead       = document.createElement('thead');\n\t                var theadTr     = document.createElement('tr');\n\t                var theadDesc   = document.createElement('th');\n\t                var theadScore  = document.createElement('th');\n\t                var theadEval   = document.createElement('th');\n\t                var theadIdent  = document.createElement('th');\n\t                var theadPos    = document.createElement('th');\n\t                var theadGaps   = document.createElement('th');\n\t                table.className = \"table table-striped\";\n\t                theadDesc.innerHTML  = 'Description'.bold();\n\t                theadScore.innerHTML = 'Max score'.bold();\n\t                theadEval.innerHTML  = 'Total score'.bold();\n\t                theadIdent.innerHTML = 'Query cover'.bold();\n\t                theadPos.innerHTML   = 'E value'.bold();\n\t                theadGaps.innerHTML  = 'Identities'.bold();\n\t                theadTr.appendChild(theadDesc);\n\t                theadTr.appendChild(theadScore);\n\t                theadTr.appendChild(theadEval);\n\t                theadTr.appendChild(theadIdent);\n\t                theadTr.appendChild(theadPos);\n\t                theadTr.appendChild(theadGaps);\n\t                thead.appendChild(theadTr);\n\t                table.appendChild(thead);\n\t                return table;\n\t            }\n\t\n\t            function createTableButtons(alignments){\n\t                var container = document.createElement('div');\n\t                var butCSV    = document.createElement('button');\n\t                var butImg    = document.createElement('button');\n\t                container.style.textAlign = 'right';    \n\t                butCSV.style.marginRight = '10px';\n\t                butCSV.className         = 'btn';\n\t                butCSV.innerHTML         = 'Download as csv';\n\t                butCSV.onclick           = function(){ downloadTableCSV(alignments); };\n\t                butImg.className = 'btn';\n\t                butImg.innerHTML = 'Download as image';\n\t                butImg.onclick   = function(){ downloadTableImg(); };\n\t                container.appendChild(butCSV);\n\t                container.appendChild(butImg);\n\t                return container;\n\t            }\n\t\n\t            function createAlignmentTable(alignments, self){\n\t                var tableDiv     = document.getElementById(self.opt.alignmentsTable);\n\t                while(tableDiv.hasChildNodes()){\n\t                    tableDiv.removeChild(tableDiv.firstChild);\t\n\t                }\n\t                var imgContainer = document.createElement('div');\n\t                var butContainer = createTableButtons(alignments);\n\t                var table        = createTableHeader();\n\t                var tbody        = document.createElement('tbody');\n\t                tableDiv.style.paddingTop = '50px';\n\t                imgContainer.style.backgroundColor = '#FFF';\n\t                imgContainer.id                    = 'blast-alignments-table-img';\n\t                for(var i = 0; i < alignments.length; i++){\n\t                    var tr           = document.createElement('tr');\n\t                    var tdDesc       = document.createElement('td');\n\t                    var butDesc      = document.createElement('button');\n\t                    butDesc.alignment = alignments[i];\n\t                    butDesc.onclick   = function(){ \n\t                        if (self.opt.callback) {\n\t                            self.opt.callback(this.alignment);\n\t                        }else{\n\t                            location.href='#'+self.opt.singleAlignment;\n\t                            createSingleAlignment(this.alignment, self, this.alignment.hsp.length, 0);  \n\t                        }\n\t                    };\n\t                    butDesc.id        = alignments[i].description.split(\" \")[0];\n\t                    butDesc.innerHTML = alignments[i].description;\n\t                    butDesc.style.border = 0;\n\t                    butDesc.style.padding = 0;\n\t                    butDesc.style.display = 'inline';\n\t                    butDesc.style.background = 'none';\n\t                    butDesc.className = 'alignment-table-description';\n\t                    tdDesc.appendChild(butDesc);\n\t                    var tdScore       = document.createElement('td');\n\t                    tdScore.innerHTML = alignments[i].hsp[0].score;\n\t                    var tdEval       = document.createElement('td');\n\t                    tdEval.innerHTML = alignments[i].totalScore;\n\t                    var tdIdent       = document.createElement('td');\n\t                    tdIdent.innerHTML = alignments[i].queryCover+\"%\";\n\t                    var tdPos       = document.createElement('td');\n\t                    tdPos.innerHTML = alignments[i].hsp[0].eValue;\n\t                    var tdGaps       = document.createElement('td');\n\t                    tdGaps.innerHTML = alignments[i].hsp[0].identities+\"%\";\n\t                    tr.appendChild(tdDesc);\n\t                    tr.appendChild(tdScore);\n\t                    tr.appendChild(tdEval);\n\t                    tr.appendChild(tdIdent);\n\t                    tr.appendChild(tdPos);\n\t                    tr.appendChild(tdGaps);\n\t                    tbody.appendChild(tr);\n\t                }\n\t                table.appendChild(tbody);\n\t                imgContainer.appendChild(table);\n\t                tableDiv.appendChild(imgContainer);\n\t                tableDiv.appendChild(butContainer);\n\t            }\n\t\n\t            function downloadTableImg(){\n\t                var items = document.getElementsByClassName('alignment-table-description');\n\t                var i;\n\t                for (i = 0; i < items.length; i++) {\n\t                    items[i].style.fontWeight = 'normal';\n\t                    items[i].parentElement.parentElement.style.fontWeight = 'normal';\n\t                }\n\t                var container = document.getElementById('blast-alignments-table-img');\n\t                html2canvas(container, {\n\t                  onrendered: function(canvas) {\n\t                    document.body.appendChild(canvas);\n\t                    var a = document.createElement('a');\n\t                    document.body.appendChild(a);\n\t                    a.href = canvas.toDataURL('img/png');\n\t                    a.download = 'alignments-table.png';\n\t                    a.click();\n\t                    document.body.removeChild(canvas);\n\t                    document.body.removeChild(a);\n\t                  }\n\t                });   \n\t            }\n\t\n\t            function downloadTableCSV(alignments){\n\t                var csvContent = 'data:text/csv;charset=utf-8,';\n\t                csvContent += 'Description; Score; eValue; Identities; Positives; Gaps\\n';\n\t\n\t                for(var i = 0; i < alignments.length; i++){\n\t                    csvContent += alignments[i].description;\n\t                    csvContent += '; ';\n\t                    csvContent += alignments[i].hsp[0].score;\n\t                    csvContent += '; ';\n\t                    csvContent += alignments[i].hsp[0].eValue;\n\t                    csvContent += '; ';\n\t                    csvContent += alignments[i].hsp[0].identities;\n\t                    csvContent += '; ';\n\t                    csvContent += alignments[i].hsp[0].positives;\n\t                    csvContent += '; ';\n\t                    csvContent += alignments[i].hsp[0].gaps;\n\t                    csvContent += '\\n';\n\t                }\n\t                var encodedUri = encodeURI(csvContent);\n\t                var link = document.createElement('a');\n\t                link.setAttribute('href', encodedUri);\n\t                link.setAttribute('download', 'alignments-table.csv');\n\t                link.click(); \n\t            }\n\t\n\t            function createSingleAlignment(alignment, self, hsps, hsp){\n\t                var alignmentDiv = document.getElementById(self.opt.singleAlignment);\n\t                while(alignmentDiv.hasChildNodes()){\n\t                    alignmentDiv.removeChild(alignmentDiv.firstChild);\t\n\t                }\n\t\n\t                var alignmentPre = document.createElement('pre');\n\t                var alignmentContainer = document.createElement('div');\n\t                var buttonDownload = document.createElement('button');\n\t                var span = document.createElement('span');   \n\t                var statsDiv = document.createElement('div');\n\t                var scoreDiv = document.createElement('div');\n\t                var expectedDiv = document.createElement('div');\n\t                var identitiesDiv = document.createElement('div');\n\t                var positivesDiv = document.createElement('div');\n\t                var gapsDiv = document.createElement('div');\n\t                var divClear  = document.createElement('div');\n\t                var queryDiv      = createSingleQueryDiv(alignment.hsp[hsp].query, alignment.hsp[hsp].queryStart, alignment.hsp[hsp].queryEnd);\n\t                var comparisonDiv = createSingleComparisonDiv(alignment.hsp[hsp].comparison);\n\t                var subjectDiv    = createSingleSubjectDiv(alignment.hsp[hsp].subject, alignment.hsp[hsp].subjectStart, alignment.hsp[hsp].subjectEnd); \n\t\n\t                alignmentPre.style.color         = '#2c3e50';\n\t                alignmentPre.style.paddingTop    = '25px';\n\t                alignmentPre.style.paddingBottom = '40px';\n\t                alignmentPre.style.textAlign     = 'left';\n\t                alignmentPre.style.fontFamily    = 'Helvetica,Arial,sans-serif';\n\t                alignmentPre.id                  = 'blast-single-alignment-pre';\n\t                alignmentContainer.style.margin     = '0 auto';\n\t                alignmentContainer.style.display    = 'table';\n\t                alignmentContainer.style.paddingTop = '30px';\n\t                alignmentDiv.style.textAlign  = 'right';\n\t                alignmentDiv.style.paddingTop = '50px';\n\t                buttonDownload.className = 'btn';\n\t                buttonDownload.innerHTML = 'Download as image';\n\t                buttonDownload.onclick   = function(){ downloadSingleAlignmentImg(alignment); };\n\t                span.innerHTML         = alignment.description;\n\t                span.style.paddingLeft = '15px';\n\t                span.style.fontWeight  = 'bold';\n\t                span.style.fontSize    = '15px';\n\t                span.style.fontFamily  =  'Helvetica,Arial,sans-serif';\n\t                \n\t                \n\t                statsDiv.style.paddingTop = '20px';\n\t                statsDiv.style.fontSize    = '14px';\n\t                statsDiv.style.textAlign = 'center';\n\t                statsDiv.style.fontFamily  =  'Helvetica,Arial,sans-serif';\n\t                statsDiv.style.display = 'table';\n\t                statsDiv.style.margin = '0px auto';\n\t                statsDiv.style.width = '100%';\n\t                scoreDiv.innerHTML = '<b>Score:</b></br>'+alignment.hsp[hsp].score;\n\t                scoreDiv.style.float = 'left';\n\t                scoreDiv.style.width = \"20%\";\n\t                expectedDiv.innerHTML = '<b>Expect:</b></br>'+alignment.hsp[hsp].eValue;\n\t                expectedDiv.style.float = 'left';\n\t                expectedDiv.style.width = \"20%\";\n\t                identitiesDiv.innerHTML = '<b>Identities:</b></br>'+alignment.hsp[hsp].identities+'%';\n\t                identitiesDiv.style.float = 'left';\n\t                identitiesDiv.style.width = \"20%\";\n\t                positivesDiv.innerHTML = '<b>Positives:</b></br>'+alignment.hsp[hsp].positives+'%';\n\t                positivesDiv.style.float = 'left';\n\t                positivesDiv.style.width = \"20%\";\n\t                gapsDiv.innerHTML = '<b>Gaps:</b></br>'+alignment.hsp[hsp].gaps+'%';\n\t                gapsDiv.style.float = 'left';\n\t                gapsDiv.style.width = \"20%\";\n\t                divClear.style.clear = 'both';\n\t\n\t                statsDiv.appendChild(scoreDiv);\n\t                statsDiv.appendChild(expectedDiv);\n\t                statsDiv.appendChild(identitiesDiv);\n\t                statsDiv.appendChild(positivesDiv);\n\t                statsDiv.appendChild(gapsDiv);\n\t                statsDiv.appendChild(divClear);\n\t                \n\t                alignmentContainer.appendChild(queryDiv);\n\t                alignmentContainer.appendChild(comparisonDiv);\n\t                alignmentContainer.appendChild(subjectDiv);\n\t                alignmentPre.appendChild(span);\n\t                alignmentPre.appendChild(statsDiv);\n\t                alignmentPre.appendChild(alignmentContainer);\n\t                alignmentDiv.appendChild(alignmentPre);\n\t                if(hsps > 1){\n\t                    var buttonNext = document.createElement('button');  \n\t                    buttonNext.className = 'btn';\n\t                    buttonNext.id = 'blast-single-alignment-next';\n\t                    buttonNext.innerHTML = 'Next HSP';\n\t                    buttonNext.style.marginTop = '5px';\n\t                    buttonNext.style.marginRight = '15px';\n\t                    buttonNext.style.float = 'right';\n\t                    if(hsp == hsps-1)\n\t                        var goTo = 0;\n\t                    else\n\t                        var goTo = hsp+1;\n\t                    buttonNext.onclick   = function(){ createSingleAlignment(alignment, self, hsps, goTo); }; \n\t                    alignmentPre.appendChild(buttonNext);\n\t                }\n\t                alignmentDiv.appendChild(buttonDownload);\n\t            }\n\t\n\t            function downloadSingleAlignmentImg(alignment){\n\t                var container = document.getElementById('blast-single-alignment-pre');                \n\t                var button = document.getElementById('blast-single-alignment-next');\n\t                if(typeof(button) != 'undefined' && button != null){   \n\t                    container.removeChild(button);\n\t                }\n\t                html2canvas(container, {\n\t                  onrendered: function(canvas) {                    \n\t                    document.body.appendChild(canvas);\n\t                    var a = document.createElement('a');\n\t                    document.body.appendChild(a);\n\t                    a.href = canvas.toDataURL('img/png');\n\t                    var tittle = alignment.description+'-alignment.png';\n\t                    a.download = tittle;\n\t                    a.click();\n\t                    document.body.removeChild(canvas);\n\t                    document.body.removeChild(a);\n\t                    if(typeof(button) != 'undefined' && button != null)\n\t                        container.appendChild(button);\n\t                  }\n\t                });   \n\t            }\n\t\n\t            function createSingleQueryDiv(query, start, end){\n\t                var textDiv  = document.createElement('div');\n\t                var startDiv = document.createElement('div');\n\t                var endDiv   = document.createElement('div');\n\t                var queryDiv = document.createElement('div');\n\t                textDiv.innerHTML         = 'Query'.bold();\n\t                textDiv.style.display     = 'inline-block';\n\t                textDiv.style.marginRight = '20px';\n\t                textDiv.style.textAlign   = 'right';\n\t                textDiv.style.width       = '55px';\n\t                startDiv.innerHTML = String(start).bold();\n\t                startDiv.style.display = 'inline-block';\n\t                startDiv.style.marginRight = '20px';\n\t                startDiv.style.width       = '25px';\n\t                endDiv.innerHTML         = String(end).bold();\n\t                endDiv.style.display     = 'inline-block';\n\t                endDiv.style.marginLeft  = '20px';\n\t                endDiv.style.marginRight = '70px';\n\t                queryDiv.appendChild(textDiv);\n\t                queryDiv.appendChild(startDiv);\n\t                for(var i = 0; i < query.length; i++){\n\t                    var div = document.createElement('div');\n\t                    div.style.backgroundColor = getAminoColor(query.charAt(i));\n\t                    div.innerHTML             = query.charAt(i).bold();\n\t                    div.style.width           = '18px';\n\t                    div.style.textAlign       = 'center';\n\t                    div.style.display         = 'inline-block';\n\t                    queryDiv.appendChild(div);\n\t                }\n\t                queryDiv.appendChild(endDiv);\n\t                return queryDiv;\n\t            }\n\t\n\t            function createSingleComparisonDiv(comparison){\n\t                var comparisonDiv = document.createElement('div');\n\t                var spaceDiv      = document.createElement('div');\n\t                spaceDiv.style.minWidth  = '120px';\n\t                spaceDiv.style.minHeight = '1px';\n\t                spaceDiv.style.display   = 'inline-block';\n\t                comparisonDiv.appendChild(spaceDiv);\n\t                for(var i = 0; i < comparison.length; i++){\n\t                    var div = document.createElement('div');\n\t                    div.style.backgroundColor = getAminoColor(comparison.charAt(i));\n\t                    div.innerHTML             = comparison.charAt(i).bold();\n\t                    div.style.width           = '18px';\n\t                    div.style.textAlign       = 'center';\n\t                    div.style.display         = 'inline-block';\n\t                    comparisonDiv.appendChild(div);\n\t                }\n\t                return comparisonDiv;\n\t            }\n\t\n\t            function createSingleSubjectDiv(subject, start, end){\n\t                var textDiv    = document.createElement('div');\n\t                var startDiv   = document.createElement('div');\n\t                var endDiv     = document.createElement('div');\n\t                var subjectDiv = document.createElement('div');\n\t                textDiv.innerHTML         = 'Subject'.bold();\n\t                textDiv.style.display     = 'inline-block';\n\t                textDiv.style.textAlign   = 'right';\n\t                textDiv.style.marginRight = '20px';\n\t                textDiv.style.width       = '55px';\n\t                startDiv.style.width       = '25px';\n\t                startDiv.innerHTML         = String(start).bold();\n\t                startDiv.style.display     = 'inline-block';\n\t                startDiv.style.marginRight = '20px';\n\t                endDiv.innerHTML         = String(end).bold();\n\t                endDiv.style.display     = 'inline-block';\n\t                endDiv.style.marginLeft  = '20px';\n\t                endDiv.style.marginRight = '70px';\n\t                subjectDiv.appendChild(textDiv);\n\t                subjectDiv.appendChild(startDiv);\n\t                for(var i = 0; i < subject.length; i++){\n\t                    var div = document.createElement('div');\n\t                    div.style.backgroundColor = getAminoColor(subject.charAt(i));\n\t                    div.innerHTML             = subject.charAt(i).bold();\n\t                    div.style.width           = '18px';\n\t                    div.style.textAlign       = 'center';\n\t                    div.style.display         = 'inline-block';\n\t                    subjectDiv.appendChild(div);\n\t                }\n\t                subjectDiv.appendChild(endDiv);\n\t                return subjectDiv;\n\t            }\n\t\n\t            function getAminoColor(char){\n\t                switch(char) {\n\t                    case 'A':\n\t                        return '#DBFA60';\n\t                        break;\n\t                    case 'C':\n\t                        return '#F9FA60';\n\t                        break;\n\t                    case 'D':\n\t                        return '#F9605F';\n\t                        break;\n\t                    case 'E':\n\t                        return '#F9609C';\n\t                        break;\n\t                    case 'F':\n\t                        return '#5FF99D';\n\t                        break;\n\t                    case 'G':\n\t                        return '#F9BC5F';\n\t                        break;\n\t                    case 'H':\n\t                        return '#609DF9';\n\t                        break;\n\t                    case 'I':\n\t                        return '#99F95A';\n\t                        break;\n\t                    case 'K':\n\t                        return '#A062FF';\n\t                        break;\n\t                    case 'L':\n\t                        return '#7EF960';\n\t                        break;\n\t                    case 'M':\n\t                        return '#63FF63';\n\t                        break;\n\t                    case 'N':\n\t                        return '#D95DF9';\n\t                        break;\n\t                    case 'P':\n\t                        return '#F9DA60';\n\t                        break;\n\t                    case 'Q':\n\t                        return '#F955D8';\n\t                        break;\n\t                    case 'R':\n\t                        return '#5360FB';\n\t                        break;\n\t                    case 'S':\n\t                        return '#F97E60';\n\t                        break;\n\t                    case 'T':\n\t                        return '#FFA563';\n\t                        break;\n\t                    case 'V':\n\t                        return '#C0F86B';\n\t                        break;\n\t                    case 'W':\n\t                        return '#FDD9F9';\n\t                        break;\n\t                    case 'Y':\n\t                        return '#60F9DA';\n\t                        break;\n\t                    default:\n\t                        return '#FFFFFF';\n\t                }\n\t            }\n\t        }\n\t});\n\t\n\t},{\"js-class\":1,\"js-extend\":2}]},{},[]);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }\n\n/******/ })});;\n\n\n// WEBPACK FOOTER //\n// biojs_blasterjs.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1557eeb70da17c6897f4","define( [ 'plugins/biojs/blasterjs/biojs-vis-blasterjs/build/blasterjs' ], function(Blasterjs) {\n    return Backbone.Model.extend({\n        initialize: function( options ) {\n            alert(\"Run 4\");\n\n            console.log(Blasterjs);\n            var chart    = options.chart;\n            var dataset  = options.dataset;\n            var settings = options.chart.settings;\n            //Simple example\n            var a = document.createElement('a');\n            a.href='http://sing.ei.uvigo.es/blasterjs/blast.out';\n            a.setAttribute(\"target\", \"_blank\");\n            a.text='Download an example file';\n            a.setAttribute(\"download\", \"blast.out\");\n            var input = document.createElement('input');\n            input.id = 'blastinput';\n            input.setAttribute(\"type\", \"file\");\n\n            var multiple = document.createElement('div');\n            multiple.id = \"blast-multiple-alignments\";\n            var table = document.createElement('div');\n            table.id = \"blast-alignments-table\";\n            var single = document.createElement('div');\n            single.id = \"blast-single-alignment\";\n\n            var rootDiv = document.getElementById(options.targets[0]+\"\");\n\n            rootDiv.appendChild(a);\n            rootDiv.appendChild(document.createElement('br'));\n            rootDiv.appendChild(document.createElement('br'));\n            rootDiv.appendChild(input);\n            rootDiv.appendChild(multiple);\n            rootDiv.appendChild(table);\n            rootDiv.appendChild(single);\n\n            var instance = blasterjs({\n                 input: \"blastinput\",\n                 multipleAlignments: \"blast-multiple-alignments\",\n                 alignmentsTable: \"blast-alignments-table\",\n                 singleAlignment: \"blast-single-alignment\"\n            });\n            options.process.resolve();\n            chart.state( 'ok', 'Chart drawn.' );\n            /*var m = new msa.msa({\n                el: $( '#'  + options.targets[ 0 ] ),\n                vis: {  conserv: settings.get( 'conserv' ) == 'true',\n                        overviewbox: settings.get( 'overviewbox' ) == 'true' },\n                menu: 'small',\n                bootstrapMenu: settings.get( 'menu' ) == 'true'\n            });\n            m.u.file.importURL( dataset.download_url, function() {\n                m.render();\n                chart.state( 'ok', 'Chart drawn.' );\n                options.process.resolve();\n            });*/\n        }\n    });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/plugins/visualizations/charts/static/repository/visualizations/biojs/blasterjs/wrapper.js\n// module id = 0\n// module chunks = 1","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\n/** @preserve http://github.com/easeway/js-class */\n\n// Class Definition using ECMA5 prototype chain\n\nfunction inherit(dest, src, noParent) {\n    while (src && src !== Object.prototype) {\n        Object.getOwnPropertyNames(src).forEach(function (name) {\n            if (name != '.class' && !dest.hasOwnProperty(name)) {\n                var desc = Object.getOwnPropertyDescriptor(src, name);\n                Object.defineProperty(dest, name, desc);\n            }\n        });\n        if (noParent) {\n            break;\n        }\n        src = src.__proto__;\n    }\n    return dest;\n}\n\nvar Class = function (base, proto, options) {\n    if (typeof(base) != 'function') {\n        options = proto;\n        proto = base;\n        base = Object;\n    }\n    if (!proto) {\n        proto = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    \n    var meta = {\n        name: options.name,\n        base: base,\n        implements: []\n    }\n    var classProto = Class.clone(proto);\n    if (options.implements) {\n        (Array.isArray(options.implements) ? options.implements : [options.implements])\n            .forEach(function (implementedType) {\n                if (typeof(implementedType) == 'function' && implementedType.prototype) {\n                    meta.implements.push(implementedType);\n                    Class.extend(classProto, implementedType.prototype);\n                }\n            });\n    }\n    classProto.__proto__ = base.prototype;\n    var theClass = function () {\n        if (typeof(this.constructor) == 'function') {\n            this.constructor.apply(this, arguments);\n        }\n    };\n    meta.type = theClass;\n    theClass.prototype = classProto;\n    Object.defineProperty(theClass, '.class.meta', { value: meta, enumerable: false, configurable: false, writable: false });\n    Object.defineProperty(classProto, '.class', { value: theClass, enumerable: false, configurable: false, writable: false });\n    if (options.statics) {\n        Class.extend(theClass, options.statics);\n    }\n    return theClass;\n};\n\nClass.extend = inherit;\n\nClass.clone = function (object) {\n    return inherit({}, object);\n};\n\nfunction findType(meta, type) {\n    while (meta) {\n        if (meta.type.prototype === type.prototype) {\n            return true;\n        }\n        for (var i in meta.implements) {\n            var implType = meta.implements[i];\n            var implMeta = implType['.class.meta'];\n            if (implMeta) {\n                if (findType(implMeta, type)) {\n                    return true;\n                }\n            } else {\n                for (var proto = implType.prototype; proto; proto = proto.__proto__) {\n                    if (proto === type.prototype) {\n                        return true;\n                    }\n                }\n            }\n        }\n        meta = meta.base ? meta.base['.class.meta'] : undefined;\n    }\n    return false;\n}\n\nvar Checker = Class({\n    constructor: function (object) {\n        this.object = object;\n    },\n    \n    typeOf: function (type) {\n        if (this.object instanceof type) {\n            return true;\n        }\n        var meta = Class.typeInfo(this.object);\n        return meta && findType(meta, type);\n    }\n});\n\n// aliases\nChecker.prototype.a = Checker.prototype.typeOf;\nChecker.prototype.an = Checker.prototype.typeOf;\n\nClass.is = function (object) {\n    return new Checker(object);\n};\n\nClass.typeInfo = function (object) {\n    var theClass = object.__proto__['.class'];\n    return theClass ? theClass['.class.meta'] : undefined;\n};\n\nClass.VERSION = [0, 0, 2];\n\nif (module) {\n    module.exports = Class;\n} else {\n    global.Class = Class;   // for browser\n}\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(require,module,exports){\n(function(factory) {\n  if(typeof exports === 'object') {\n    factory(exports);\n  } else {\n    factory(this);\n  }\n}).call(this, function(root) { \n\n  var slice   = Array.prototype.slice,\n      each    = Array.prototype.forEach;\n\n  var extend = function(obj) {\n    if(typeof obj !== 'object') throw obj + ' is not an object' ;\n\n    var sources = slice.call(arguments, 1); \n\n    each.call(sources, function(source) {\n      if(source) {\n        for(var prop in source) {\n          if(typeof source[prop] === 'object' && obj[prop]) {\n            extend.call(obj, obj[prop], source[prop]);\n          } else {\n            obj[prop] = source[prop];\n          }\n        } \n      }\n    });\n\n    return obj;\n  }\n\n  root.extend = extend;\n});\n\n},{}],\"biojs-vis-blasterjs\":[function(require,module,exports){\n/*\n * biojs-vis-blasterjs\n * https://github.com/sing-group/blasterjs\n *\n * Copyright (c) 2016 SING - Sistemas Informaticos de Nueva Generacion\n * Licensed under the MIT license.\n *\n *\n * BlasterJS\n *\n * @class\n * @extends Biojs\n *\n * @author <a href=\"mailto:aiblanco@uvigo.es\">Aitor Blanco Miguez</a>\n * @version 0.1.1\n * @category 3\n *\n * @requires Bootstrap 3\n * @dependency <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\" integrity=\"sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7\" crossorigin=\"anonymous\"></link>\n *\n * @requires <a href='html2canvas.js'>HTML2CANVAS</a>\n * @dependency <script type=\"text/javascript\" src=\"lib/html2canvas.js\"></script>\n *\n *\n * @param {Object} options An object with the options for BlasterJS component.\n *\n * @option {string} input\n *    Identifier of the INPUT tag where the BLAST output file should be selected.\n *\n * @option {string} multipleAlignments\n *    Identifier of the DIV tag where the multiple alignments should be displayed.\n *\n * @option {string} alignmentsTable\n *    Identifier of the DIV tag where the alignments table should be displayed.\n *\n * @option {string} singleAlignment\n *    Identifier of the DIV tag where the single should be displayed.\n * \n * @example\n * var instance = new Biojs.blasterjs({\n *      input: \"blastinput\",\n *      multipleAlignments: \"blast-multiple-alignments\",\n *      alignmentsTable: \"blast-alignments-table\",\n        singleAlignment: \"blast-single-alignment\"\n * });\n */\n\n\nvar blasterjs;\nvar Class = require('js-class');\nmodule.exports = blasterjs = Class(\n    /** @lends Biojs.blasterjs# */\n    {\n        constructor: function (options) {\n            var self = this;\n\n            require('js-extend').extend(this.opt, options);\n\n            var css = 'table tbody tr td button:hover{ text-decoration: underline;}';\n            var style = document.createElement('style');\n            if (style.styleSheet) {\n                style.styleSheet.cssText = css;\n            } else {\n                style.appendChild(document.createTextNode(css));\n            }\n            document.getElementsByTagName('head')[0].appendChild(style);\n            if (self.opt.string) {\n                var myBlob = new Blob([self.opt.string], {type : \"text/plain\"});\n                var fakeEvent = {\n                   target: {  files: [myBlob]   }\n                };\n                self._displayAlignments(fakeEvent, self);\n            }else{\n                document.getElementById(self.opt.input).addEventListener('change',  function(evt) { self._displayAlignments(evt, self) }, false);\n            } \n        },\n        \n        /**\n         * Default values for the options\n         * @name Biojs.blasterjs-opt\n         */\n        opt : {\n             input: \"blastinput\",\n             multipleAlignments: \"blast-multiple-alignments\",\n             alignmentsTable: \"blast-alignments-table\",\n             singleAlignment: \"blast-single-alignment\"\n        },\n        \n        /**\n         * Private: Read and display BLAST alignments.\n         * @ignore\n         */\n        _displayAlignments : function(evt, self) {\n            if (window.File && window.FileReader && window.FileList && window.Blob) {\n                var f = evt.target.files[0];\n                if (f) {\n                    var r = new FileReader();\n                    r.onload = function(e) { \n                        var queryLenght = getQueryLenght(e.target.result); \n                        var alignments  = getAlignments(e.target.result);\n                        createAlignmentComparison(alignments, queryLenght, true, self);\n                        createAlignmentTable(alignments, self);\n                        var hsps = alignments[0].hsp.length;\n                        createSingleAlignment(alignments[0], self, hsps, 0);\n                    }\n                    r.readAsText(f);\n                } else { \n                    alert('Failed to load file');\n                }\n            } else {\n              alert('The File APIs are not fully supported by your browser.');\n            }  \n        \n            function BlastAlignment (description,\n                                    length,\n                                    totalScore,\n                                    queryCover,\n                                    hsp){                \n                this.description  = description;\n                this.length       = length;\n                this.totalScore   = totalScore;\n                this.queryCover   = queryCover;\n                this.hsp          = hsp;\n            }\n\n            function HSP (score,\n                          eValue,\n                          identities,\n                          positives,\n                          gaps,\n                          queryStart,\n                          query,\n                          queryEnd,\n                          comparison,\n                          subjectStart,\n                          subject,\n                          subjectEnd ){\n                this.score        = score;\n                this.eValue       = eValue;\n                this.identities   = identities;\n                this.positives    = positives;\n                this.gaps         = gaps;\n                this.queryStart   = queryStart;\n                this.query        = query;\n                this.queryEnd     = queryEnd;\n                this.comparison   = comparison;\n                this.subjectStart = subjectStart;\n                this.subject      = subject;\n                this.subjectEnd   = subjectEnd;                \n            }\n            \n            String.prototype.startsWith = function(prefix) {\n                return this.indexOf(prefix) === 0;\n            }\n\n            function getQueryLenght(content){\n                var lines = content.split('\\n');\n                var length = 0;\n                for (var i = 0; i < lines.length; i++){\n                    if(lines[i].startsWith('Length=')){\n                        length = lines[i].split('=')[1];\n                        break;\n                    }\n                }\n                return length;\n            }\n\n            function getAlignments(content){\n                var lines = content.split('\\n');\n                return parseBlastText(content);  \n            }\n\n            function parseBlastText(content){\n                var lines = content.split('\\n');\n                var alignments = [];\n                for (var i = 0; i < lines.length; i++){\n                    if(lines[i].startsWith('>')){\n                        var line1 = lines[i].split('>')[1];\n                        var line2 = \"\";\n                        var currentLine = i;\n                        while (line2 == \"\"){\n                            currentLine = currentLine +1;\n                            if(lines[currentLine].startsWith('Length=')){\n                                line2 = lines[currentLine];\n                            }else{\n                                line1 += lines[currentLine];\n                            }\n                        }\n                        var description  = line1;\n                        var length       = line2.split('=')[1];\n                        var hsps = [];\n                        var multiple = false;\n                        do{\n                            if(multiple){\n                                currentLine = currentLine-1;   \n                            }\n                            if(lines[currentLine+2].startsWith(' Features in this part of subject sequence:')){                \n                                currentLine = currentLine+3;\n                            }\n                            var score = lines[currentLine+2].split(',')[0].replace(/\\s\\s+/g, ' ').split(' ')[3];\n                            var eValue       = lines[currentLine+2].split(',')[1].split(' ')[4];\n                            var identities   = lines[currentLine+3].split(',')[0].split('(')[1].substr(0, lines[currentLine+3].split(',')[0].split('(')[1].length-2);\n                            if(lines[0].startsWith('BLASTN')){\n                                var positives = 'N/A';\n                                var gaps    = lines[currentLine+3].split(',')[1].split('(')[1].substr(0, lines[currentLine+3].split(',')[1].split('(')[1].length-2);\n                            }else{\n                                var positives    = lines[currentLine+3].split(',')[1].split('(')[1].substr(0, lines[currentLine+3].split(',')[1].split('(')[1].length-2);\n                                var gaps         = lines[currentLine+3].split(',')[2].split('(')[1].substr(0, lines[currentLine+3].split(',')[2].split('(')[1].length-2);\n                            }\n                            if(lines[currentLine+4].split(',')[0].split(' ')[1] == 'Frame' || lines[currentLine+4].startsWith(' Strand')){\n                                currentLine = currentLine+1;   \n                            }\n                            var queryStart = lines[currentLine+5].substring(5).replace(/^\\s+/g, '').split(' ')[0];\n                            var query = lines[currentLine+5].substring(5).replace(/\\s+/g, '').replace(/[0-9]/g, '');\n                            var queryEnd = lines[currentLine+5].substring(5).replace(/^\\s+/g, '').split(' ')[lines[currentLine+5].substring(5).replace(/^\\s+/g, '').split(' ').length-1];\n                            var comparison = lines[currentLine+6].replace(/^\\s+/g, ''); \n                            var sbjctStart = lines[currentLine+7].substring(5).replace(/^\\s+/g, '').split(' ')[0];\n                            var sbjct = lines[currentLine+7].substring(5).replace(/\\s+/g, '').replace(/[0-9]/g, '');\n                            var sbjctEnd = lines[currentLine+7].substring(5).replace(/^\\s+/g, '').split(' ')[lines[currentLine+7].substring(5).replace(/^\\s+/g, '').split(' ').length-1];\n\n                            currentLine = currentLine+9;\n                            while (lines[currentLine].startsWith('Query')){\n                                var nextQuery = lines[currentLine].substring(5).replace(/\\s+/g, '').replace(/[0-9]/g, '');\n                                query += nextQuery;\n                                queryEnd = lines[currentLine].substring(5).replace(/^\\s+/g, '').split(' ')[lines[currentLine].substring(5).replace(/^\\s+/g, '').split(' ').length-1];\n                                sbjct += lines[currentLine+2].substring(5).replace(/\\s+/g, '').replace(/[0-9]/g, '');\n                                sbjctEnd = lines[currentLine+2].substring(5).replace(/^\\s+/g, '').split(' ')[lines[currentLine+2].substring(5).replace(/^\\s+/g, '').split(' ').length-1];\n\n                                var nextComparison = lines[currentLine+1].replace(/^\\s+/g, '');\n                                if(nextQuery.length > nextComparison.length){\n                                    var diference = nextQuery.length-nextComparison.length;\n                                    for(var j = 0; j < diference; j++){\n                                        nextComparison = ' '+nextComparison;   \n                                    }\n                                }\n                                comparison += nextComparison;\n                                currentLine = currentLine+4;\n                            }\n                            var hsp = new HSP(score, eValue, identities, positives, gaps, queryStart, query, queryEnd, comparison, sbjctStart, sbjct, sbjctEnd);\n                            hsps.push(hsp);\n                            multiple = true;\n                        }while(lines[currentLine+1].startsWith(' Score'));\n                        var totalScore = parseFloat(hsps[0].score);\n                        for(var x = 1; x< hsps.length; x++){\n                            totalScore = totalScore + parseFloat(hsps[x].score);   \n                        }\n                        var alignment = new BlastAlignment( description, length, totalScore.toFixed(1), getQueryCover(hsps, getQueryLenght(content)), hsps);\n                        alignments.push(alignment);\n                    }\n                }\n                return alignments;\n            }\n\n            function getQueryCover(hsps, length){\n                var cover = 0;\n                var noOver = getHSPWithoutOverlapping(hsps);\n                for(var i=0; i<noOver.length; i++){\n                    cover = cover + parseInt(100 * (noOver[i].end - noOver[i].start +1) / length);               \n                }\n                return  cover;   \n            }\n            \n            function getHSPWithoutOverlapping(hsps){\n                var hspNoOver=[];\n                for(var i=0; i<hsps.length; i++){\n                    hspNoOver.push({start:parseInt(hsps[i].queryStart),end:parseInt(hsps[i].queryEnd)});                    \n                }\n                return getNoOverlappingArray(partitionIntoOverlappingRanges(hspNoOver));\n            }\n            \n            function partitionIntoOverlappingRanges(array) {\n              array.sort(function (a,b) {\n                if (a.start < b.start)\n                  return -1;\n                if (a.start > b.start)\n                  return 1;\n                return 0;\n              });\n              var getMaxEnd = function(array) {\n                if (array.length==0) return false;\n                array.sort(function (a,b) {\n                  if (a.end < b.end)\n                    return 1;\n                  if (a.end > b.end)\n                    return -1;\n                  return 0;\n                });\n                return array[0].end;    \n              };\n              var rarray=[];\n              var g=0;\n              rarray[g]=[array[0]];\n\n              for (var i=1,l=array.length;i<l;i++) {\n                if ( (array[i].start>=array[i-1].start)\n                     &&\n                     (array[i].start<getMaxEnd(rarray[g]))\n                ) {    \n                  rarray[g].push(array[i]);\n                } else {\n                  g++;   \n                  rarray[g]=[array[i]];\n                }\n              }\n              return rarray;\n            }\n            \n            function getNoOverlappingArray(array){\n                var result = [];\n                for(var i=0; i<array.length; i++){\n                    var start=array[i][0].start;\n                    var end= array[i][0].end;\n                    for(var j=0; j<array[i].length; j++){\n                        if(array[i][j].start<start)\n                            start = array[i][j].start;\n                        if(array[i][j].end>end)\n                            end = array[i][j].end;\n                    }\n                    result.push({start:start,end:end});\n                }\n                return result;\n            }\n            \n            function getColor(colored, score){\n                var colorNb; \n                if (score<40){\n                    colorNb=1;\n                }else if (score>=40 && score<50){\n                    colorNb=2;\n                }else if (score>=50 && score<80){\n                    colorNb=3;\n                }else if (score>=80 && score<200){\n                    colorNb=4\n                }else {\n                    colorNb=5;\n                } \n                 return getDivColor(colored, colorNb);\n            }\n\n            function getDivColorText(div){\n                switch(div) {\n                    case 1:\n                        return '<40';\n                        break;\n                    case 2:\n                        return '40-50';\n                        break;\n                    case 3:\n                        return '50-80';\n                        break;\n                    case 4:\n                        return '80-200';\n                        break;\n                    case 5:\n                        return '>=200';\n                        break;\n                    default:\n                        return '0';\n                }\n            }\n\n            function getDivColor(colored, div){\n                if(colored){\n                    switch(div) {\n                        case 1:\n                            return '#5C6D7E';\n                            break;\n                        case 2:\n                            return '#9B59B6';\n                            break;\n                        case 3:\n                            return '#5CACE2';\n                            break;\n                        case 4:\n                            return '#57D68D';\n                            break;\n                        case 5:\n                            return '#C0392B';\n                            break;\n                        default:\n                            return '#FFF';\n                    }\n                }else{\n                    switch(div) {\n                        case 1:\n                            return '#BCBCBC';\n                            break;\n                        case 2:\n                            return '#989898';\n                            break;\n                        case 3:\n                            return '#747474';\n                            break;\n                        case 4:\n                            return '#565656';\n                            break;\n                        case 5:\n                            return '#343434';\n                            break;\n                        default:\n                            return '#FFF';\n                    }\n                }\n            }\n\n            function selectAlignment(alignment){\n                var item = document.getElementById(alignment).parentElement.parentElement;\n                var items = document.getElementsByClassName('alignment-table-description');\n                var i;\n                for (i = 0; i < items.length; i++) {\n                    items[i].style.fontWeight = 'normal';\n                    items[i].parentElement.parentElement.style.fontWeight = 'normal';\n                }\n                item.style.fontWeight = 'bold';\n                document.getElementById(alignment).style.fontWeight = 'bold';\n            }\n\n            function createColorsDiv(colored){\n                var container  = document.createElement('div');\n                var divSpace   = document.createElement('div');\n                var divClear   = document.createElement('div');\n                container.style.color = '#EEE';\n                divSpace.style.minWidth  = '50px';\n                divSpace.style.minHeight = '10px';\n                divSpace.style.float     = 'left';\n                container.appendChild(divSpace);\n                for(var i = 1; i <= 5; i++){\n                    var div = document.createElement('div');\n                    div.style.minWidth        = '100px';\n                    div.style.textAlign       = 'center';\n                    div.style.float           = 'left';        \n                    div.innerHTML             = getDivColorText(i).bold();\n                    div.style.backgroundColor = getDivColor(colored, i);\n                    container.appendChild(div);\n                }\n                divClear.style.clear = 'both';\n                container.appendChild(divClear);\n                return container;\n            }\n\n            function createQueryDiv(colored){\n                var container  = document.createElement('div');\n                var divSpace   = document.createElement('div');\n                var divQuery   = document.createElement('div');\n                var divClear   = document.createElement('div');\n                container.style.marginTop = '3px';\n                container.style.color     = '#5C6D7E';\n                container.style.fontSize  = '10px';\n                divSpace.style.width = '50px';\n                divSpace.innerHTML   = 'QUERY'.bold();\n                divSpace.style.float = 'left';\n                divQuery.style.width     = '500px';\n                divQuery.style.height    = '10px';\n                divQuery.style.float     = 'left';\n                divQuery.style.marginTop = '2px';\n                divClear.style.clear = 'both';\n                if(colored){\n                    divQuery.style.backgroundColor = '#C0392B'; \n                } else{\n                    divQuery.style.backgroundColor = '#343434';         \n                }\n                container.appendChild(divSpace);\n                container.appendChild(divQuery);\n                container.appendChild(divClear);\n                return container;\n            }\n\n            function createNumbersDiv(lenght){\n                var container    = document.createElement('div');\n                var divSpace     = document.createElement('div');\n                var divNumbers   = document.createElement('div');\n                var divClear     = document.createElement('div');\n                container.style.marginBottom = '5px';\n                container.style.fontSize     = '11px';\n                divSpace.style.minWidth  = '50px';\n                divSpace.style.minHeight = '10px';\n                divSpace.style.float     = 'left';    \n                divNumbers.style.float = 'left';\n                divClear.style.clear = 'both';  \n                divNumbers = divideDivNumbers(divNumbers, lenght);  \n                container.appendChild(divSpace);\n                container.appendChild(divNumbers);\n                container.appendChild(divClear);\n                return container;\n            }\n\n            function divideDivNumbers(container, lenght){\n                var divClear = document.createElement('div');\n                if(lenght > 4){\n                    if(lenght % 5 == 0){\n                        container = createDivisionsDivNumbers(container, 5, lenght/5, 100);\n                    }else{\n                        var pixels = 500/(5+((lenght%5)/5));\n                        container = createDivisionsDivNumbers(container, 5, parseInt(lenght/5), parseInt(pixels));            \n                        //Podemos hacerlo o no\n                        var pxrest = parseInt(500-(pixels*5));\n                        var div = document.createElement('div');\n                        div.style.float = 'left';\n                        div.style.width = pxrest+'px';\n                        div.style.textAlign = 'right';\n                        div.innerHTML = lenght;\n                        container.appendChild(div);\n                    }\n                }else{\n                    container = createDivisionsDivNumbers(container, lenght, 1, parseInt(500/lenght));\n                }    \n                divClear.style.clear = 'both'; \n                container.appendChild(divClear);\n                return container;\n            }\n\n            function createDivisionsDivNumbers(container, divisions, size, pixels){\n                for(var i = 0; i<divisions; i++){\n                    if(i == 0){\n                        var px2  = pixels/2;\n                        var div1 = document.createElement('div');\n                        var div2 = document.createElement('div');\n                        div1.style.float     = 'left';\n                        div1.style.width     = px2+'px';\n                        div1.style.textAlign = 'left';\n                        div1.innerHTML       = '0';\n                        div2.style.float     = 'left';\n                        div2.style.width     = px2+'px';\n                        div2.style.textAlign = 'right';\n                        div2.innerHTML       = size*(i+1);\n                        container.appendChild(div1); \n                        container.appendChild(div2); \n                    }else{\n                        var div = document.createElement('div');\n                        div.style.float     = 'left';\n                        div.style.width     = pixels+'px';\n                        div.style.textAlign = 'right';\n                        div.innerHTML       = size*(i+1);\n                        container.appendChild(div);\n                    }\n                }\n                return container;\n            }\n\n\n            function createHeader(container, colored, lenght){   \n                var text    = document.createElement('div');\n                var colors  = createColorsDiv(colored);\n                var query   = createQueryDiv(colored);\n                var numbers = createNumbersDiv(lenght);\n                text.style.color         = '#5C6D7E';\n                text.style.textAlign     = 'center';\n                text.style.paddingBottom = '5px';\n                text.innerHTML           = 'COLOR KEY FOR ALIGNMENT SCORES'.bold();\n                container.appendChild(text);\n                container.appendChild(colors);\n                container.appendChild(query);\n                container.appendChild(numbers);\n                return container;\n            }\n            \n            function createBody(alignments, queryLenght, container, colored){\n                var alignmentContainer = document.createElement('div');\n                alignmentContainer.style.paddingBottom = '10px';\n                for(var i = 0; i < alignments.length; i++){\n                    var alignment = createAlignmentDiv(getColor(colored, alignments[i].hsp[0].score), alignments[i], queryLenght);\n                    alignment.style.marginBottom = '4px';\n                    alignmentContainer.appendChild(alignment);\n                }\n                container.appendChild(alignmentContainer);\n                return container;\n            }\n                        \n            function createAlignmentDiv(color, alignment, queryLenght){ \n                var noOver = getHSPWithoutOverlapping(alignment.hsp);\n                \n                var container = document.createElement('div');\n                var divClear  = document.createElement('div');\n                container.style.minHeight = '12px';\n                \n                for(var i =0; i<noOver.length; i++){\n                    var white = document.createElement('div');\n                    var colored = document.createElement('div');\n                    var link = document.createElement('a');\n                    if(i==0){\n                        if(noOver[0].start == 1)                           \n                           var init = parseInt(50+((500*(noOver[0].start-1))/queryLenght));\n                        else\n                            var init = parseInt(50+((500*(noOver[0].start))/queryLenght));\n                        var offset = parseInt(550-init-(500*(queryLenght-noOver[0].end)/queryLenght));\n                    }else{\n                        var  init = parseInt((500*(noOver[i].start-noOver[i-1].end)/queryLenght));\n                        var offset = parseInt((500*(noOver[i].end-noOver[i].start)/queryLenght));\n                    }\n                    white.style.width           = init+'px';\n                    white.style.minHeight       = '4px';\n                    white.style.float           = 'left';\n                    colored.style.width           = offset+'px';\n                    colored.style.minHeight       = '12px';\n                    colored.style.float           = 'left';\n                    colored.style.backgroundColor =  color;    \n                    colored.onmouseout            = function(){document.getElementById('defline').value=' Mouse over to show defline and scores, click to show alignments';};\n                    colored.onmouseover           = function(){document.getElementById('defline').value=' '+alignment.description+'. S='+alignment.score+' E='+alignment.eValue;};\n                    \n                    \n                    link.href = '#'+alignment.description.split(' ')[0];  \n                    link.onclick=function(){ selectAlignment(alignment.description.split(' ')[0]); };\n                    link.appendChild(colored);\n                    container.appendChild(white);\n                    container.appendChild(link);\n                }\n                divClear.style.clear = 'both';\n                container.appendChild(divClear);\n                return container;\n            }\n\n            function createChangeColorButton(alignments, lenght, colored, self){\n                var button = document.createElement('button');\n                button.id                = 'changeColors';\n                button.className         = 'btn';\n                button.style.marginRight = '10px';\n                button.style.marginTop   = '5px';\n                if(colored == true){\n                    var text = document.createTextNode('Click to change colors to grayscale');\n                }else{\n                    var text = document.createTextNode('Click to change colors to full colored');\n                }\n                button.appendChild(text);\n                button.onclick=function(){ changeColors(alignments, lenght, button, colored, self); };\n                return button;\n            }\n\n            function createDownloadButton(){\n                var button = document.createElement('button');\n                button.id              = 'downloadAlignments';\n                button.className       = 'btn';\n                button.style.marginTop = '5px';\n                var text = document.createTextNode('Download as image'); \n                button.appendChild(text); \n                button.addEventListener('click', downloadAlignmentsImg);\n                return button;\n            }\n\n            function changeColors(alignments, lenght, button, colored, self){   \n                if(colored == true){\n                    colored = false;\n                }else{\n                    colored = true;   \n                }\n                button.removeChild(button.childNodes[0]);\n                var blastDiv = document.getElementById(self.opt.multipleAlignments);\n                while (blastDiv.firstChild) {\n                    blastDiv.removeChild(blastDiv.firstChild);\n                }\n                createAlignmentComparison(alignments, lenght, colored, self);\n            }\n\n            function downloadAlignmentsImg(){\n                var buttons   = document.getElementById('blast-multiple-alignments-buttons');\n                var input     = document.getElementById('defline');\n                var container = document.getElementById('alignments-container');\n                container.removeChild(buttons);\n                container.removeChild(input);\n                html2canvas(container, {\n                  onrendered: function(canvas) {\n                    document.body.appendChild(canvas);\n                    var a = document.createElement('a');\n                    document.body.appendChild(a);\n                    a.href     = canvas.toDataURL('img/png');\n                    a.download = 'alignments.png';\n                    a.click();\n                    document.body.removeChild(canvas);\n                    document.body.removeChild(a);\n                    container.appendChild(input);\n                    container.appendChild(buttons);\n                  }\n                });   \n            }\n\n            function createAlignmentComparison(alignments, queryLenght, colored, self){\n                var blastDiv  = document.getElementById(self.opt.multipleAlignments);\n                while(blastDiv.hasChildNodes()){\n                    blastDiv.removeChild(blastDiv.firstChild);\t\n                }\n                var container        = document.createElement('div');\n                var containerButtons = document.createElement('div');\n                var input            = document.createElement('input');\n                var buttonColors     = createChangeColorButton(alignments, queryLenght, colored, self);\n                var buttonDownload   = createDownloadButton();\n                blastDiv.style.paddingTop = '20px';\n                input.id    = 'defline';\n                input.name  = 'defline';\n                input.type  = 'text';\n                input.value = ' Mouse over to show defline and scores, click to show alignments';\n                input.style.width   = '556px';\n                input.style.padding = '1px';\n                input.style.border  = 0;\n                input.style.cursos  = 'auto';    \n                container.id                    = 'alignments-container';\n                container.style.border          = 'thin solid #DDD';\n                container.style.margin          = '0 auto';\n                container.style.padding         = '10px';\n                container.style.maxWidth        = '580px';\n                container.style.backgroundColor = '#FFF';\n                container = createHeader(container, colored, queryLenght);\n                container = createBody(alignments, queryLenght, container, colored);\n                container.appendChild(input);    \n                containerButtons.style.textAlign = 'right';\n                containerButtons.id              = 'blast-multiple-alignments-buttons';\n                blastDiv.style.minWidth        = '580px';\n                containerButtons.appendChild(buttonColors); \n                containerButtons.appendChild(buttonDownload);   \n                container.appendChild(containerButtons);\n                blastDiv.appendChild(container);\n            }\n\n            function createTableHeader(){\n                var table       = document.createElement('table');\n                var thead       = document.createElement('thead');\n                var theadTr     = document.createElement('tr');\n                var theadDesc   = document.createElement('th');\n                var theadScore  = document.createElement('th');\n                var theadEval   = document.createElement('th');\n                var theadIdent  = document.createElement('th');\n                var theadPos    = document.createElement('th');\n                var theadGaps   = document.createElement('th');\n                table.className = \"table table-striped\";\n                theadDesc.innerHTML  = 'Description'.bold();\n                theadScore.innerHTML = 'Max score'.bold();\n                theadEval.innerHTML  = 'Total score'.bold();\n                theadIdent.innerHTML = 'Query cover'.bold();\n                theadPos.innerHTML   = 'E value'.bold();\n                theadGaps.innerHTML  = 'Identities'.bold();\n                theadTr.appendChild(theadDesc);\n                theadTr.appendChild(theadScore);\n                theadTr.appendChild(theadEval);\n                theadTr.appendChild(theadIdent);\n                theadTr.appendChild(theadPos);\n                theadTr.appendChild(theadGaps);\n                thead.appendChild(theadTr);\n                table.appendChild(thead);\n                return table;\n            }\n\n            function createTableButtons(alignments){\n                var container = document.createElement('div');\n                var butCSV    = document.createElement('button');\n                var butImg    = document.createElement('button');\n                container.style.textAlign = 'right';    \n                butCSV.style.marginRight = '10px';\n                butCSV.className         = 'btn';\n                butCSV.innerHTML         = 'Download as csv';\n                butCSV.onclick           = function(){ downloadTableCSV(alignments); };\n                butImg.className = 'btn';\n                butImg.innerHTML = 'Download as image';\n                butImg.onclick   = function(){ downloadTableImg(); };\n                container.appendChild(butCSV);\n                container.appendChild(butImg);\n                return container;\n            }\n\n            function createAlignmentTable(alignments, self){\n                var tableDiv     = document.getElementById(self.opt.alignmentsTable);\n                while(tableDiv.hasChildNodes()){\n                    tableDiv.removeChild(tableDiv.firstChild);\t\n                }\n                var imgContainer = document.createElement('div');\n                var butContainer = createTableButtons(alignments);\n                var table        = createTableHeader();\n                var tbody        = document.createElement('tbody');\n                tableDiv.style.paddingTop = '50px';\n                imgContainer.style.backgroundColor = '#FFF';\n                imgContainer.id                    = 'blast-alignments-table-img';\n                for(var i = 0; i < alignments.length; i++){\n                    var tr           = document.createElement('tr');\n                    var tdDesc       = document.createElement('td');\n                    var butDesc      = document.createElement('button');\n                    butDesc.alignment = alignments[i];\n                    butDesc.onclick   = function(){ \n                        if (self.opt.callback) {\n                            self.opt.callback(this.alignment);\n                        }else{\n                            location.href='#'+self.opt.singleAlignment;\n                            createSingleAlignment(this.alignment, self, this.alignment.hsp.length, 0);  \n                        }\n                    };\n                    butDesc.id        = alignments[i].description.split(\" \")[0];\n                    butDesc.innerHTML = alignments[i].description;\n                    butDesc.style.border = 0;\n                    butDesc.style.padding = 0;\n                    butDesc.style.display = 'inline';\n                    butDesc.style.background = 'none';\n                    butDesc.className = 'alignment-table-description';\n                    tdDesc.appendChild(butDesc);\n                    var tdScore       = document.createElement('td');\n                    tdScore.innerHTML = alignments[i].hsp[0].score;\n                    var tdEval       = document.createElement('td');\n                    tdEval.innerHTML = alignments[i].totalScore;\n                    var tdIdent       = document.createElement('td');\n                    tdIdent.innerHTML = alignments[i].queryCover+\"%\";\n                    var tdPos       = document.createElement('td');\n                    tdPos.innerHTML = alignments[i].hsp[0].eValue;\n                    var tdGaps       = document.createElement('td');\n                    tdGaps.innerHTML = alignments[i].hsp[0].identities+\"%\";\n                    tr.appendChild(tdDesc);\n                    tr.appendChild(tdScore);\n                    tr.appendChild(tdEval);\n                    tr.appendChild(tdIdent);\n                    tr.appendChild(tdPos);\n                    tr.appendChild(tdGaps);\n                    tbody.appendChild(tr);\n                }\n                table.appendChild(tbody);\n                imgContainer.appendChild(table);\n                tableDiv.appendChild(imgContainer);\n                tableDiv.appendChild(butContainer);\n            }\n\n            function downloadTableImg(){\n                var items = document.getElementsByClassName('alignment-table-description');\n                var i;\n                for (i = 0; i < items.length; i++) {\n                    items[i].style.fontWeight = 'normal';\n                    items[i].parentElement.parentElement.style.fontWeight = 'normal';\n                }\n                var container = document.getElementById('blast-alignments-table-img');\n                html2canvas(container, {\n                  onrendered: function(canvas) {\n                    document.body.appendChild(canvas);\n                    var a = document.createElement('a');\n                    document.body.appendChild(a);\n                    a.href = canvas.toDataURL('img/png');\n                    a.download = 'alignments-table.png';\n                    a.click();\n                    document.body.removeChild(canvas);\n                    document.body.removeChild(a);\n                  }\n                });   \n            }\n\n            function downloadTableCSV(alignments){\n                var csvContent = 'data:text/csv;charset=utf-8,';\n                csvContent += 'Description; Score; eValue; Identities; Positives; Gaps\\n';\n\n                for(var i = 0; i < alignments.length; i++){\n                    csvContent += alignments[i].description;\n                    csvContent += '; ';\n                    csvContent += alignments[i].hsp[0].score;\n                    csvContent += '; ';\n                    csvContent += alignments[i].hsp[0].eValue;\n                    csvContent += '; ';\n                    csvContent += alignments[i].hsp[0].identities;\n                    csvContent += '; ';\n                    csvContent += alignments[i].hsp[0].positives;\n                    csvContent += '; ';\n                    csvContent += alignments[i].hsp[0].gaps;\n                    csvContent += '\\n';\n                }\n                var encodedUri = encodeURI(csvContent);\n                var link = document.createElement('a');\n                link.setAttribute('href', encodedUri);\n                link.setAttribute('download', 'alignments-table.csv');\n                link.click(); \n            }\n\n            function createSingleAlignment(alignment, self, hsps, hsp){\n                var alignmentDiv = document.getElementById(self.opt.singleAlignment);\n                while(alignmentDiv.hasChildNodes()){\n                    alignmentDiv.removeChild(alignmentDiv.firstChild);\t\n                }\n\n                var alignmentPre = document.createElement('pre');\n                var alignmentContainer = document.createElement('div');\n                var buttonDownload = document.createElement('button');\n                var span = document.createElement('span');   \n                var statsDiv = document.createElement('div');\n                var scoreDiv = document.createElement('div');\n                var expectedDiv = document.createElement('div');\n                var identitiesDiv = document.createElement('div');\n                var positivesDiv = document.createElement('div');\n                var gapsDiv = document.createElement('div');\n                var divClear  = document.createElement('div');\n                var queryDiv      = createSingleQueryDiv(alignment.hsp[hsp].query, alignment.hsp[hsp].queryStart, alignment.hsp[hsp].queryEnd);\n                var comparisonDiv = createSingleComparisonDiv(alignment.hsp[hsp].comparison);\n                var subjectDiv    = createSingleSubjectDiv(alignment.hsp[hsp].subject, alignment.hsp[hsp].subjectStart, alignment.hsp[hsp].subjectEnd); \n\n                alignmentPre.style.color         = '#2c3e50';\n                alignmentPre.style.paddingTop    = '25px';\n                alignmentPre.style.paddingBottom = '40px';\n                alignmentPre.style.textAlign     = 'left';\n                alignmentPre.style.fontFamily    = 'Helvetica,Arial,sans-serif';\n                alignmentPre.id                  = 'blast-single-alignment-pre';\n                alignmentContainer.style.margin     = '0 auto';\n                alignmentContainer.style.display    = 'table';\n                alignmentContainer.style.paddingTop = '30px';\n                alignmentDiv.style.textAlign  = 'right';\n                alignmentDiv.style.paddingTop = '50px';\n                buttonDownload.className = 'btn';\n                buttonDownload.innerHTML = 'Download as image';\n                buttonDownload.onclick   = function(){ downloadSingleAlignmentImg(alignment); };\n                span.innerHTML         = alignment.description;\n                span.style.paddingLeft = '15px';\n                span.style.fontWeight  = 'bold';\n                span.style.fontSize    = '15px';\n                span.style.fontFamily  =  'Helvetica,Arial,sans-serif';\n                \n                \n                statsDiv.style.paddingTop = '20px';\n                statsDiv.style.fontSize    = '14px';\n                statsDiv.style.textAlign = 'center';\n                statsDiv.style.fontFamily  =  'Helvetica,Arial,sans-serif';\n                statsDiv.style.display = 'table';\n                statsDiv.style.margin = '0px auto';\n                statsDiv.style.width = '100%';\n                scoreDiv.innerHTML = '<b>Score:</b></br>'+alignment.hsp[hsp].score;\n                scoreDiv.style.float = 'left';\n                scoreDiv.style.width = \"20%\";\n                expectedDiv.innerHTML = '<b>Expect:</b></br>'+alignment.hsp[hsp].eValue;\n                expectedDiv.style.float = 'left';\n                expectedDiv.style.width = \"20%\";\n                identitiesDiv.innerHTML = '<b>Identities:</b></br>'+alignment.hsp[hsp].identities+'%';\n                identitiesDiv.style.float = 'left';\n                identitiesDiv.style.width = \"20%\";\n                positivesDiv.innerHTML = '<b>Positives:</b></br>'+alignment.hsp[hsp].positives+'%';\n                positivesDiv.style.float = 'left';\n                positivesDiv.style.width = \"20%\";\n                gapsDiv.innerHTML = '<b>Gaps:</b></br>'+alignment.hsp[hsp].gaps+'%';\n                gapsDiv.style.float = 'left';\n                gapsDiv.style.width = \"20%\";\n                divClear.style.clear = 'both';\n\n                statsDiv.appendChild(scoreDiv);\n                statsDiv.appendChild(expectedDiv);\n                statsDiv.appendChild(identitiesDiv);\n                statsDiv.appendChild(positivesDiv);\n                statsDiv.appendChild(gapsDiv);\n                statsDiv.appendChild(divClear);\n                \n                alignmentContainer.appendChild(queryDiv);\n                alignmentContainer.appendChild(comparisonDiv);\n                alignmentContainer.appendChild(subjectDiv);\n                alignmentPre.appendChild(span);\n                alignmentPre.appendChild(statsDiv);\n                alignmentPre.appendChild(alignmentContainer);\n                alignmentDiv.appendChild(alignmentPre);\n                if(hsps > 1){\n                    var buttonNext = document.createElement('button');  \n                    buttonNext.className = 'btn';\n                    buttonNext.id = 'blast-single-alignment-next';\n                    buttonNext.innerHTML = 'Next HSP';\n                    buttonNext.style.marginTop = '5px';\n                    buttonNext.style.marginRight = '15px';\n                    buttonNext.style.float = 'right';\n                    if(hsp == hsps-1)\n                        var goTo = 0;\n                    else\n                        var goTo = hsp+1;\n                    buttonNext.onclick   = function(){ createSingleAlignment(alignment, self, hsps, goTo); }; \n                    alignmentPre.appendChild(buttonNext);\n                }\n                alignmentDiv.appendChild(buttonDownload);\n            }\n\n            function downloadSingleAlignmentImg(alignment){\n                var container = document.getElementById('blast-single-alignment-pre');                \n                var button = document.getElementById('blast-single-alignment-next');\n                if(typeof(button) != 'undefined' && button != null){   \n                    container.removeChild(button);\n                }\n                html2canvas(container, {\n                  onrendered: function(canvas) {                    \n                    document.body.appendChild(canvas);\n                    var a = document.createElement('a');\n                    document.body.appendChild(a);\n                    a.href = canvas.toDataURL('img/png');\n                    var tittle = alignment.description+'-alignment.png';\n                    a.download = tittle;\n                    a.click();\n                    document.body.removeChild(canvas);\n                    document.body.removeChild(a);\n                    if(typeof(button) != 'undefined' && button != null)\n                        container.appendChild(button);\n                  }\n                });   \n            }\n\n            function createSingleQueryDiv(query, start, end){\n                var textDiv  = document.createElement('div');\n                var startDiv = document.createElement('div');\n                var endDiv   = document.createElement('div');\n                var queryDiv = document.createElement('div');\n                textDiv.innerHTML         = 'Query'.bold();\n                textDiv.style.display     = 'inline-block';\n                textDiv.style.marginRight = '20px';\n                textDiv.style.textAlign   = 'right';\n                textDiv.style.width       = '55px';\n                startDiv.innerHTML = String(start).bold();\n                startDiv.style.display = 'inline-block';\n                startDiv.style.marginRight = '20px';\n                startDiv.style.width       = '25px';\n                endDiv.innerHTML         = String(end).bold();\n                endDiv.style.display     = 'inline-block';\n                endDiv.style.marginLeft  = '20px';\n                endDiv.style.marginRight = '70px';\n                queryDiv.appendChild(textDiv);\n                queryDiv.appendChild(startDiv);\n                for(var i = 0; i < query.length; i++){\n                    var div = document.createElement('div');\n                    div.style.backgroundColor = getAminoColor(query.charAt(i));\n                    div.innerHTML             = query.charAt(i).bold();\n                    div.style.width           = '18px';\n                    div.style.textAlign       = 'center';\n                    div.style.display         = 'inline-block';\n                    queryDiv.appendChild(div);\n                }\n                queryDiv.appendChild(endDiv);\n                return queryDiv;\n            }\n\n            function createSingleComparisonDiv(comparison){\n                var comparisonDiv = document.createElement('div');\n                var spaceDiv      = document.createElement('div');\n                spaceDiv.style.minWidth  = '120px';\n                spaceDiv.style.minHeight = '1px';\n                spaceDiv.style.display   = 'inline-block';\n                comparisonDiv.appendChild(spaceDiv);\n                for(var i = 0; i < comparison.length; i++){\n                    var div = document.createElement('div');\n                    div.style.backgroundColor = getAminoColor(comparison.charAt(i));\n                    div.innerHTML             = comparison.charAt(i).bold();\n                    div.style.width           = '18px';\n                    div.style.textAlign       = 'center';\n                    div.style.display         = 'inline-block';\n                    comparisonDiv.appendChild(div);\n                }\n                return comparisonDiv;\n            }\n\n            function createSingleSubjectDiv(subject, start, end){\n                var textDiv    = document.createElement('div');\n                var startDiv   = document.createElement('div');\n                var endDiv     = document.createElement('div');\n                var subjectDiv = document.createElement('div');\n                textDiv.innerHTML         = 'Subject'.bold();\n                textDiv.style.display     = 'inline-block';\n                textDiv.style.textAlign   = 'right';\n                textDiv.style.marginRight = '20px';\n                textDiv.style.width       = '55px';\n                startDiv.style.width       = '25px';\n                startDiv.innerHTML         = String(start).bold();\n                startDiv.style.display     = 'inline-block';\n                startDiv.style.marginRight = '20px';\n                endDiv.innerHTML         = String(end).bold();\n                endDiv.style.display     = 'inline-block';\n                endDiv.style.marginLeft  = '20px';\n                endDiv.style.marginRight = '70px';\n                subjectDiv.appendChild(textDiv);\n                subjectDiv.appendChild(startDiv);\n                for(var i = 0; i < subject.length; i++){\n                    var div = document.createElement('div');\n                    div.style.backgroundColor = getAminoColor(subject.charAt(i));\n                    div.innerHTML             = subject.charAt(i).bold();\n                    div.style.width           = '18px';\n                    div.style.textAlign       = 'center';\n                    div.style.display         = 'inline-block';\n                    subjectDiv.appendChild(div);\n                }\n                subjectDiv.appendChild(endDiv);\n                return subjectDiv;\n            }\n\n            function getAminoColor(char){\n                switch(char) {\n                    case 'A':\n                        return '#DBFA60';\n                        break;\n                    case 'C':\n                        return '#F9FA60';\n                        break;\n                    case 'D':\n                        return '#F9605F';\n                        break;\n                    case 'E':\n                        return '#F9609C';\n                        break;\n                    case 'F':\n                        return '#5FF99D';\n                        break;\n                    case 'G':\n                        return '#F9BC5F';\n                        break;\n                    case 'H':\n                        return '#609DF9';\n                        break;\n                    case 'I':\n                        return '#99F95A';\n                        break;\n                    case 'K':\n                        return '#A062FF';\n                        break;\n                    case 'L':\n                        return '#7EF960';\n                        break;\n                    case 'M':\n                        return '#63FF63';\n                        break;\n                    case 'N':\n                        return '#D95DF9';\n                        break;\n                    case 'P':\n                        return '#F9DA60';\n                        break;\n                    case 'Q':\n                        return '#F955D8';\n                        break;\n                    case 'R':\n                        return '#5360FB';\n                        break;\n                    case 'S':\n                        return '#F97E60';\n                        break;\n                    case 'T':\n                        return '#FFA563';\n                        break;\n                    case 'V':\n                        return '#C0F86B';\n                        break;\n                    case 'W':\n                        return '#FDD9F9';\n                        break;\n                    case 'Y':\n                        return '#60F9DA';\n                        break;\n                    default:\n                        return '#FFFFFF';\n                }\n            }\n        }\n});\n\n},{\"js-class\":1,\"js-extend\":2}]},{},[]);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/plugins/visualizations/charts/static/repository/plugins/biojs/blasterjs/biojs-vis-blasterjs/build/blasterjs.js\n// module id = 5\n// module chunks = 1"],"sourceRoot":""}