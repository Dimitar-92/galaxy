{"version":3,"sources":["webpack:///biojs_interactions.js","webpack:///webpack/bootstrap 962c6a6668d6601930f1?185b","webpack:///./config/plugins/visualizations/charts/static/repository/visualizations/biojs/interactions/wrapper.js","webpack:///(webpack)/buildin/module.js","webpack:///./config/plugins/visualizations/charts/static/repository/plugins/biojs/interactions/~/backbone-events-standalone/backbone-events-standalone.js","webpack:///./config/plugins/visualizations/charts/static/repository/plugins/biojs/interactions/~/backbone-events-standalone/index.js","webpack:///./config/plugins/visualizations/charts/static/repository/plugins/biojs/interactions/~/biojs-events/index.js","webpack:///./config/plugins/visualizations/charts/static/repository/plugins/biojs/interactions/~/interactions/lib/Biojs.InteractionsD3.js","webpack:///./config/plugins/visualizations/charts/static/repository/plugins/biojs/interactions/~/js-class/class.js","webpack:///./config/plugins/visualizations/charts/static/repository/plugins/biojs/interactions/~/js-extend/extend.js"],"names":["define","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","interactions","Backbone","Model","extend","initialize","options","yourDiv","chart","dataset","settings","document","getElementById","targets","instance","target","pid","addProtein","name","showLegend","typeLegend","organism","features","f1","f2","f3","addInteraction","Math","floor","random","score","restart","apply","undefined","webpackPolyfill","deprecate","paths","children","miniscore","keys","Object","obj","TypeError","key","hasOwnProperty","length","uniqueId","prefix","idCounter","has","each","iterator","context","nativeForEach","forEach","i","l","this","once","func","memo","ran","arguments","Events","Array","prototype","slice","_","on","callback","eventsApi","_events","events","push","ctx","self","off","_callback","retain","ev","names","j","k","trigger","args","allEvents","all","triggerEvents","stopListening","listeners","_listeners","deleteListener","_listenerId","eventSplitter","action","rest","concat","test","split","a1","a2","a3","listenMethods","listenTo","listenToOnce","implementation","method","bind","unbind","mixin","proto","BackboneEvents","onAll","oldMixin","InteractionsD3","Class","force","vis","interactionsA","proteins","proteinsA","node_drag","color","foci","organisms","tTranslate","tScale","constructor","redraw","x","y","scaleP","trans","scale","d3","event","translate","opt","enableEdges","behavior","zoom","scaleExtent","Infinity","W","rect","width","animVal","value","H","height","Ws","Hs","attr","dragstart","d","stop","dragmove","px","dx","py","dy","tick","dragend","fixed","resume","e","type","alpha","o","selectAll","max","r","min","source","_container","$","empty","addClass","indexOf","substring","ordinal","range","colors","select","append","perspective","layout","nodes","links","size","drag","radius","eventTypes","setSize","numberOfOrganism","proteinId1","proteinId2","extraAtributes","protein1","getProtein","protein2","interaction","n","protein","fixedProteins","proteinId","getInteractionIndex","sourceId","targetId","getInteraction","removeInteraction","intIndex","splice","p1","p2","removeProtein","excludelist","targetid","resetGraphic","_figuresOrder","charge","linkDistance","start","link","data","enter","insert","exit","remove","node","svg","symbol","symbolTypes","text","substr","legends","_paintLegends","_sortLegends","sort","a","b","_paintLegend","legend","filter","style","h","sqrt","toFixed","w","longestLegend","legendBlock","legendTypes","addLegends","hide","selector","show","highlight","setFillColor","setColor","swapFixed","setSizeScale","refreshSizeScale","hideLegend","swapShowLegend","getFixedProteins","prots","prot","fixProteinAt","global","inherit","dest","src","noParent","getOwnPropertyNames","desc","getOwnPropertyDescriptor","defineProperty","__proto__","findType","meta","implements","implType","implMeta","base","classProto","clone","isArray","implementedType","theClass","enumerable","configurable","writable","statics","object","Checker","typeOf","typeInfo","an","is","VERSION","sources","prop"],"mappings":"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","file":"biojs_interactions.js","sourcesContent":["define(function() { return /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Give the path to your main javascript file which is installed in the plugins/biojs/YourVisualizationName folder\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(9) ], __WEBPACK_AMD_DEFINE_RESULT__ = function(interactions) {\n\t    return Backbone.Model.extend({\n\t        initialize: function( options ) {\n\t            var chart    = options.chart;\n\t            var dataset  = options.dataset;\n\t            var settings = options.chart.settings;\n\t           var yourDiv = document.getElementById(options.targets[ 0 ] + \"\");\n\t\n\tvar instance = new interactions({\n\t  target: yourDiv.id,\n\t}); \n\t\n\tfor (var pid=1;pid<=15;pid++)\n\t  instance.addProtein({ \"id\":pid,\"name\":pid,\"showLegend\":false,\"typeLegend\":\"id\",\"organism\":\"human\"+pid%3,\"features\":{\"f1\":\"val1\",\"f2\":\"val2\",\"f3\":\"val3\"}});\n\t\n\tfor (var pid=1;pid<=30;pid++)\n\t  instance.addInteraction(Math.floor((Math.random()*15)+1),Math.floor((Math.random()*15)+1) ,{score:Math.random()});\n\t\n\tinstance.restart();\n\t        } \n\t    });\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Standalone extraction of Backbone.Events, no external dependency required.\n\t * Degrades nicely when Backone/underscore are already available in the current\n\t * global context.\n\t *\n\t * Note that docs suggest to use underscore's `_.extend()` method to add Events\n\t * support to some given object. A `mixin()` method has been added to the Events\n\t * prototype to avoid using underscore for that sole purpose:\n\t *\n\t *     var myEventEmitter = BackboneEvents.mixin({});\n\t *\n\t * Or for a function constructor:\n\t *\n\t *     function MyConstructor(){}\n\t *     MyConstructor.prototype.foo = function(){}\n\t *     BackboneEvents.mixin(MyConstructor.prototype);\n\t *\n\t * (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n\t * (c) 2013 Nicolas Perriault\n\t */\n\t/* global exports:true, define, module */\n\t(function() {\n\t  var root = this,\n\t      nativeForEach = Array.prototype.forEach,\n\t      hasOwnProperty = Object.prototype.hasOwnProperty,\n\t      slice = Array.prototype.slice,\n\t      idCounter = 0;\n\t\n\t  // Returns a partial implementation matching the minimal API subset required\n\t  // by Backbone.Events\n\t  function miniscore() {\n\t    return {\n\t      keys: Object.keys || function (obj) {\n\t        if (typeof obj !== \"object\" && typeof obj !== \"function\" || obj === null) {\n\t          throw new TypeError(\"keys() called on a non-object\");\n\t        }\n\t        var key, keys = [];\n\t        for (key in obj) {\n\t          if (obj.hasOwnProperty(key)) {\n\t            keys[keys.length] = key;\n\t          }\n\t        }\n\t        return keys;\n\t      },\n\t\n\t      uniqueId: function(prefix) {\n\t        var id = ++idCounter + '';\n\t        return prefix ? prefix + id : id;\n\t      },\n\t\n\t      has: function(obj, key) {\n\t        return hasOwnProperty.call(obj, key);\n\t      },\n\t\n\t      each: function(obj, iterator, context) {\n\t        if (obj == null) return;\n\t        if (nativeForEach && obj.forEach === nativeForEach) {\n\t          obj.forEach(iterator, context);\n\t        } else if (obj.length === +obj.length) {\n\t          for (var i = 0, l = obj.length; i < l; i++) {\n\t            iterator.call(context, obj[i], i, obj);\n\t          }\n\t        } else {\n\t          for (var key in obj) {\n\t            if (this.has(obj, key)) {\n\t              iterator.call(context, obj[key], key, obj);\n\t            }\n\t          }\n\t        }\n\t      },\n\t\n\t      once: function(func) {\n\t        var ran = false, memo;\n\t        return function() {\n\t          if (ran) return memo;\n\t          ran = true;\n\t          memo = func.apply(this, arguments);\n\t          func = null;\n\t          return memo;\n\t        };\n\t      }\n\t    };\n\t  }\n\t\n\t  var _ = miniscore(), Events;\n\t\n\t  // Backbone.Events\n\t  // ---------------\n\t\n\t  // A module that can be mixed in to *any object* in order to provide it with\n\t  // custom events. You may bind with `on` or remove with `off` callback\n\t  // functions to an event; `trigger`-ing an event fires all callbacks in\n\t  // succession.\n\t  //\n\t  //     var object = {};\n\t  //     _.extend(object, Backbone.Events);\n\t  //     object.on('expand', function(){ alert('expanded'); });\n\t  //     object.trigger('expand');\n\t  //\n\t  Events = {\n\t\n\t    // Bind an event to a `callback` function. Passing `\"all\"` will bind\n\t    // the callback to all events fired.\n\t    on: function(name, callback, context) {\n\t      if (!eventsApi(this, 'on', name, [callback, context]) || !callback) return this;\n\t      this._events || (this._events = {});\n\t      var events = this._events[name] || (this._events[name] = []);\n\t      events.push({callback: callback, context: context, ctx: context || this});\n\t      return this;\n\t    },\n\t\n\t    // Bind an event to only be triggered a single time. After the first time\n\t    // the callback is invoked, it will be removed.\n\t    once: function(name, callback, context) {\n\t      if (!eventsApi(this, 'once', name, [callback, context]) || !callback) return this;\n\t      var self = this;\n\t      var once = _.once(function() {\n\t        self.off(name, once);\n\t        callback.apply(this, arguments);\n\t      });\n\t      once._callback = callback;\n\t      return this.on(name, once, context);\n\t    },\n\t\n\t    // Remove one or many callbacks. If `context` is null, removes all\n\t    // callbacks with that function. If `callback` is null, removes all\n\t    // callbacks for the event. If `name` is null, removes all bound\n\t    // callbacks for all events.\n\t    off: function(name, callback, context) {\n\t      var retain, ev, events, names, i, l, j, k;\n\t      if (!this._events || !eventsApi(this, 'off', name, [callback, context])) return this;\n\t      if (!name && !callback && !context) {\n\t        this._events = {};\n\t        return this;\n\t      }\n\t\n\t      names = name ? [name] : _.keys(this._events);\n\t      for (i = 0, l = names.length; i < l; i++) {\n\t        name = names[i];\n\t        if (events = this._events[name]) {\n\t          this._events[name] = retain = [];\n\t          if (callback || context) {\n\t            for (j = 0, k = events.length; j < k; j++) {\n\t              ev = events[j];\n\t              if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||\n\t                  (context && context !== ev.context)) {\n\t                retain.push(ev);\n\t              }\n\t            }\n\t          }\n\t          if (!retain.length) delete this._events[name];\n\t        }\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    // Trigger one or many events, firing all bound callbacks. Callbacks are\n\t    // passed the same arguments as `trigger` is, apart from the event name\n\t    // (unless you're listening on `\"all\"`, which will cause your callback to\n\t    // receive the true name of the event as the first argument).\n\t    trigger: function(name) {\n\t      if (!this._events) return this;\n\t      var args = slice.call(arguments, 1);\n\t      if (!eventsApi(this, 'trigger', name, args)) return this;\n\t      var events = this._events[name];\n\t      var allEvents = this._events.all;\n\t      if (events) triggerEvents(events, args);\n\t      if (allEvents) triggerEvents(allEvents, arguments);\n\t      return this;\n\t    },\n\t\n\t    // Tell this object to stop listening to either specific events ... or\n\t    // to every object it's currently listening to.\n\t    stopListening: function(obj, name, callback) {\n\t      var listeners = this._listeners;\n\t      if (!listeners) return this;\n\t      var deleteListener = !name && !callback;\n\t      if (typeof name === 'object') callback = this;\n\t      if (obj) (listeners = {})[obj._listenerId] = obj;\n\t      for (var id in listeners) {\n\t        listeners[id].off(name, callback, this);\n\t        if (deleteListener) delete this._listeners[id];\n\t      }\n\t      return this;\n\t    }\n\t\n\t  };\n\t\n\t  // Regular expression used to split event strings.\n\t  var eventSplitter = /\\s+/;\n\t\n\t  // Implement fancy features of the Events API such as multiple event\n\t  // names `\"change blur\"` and jQuery-style event maps `{change: action}`\n\t  // in terms of the existing API.\n\t  var eventsApi = function(obj, action, name, rest) {\n\t    if (!name) return true;\n\t\n\t    // Handle event maps.\n\t    if (typeof name === 'object') {\n\t      for (var key in name) {\n\t        obj[action].apply(obj, [key, name[key]].concat(rest));\n\t      }\n\t      return false;\n\t    }\n\t\n\t    // Handle space separated event names.\n\t    if (eventSplitter.test(name)) {\n\t      var names = name.split(eventSplitter);\n\t      for (var i = 0, l = names.length; i < l; i++) {\n\t        obj[action].apply(obj, [names[i]].concat(rest));\n\t      }\n\t      return false;\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  // A difficult-to-believe, but optimized internal dispatch function for\n\t  // triggering events. Tries to keep the usual cases speedy (most internal\n\t  // Backbone events have 3 arguments).\n\t  var triggerEvents = function(events, args) {\n\t    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n\t    switch (args.length) {\n\t      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n\t      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n\t      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n\t      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n\t      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args);\n\t    }\n\t  };\n\t\n\t  var listenMethods = {listenTo: 'on', listenToOnce: 'once'};\n\t\n\t  // Inversion-of-control versions of `on` and `once`. Tell *this* object to\n\t  // listen to an event in another object ... keeping track of what it's\n\t  // listening to.\n\t  _.each(listenMethods, function(implementation, method) {\n\t    Events[method] = function(obj, name, callback) {\n\t      var listeners = this._listeners || (this._listeners = {});\n\t      var id = obj._listenerId || (obj._listenerId = _.uniqueId('l'));\n\t      listeners[id] = obj;\n\t      if (typeof name === 'object') callback = this;\n\t      obj[implementation](name, callback, this);\n\t      return this;\n\t    };\n\t  });\n\t\n\t  // Aliases for backwards compatibility.\n\t  Events.bind   = Events.on;\n\t  Events.unbind = Events.off;\n\t\n\t  // Mixin utility\n\t  Events.mixin = function(proto) {\n\t    var exports = ['on', 'once', 'off', 'trigger', 'stopListening', 'listenTo',\n\t                   'listenToOnce', 'bind', 'unbind'];\n\t    _.each(exports, function(name) {\n\t      proto[name] = this[name];\n\t    }, this);\n\t    return proto;\n\t  };\n\t\n\t  // Export Events as BackboneEvents depending on current context\n\t  if (true) {\n\t    if (typeof module !== 'undefined' && module.exports) {\n\t      exports = module.exports = Events;\n\t    }\n\t    exports.BackboneEvents = Events;\n\t  }else if (typeof define === \"function\"  && typeof define.amd == \"object\") {\n\t    define(function() {\n\t      return Events;\n\t    });\n\t  } else {\n\t    root.BackboneEvents = Events;\n\t  }\n\t})(this);\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(6);\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar events = __webpack_require__(7);\n\t\n\tevents.onAll = function(callback,context){\n\t  this.on(\"all\", callback,context);\n\t  return this;\n\t};\n\t\n\t// Mixin utility\n\tevents.oldMixin = events.mixin;\n\tevents.mixin = function(proto) {\n\t  events.oldMixin(proto);\n\t  // add custom onAll\n\t  var exports = ['onAll'];\n\t  for(var i=0; i < exports.length;i++){\n\t    var name = exports[i];\n\t    proto[name] = this[name];\n\t  }\n\t  return proto;\n\t};\n\t\n\tmodule.exports = events;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * This component uses the D3 library and specifically its implementation of the force algorithm to \n\t * represent a network of protein interactions.  \n\t * \n\t * @class\n\t * @extends Biojs\n\t * \n\t * @author <a href=\"mailto:gustavoadolfo.salazar@gmail.com\">Gustavo A. Salazar</a>\n\t * @version 0.9.1_beta\n\t * @category 1\n\t * \n\t * @requires <a href='http://code.jquery.com/query-1.7.2.min.js'>jQuery Core 1.7.2</a>\n\t * @dependency <script language=\"JavaScript\" type=\"text/javascript\" src=\"../biojs/dependencies/jquery/jquery-1.7.2.min.js\"></script>\n\t * \n\t * @requires <a href='http://d3js.org/'>D3</a>\n\t * @dependency <script src=\"http://d3js.org/d3.v2.min.js\" type=\"text/javascript\"></script>\n\t *\n\t * @requires <a href='http://www.ebi.ac.uk/~jgomez/biojs/biojs/css/biojs.InteractionsD3.css'>InteractionsD3 CSS</a>\n\t * @dependency <link rel=\"stylesheet\" href=\"../biojs/css/biojs.InteractionsD3.css\" />\n\t * \n\t * @param {Object} options An object with the options for the InteractionsD3 component.\n\t * \n\t * @option {string} target\n\t *    Identifier of the DIV tag where the component should be displayed.\n\t * @option {string} width\n\t *    Width of the SVG element, if given in percentage it will use it on proportion of the container \n\t * @option {string} height\n\t *    Height of the SVG element, if given in percentage it will use it on proportion of the container \n\t * @option {string} radius\n\t *    Radius of the nodes representing the proteins\n\t * @option {string} enableEdges\n\t * \t  Force the proteins to stay in the defined area of the SVG\n\t * \n\t * @example\n\t * \t\t\tvar instance = new Biojs.InteractionsD3({\n\t * \t\t\t\ttarget: \"YourOwnDivId\",\n\t * \t\t\t});\t\n\t * \t\t\tfor (var pid=1;pid<=15;pid++)\n\t *\t\t\t\tinstance.addProtein({ \"id\":pid,\"name\":pid,\"showLegend\":false,\"typeLegend\":\"id\",\"organism\":\"human\"+pid%3,\"features\":{\"f1\":\"val1\",\"f2\":\"val2\",\"f3\":\"val3\"}});\n\t *\t\t\t\n\t * \t\t\tfor (var pid=1;pid<=30;pid++)\n\t *\t\t\t\tinstance.addInteraction(Math.floor((Math.random()*15)+1),Math.floor((Math.random()*15)+1) ,{score:Math.random()});\n\t * \t\t\tinstance.restart();\n\t */\n\t\n\tvar Class = __webpack_require__(10);\n\tvar InteractionsD3;\n\tmodule.exports = InteractionsD3 = Class(\n\t\t/** @lends Biojs.InteractionsD3# */\n\t\t{\n\t\t\tforce:null,\n\t\t\tvis:null,\n\t\t\tinteractions:[],\n\t\t\tinteractionsA:{},\n\t\t\tproteins:[],\n\t\t\tproteinsA:{},\n\t\t\tnode_drag:null,\n\t\t\tcolor: null,\n\t\t\tfoci: [],\n\t\t\torganisms: {},\n\t\t\t\n\t\t\t//Transformation values\n\t\t\ttTranslate:null,\n\t\t\ttScale:null,\n\t\t\t\n\t\t\tconstructor: function (options) {\n\t\t\t\tvar self \t= this;\n\t\t\t\tself.force\t=null;\n\t\t\t\tself.vis\t=null;\n\t\t\t\tself.interactions=[];\n\t\t\t\tself.interactionsA={};\n\t\t\t\tself.proteins=[];\n\t\t\t\tself.proteinsA={};\n\t\t\t\tself.node_drag=null;\n\t\t\t\tself.color= null;\n\t\t\t\tself.foci=[];\n\t\t\t\tself.organisms={};\n\t\n\t      __webpack_require__(11).extend(this.opt, options)\n\t\n\t\t\t\tthis._container = $(\"#\"+self.opt.target);\n\t\t\t\tthis._container.empty();\n\t\t\t\t$(this._container).addClass(\"graphNetwork\");\n\t\t\t\t\n\t\t\t\tvar\twidth = $(this._container).width(),\n\t\t\t\t\theight = $(this._container).height();\n\t\n\t\t\t\tif (self.opt.width.indexOf(\"%\")!=-1)\n\t\t\t\t\twidth = width*(self.opt.width.substring(0, self.opt.width.length-1)*1)/100.0;\n\t\t\t\telse\n\t\t\t\t\twidth=self.opt.width*1;\n\t\t\t\tself.opt.width=width;\n\t\t\t\t\n\t\t\t\tif (self.opt.height.indexOf(\"%\")!=-1)\n\t\t\t\t\theight = height*(self.opt.height.substring(0, self.opt.height.length-1)*1)/100.0;\n\t\t\t\telse\n\t\t\t\t\theight=self.opt.height*1;\n\t\t\t\tself.opt.height=height;\n\t\t\t\t\n\t\t\t\tthis._container.width(width);\n\t\t\t\tthis._container.height(height);\n\t\t\t\t\n\t\t\t\tself.color = function() {\n\t\t\t\t    return d3.scale.ordinal().range(self.colors);\n\t\t\t\t}();\n\t\n\t\t\t\tself.zoom=d3.behavior.zoom().\n\t    \t\tscaleExtent([(self.opt.enableEdges)?1:0.1, 10])\n\t    \t\t.on(\"zoom\", redraw);\n\t\t\t\tself.vis = d3.select(\"#\"+self.opt.target).append(\"svg\")\n\t\t\t\t    .attr(\"width\", width)\n\t\t\t\t    .attr(\"height\", height)\n\t\t\t\t    .attr(\"pointer-events\", \"all\")\n\t\t\t\t    .call(self.zoom)\n\t\t\t\t    .append('svg:g');\n\t\t\t\t\n\t\t\t\tself.vis.append('svg:rect')\n\t\t\t\t    .attr('width', width*20)\n\t\t\t\t    .attr('height', height*20)\n\t\t\t\t    .attr('x', -width*10)\n\t\t\t\t    .attr('y', -height*10)\n\t\t\t\t    .attr('fill', 'white')\n\t\t\t\t    .attr('stroke','white');\n\t\n\t\t\t\tself.rect= self.vis.append('svg:rect')\n\t\t\t\t\t.attr(\"class\", \"frame\")\n\t\t\t\t    .attr('width', width)\n\t\t\t\t    .attr('height', height)\n\t\t\t\t    .attr('fill', 'white')\n\t\t\t\t    .attr('stroke','white')\n\t\t\t\t    .attr(\"stroke-dasharray\",\"5,5\");\n\t\n\t\n\t\t\t\tself.perspective=d3.select(\"#\"+self.opt.target + \" svg\").append('svg:g');\n\t\t\t\t\n\t\t\t\t \n\t\t\t\t\n\t\t\t\tfunction redraw(x,y,scaleP) {\n\t\t\t\t\tvar trans=null,scale=null;\n\t\t\t\t\tif (typeof x!=\"undefined\" && typeof y!=\"undefined\"){\n\t\t\t\t\t\ttrans=[x,y];\n\t\t\t\t\t\tscale = scaleP;\n\t\t\t\t\t}else{\n\t\t\t\t\t\ttrans=d3.event.translate;\n\t\t\t\t\t\tscale = d3.event.scale;\n\t\t\t\t\t}\n\t\t\t\t\tself.tTranslate=trans;\n\t\t\t\t\tself.tScale=scale;\n\t\t\t\t\tif (self.opt.enableEdges) {\n\t\t\t\t\t\tif(scale<1)scale=1;\n\t\t\t\t\t\td3.behavior.zoom().scaleExtent([1, Infinity]);\n\t\t\t\t\t\t  if (trans[0]>0)trans[0]=0;\n\t\t\t\t\t\t  if (trans[1]>0)trans[1]=0;\n\t\t\n\t\t\t\t\t\t  var W = self.rect[0][0].width.animVal.value, H= self.rect[0][0].height.animVal.value;\n\t\t\t\t\t\t  var Ws = W*scale, Hs = H*scale;\n\t\t\t\t\t\t  if (Ws<W-trans[0]) trans[0]=W-Ws;\n\t\t\t\t\t\t  if (Hs<H-trans[1]) trans[1]=H-Hs;\n\t\t\t\t\t}\n\t\t\t\t\t  self.vis.attr(\"transform\",\n\t\t\t\t\t      \"translate(\" + trans + \")\"\n\t\t\t\t\t      + \" scale(\" + scale + \")\");\n\t\t\t\t};\n\t\t\t\tself.redraw=redraw;\n\t\t\t\t\n\t\t\t\tself.force = d3.layout.force()\n\t\t\t\t    .nodes(self.proteins)\n\t\t\t\t    .links(self.interactions)\n\t\t\t\t    .size([width, height]);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tself.node_drag = d3.behavior.drag()\n\t\t\t\t\t.on(\"dragstart\", dragstart)\n\t\t\t\t\t.on(\"drag\", dragmove)\n\t\t\t\t\t.on(\"dragend\", dragend);\n\t\n\t\t\t\tfunction dragstart(d, i) {\n\t\t\t\t\tself.force.stop(); // stops the force auto positioning before you start dragging\n\t\t\t\t}\n\t\n\t\t\t\tfunction dragmove(d, i) {\n\t\t\t\t\td.px += d3.event.dx;\n\t\t\t\t\td.py += d3.event.dy;\n\t\t\t\t\td.x += d3.event.dx;\n\t\t\t\t\td.y += d3.event.dy; \n\t\t\t\t\ttick(d3.event); // this is the key to make it work together with updating both px,py,x,y on d !\n\t\t\t\t}\n\t\n\t\t\t\tfunction dragend(d, i) {\n\t\t\t\t\td.fixed = true; // of course set the node to fixed so the force doesn't include the node in its auto positioning stuff\n\t\t\t\t\ttick(d3.event);\n\t\t\t\t\tself.force.resume();\n\t\t\t\t}\n\t\t\t\tself.force.on(\"tick\", tick);\n\t\t\t\tfunction tick(e) {\n\t\t\t\t\tif (e.type==\"tick\"){\n\t\t\t\t\t\tvar k = .1 * e.alpha;\n\t\t\t\t\t\tself.proteins.forEach(function(o, i) {\n\t\t\t\t\t\t\to.y += (self.foci[self.organisms[o.organism]].y - o.y) * k;\n\t\t\t\t\t\t\to.x += (self.foci[self.organisms[o.organism]].x - o.x) * k;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tself.vis.selectAll(\"path.figure\")\n\t\t\t\t\t\t\t.attr(\"transform\", function(d) { \n\t\t\t\t\t\t\t\tif (self.opt.enableEdges)\n\t\t\t\t\t\t\t\t\treturn \"translate(\" + Math.max(r, Math.min(self.opt.width , d.x+r)) + \",\" + Math.max(r, Math.min(self.opt.height, d.y+r)) + \")\";\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\treturn \"translate(\" + d.x + \",\" +  d.y + \")\"; \n\t\t\t\t\t\t\t});\n\t\n\t\t\t\t\tif (self.opt.enableEdges) \n\t\t\t\t\t\tself.vis.selectAll(\".legend\")\n\t\t\t\t\t\t\t.attr(\"x\", function(d) { return d.x = Math.max(r, Math.min(self.opt.width - r, d.x)); })\n\t\t\t\t\t\t\t.attr(\"y\", function(d) { return d.y = Math.max(r, Math.min(self.opt.height - r, d.y)); });\n\t\t\t\t\telse\n\t\t\t\t\t\tself.vis.selectAll(\".legend\")\n\t\t\t\t\t\t\t.attr(\"x\", function(d) { return d.x; })\n\t\t\t\t\t\t\t.attr(\"y\", function(d) { return d.y; });\n\t\t\t\t\tif (self.opt.enableEdges) \n\t\t\t\t\t\tself.vis.selectAll(\"line.link\")\n\t\t\t\t\t\t\t.attr(\"x1\", function(d) { return d.source.x+r; })\n\t\t\t\t\t\t\t.attr(\"y1\", function(d) { return d.source.y+r; })\n\t\t\t\t\t\t\t.attr(\"x2\", function(d) { return d.target.x+r; })\n\t\t\t\t\t\t\t.attr(\"y2\", function(d) { return d.target.y+r; });\n\t\t\t\t\telse\n\t\t\t\t\t\tself.vis.selectAll(\"line.link\")\n\t\t\t\t\t\t\t.attr(\"x1\", function(d) { return d.source.x; })\n\t\t\t\t\t\t\t.attr(\"y1\", function(d) { return d.source.y; })\n\t\t\t\t\t\t\t.attr(\"x2\", function(d) { return d.target.x; })\n\t\t\t\t\t\t\t.attr(\"y2\", function(d) { return d.target.y; });\n\t\t\t\t};\n\t\t\t\tself.tick=tick;\n\t\t\t\t//Binding the _resize method when resizing the window! \n\t\t\t\t//d3.select(window).on(\"resize\", function(){self._resize(self);});\n\t\t\t\t\n\t\t\t\tself.restart();\n\t\t\t},\n\t\t\t/**\n\t\t\t *  Default values for the options\n\t\t\t *  @name Biojs.InteractionsD3-opt\n\t\t\t */\n\t\t\topt: {\n\t\t\t\ttarget: \"YourOwnDivId\",\n\t\t\t\twidth: \"100%\",\n\t\t\t\theight: \"500\", \n\t\t\t\tradius: 10,\n\t\t\t\tenableEdges:false\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Array containing the supported event names\n\t\t\t * @name Biojs.InteractionsD3-eventTypes\n\t\t\t */\n\t\t\teventTypes : [\n\t\t\t\t/**\n\t\t\t\t * @name Biojs.InteractionsD3#proteinClick\n\t\t\t\t * @event\n\t\t\t\t * @param {function} actionPerformed It is triggered when the user clicks on a protein\n\t\t\t\t * @eventData {@link Biojs.Event} objEvent Object containing the information of the event\n\t\t\t\t * @eventData {Object} objEvent.source The component which did triggered the event.\n\t\t\t\t * @eventData {Object} objEvent.protein the information of the protein that has been clicked.\n\t\t\t\t * @example \n\t\t\t\t * instance.proteinClick(\n\t\t\t\t *    function( objEvent ) {\n\t\t\t\t *       alert(\"The protein \" + objEvent.protein.id + \" was clicked.\");\n\t\t\t\t *    }\n\t\t\t\t * ); \n\t\t\t\t * \n\t\t\t\t * */\n\t\t\t\t\"proteinClick\",\n\t\t\t\t/**\n\t\t\t\t * @name Biojs.InteractionsD3#proteinMouseOver\n\t\t\t\t * @event\n\t\t\t\t * @param {function} actionPerformed It is triggered when the mouse pointer is over a protein\n\t\t\t\t * @eventData {@link Biojs.Event} objEvent Object containing the information of the event\n\t\t\t\t * @eventData {Object} objEvent.source The component which did triggered the event.\n\t\t\t\t * @eventData {Object} objEvent.protein the information of the protein that has been mouseover.\n\t\t\t\t * @example \n\t\t\t\t * instance.proteinMouseOver(\n\t\t\t\t *    function( objEvent ) {\n\t\t\t\t *       alert(\"The mouse is over the protein \" + objEvent.protein.id);\n\t\t\t\t *    }\n\t\t\t\t * ); \n\t\t\t\t * \n\t\t\t\t * */\n\t\t\t\t\"proteinMouseOver\",\n\t\t\t\t/**\n\t\t\t\t * @name Biojs.InteractionsD3#proteinMouseOut\n\t\t\t\t * @event\n\t\t\t\t * @param {function} actionPerformed It is triggered when the mouse pointer leave the area of a protein\n\t\t\t\t * @eventData {@link Biojs.Event} objEvent Object containing the information of the event\n\t\t\t\t * @eventData {Object} objEvent.source The component which did triggered the event.\n\t\t\t\t * @eventData {Object} objEvent.protein the information of the protein that has been mouseout.\n\t\t\t\t * @example \n\t\t\t\t * instance.proteinMouseOut(\n\t\t\t\t *    function( objEvent ) {\n\t\t\t\t *       alert(\"The mouse is out the protein \" + objEvent.protein.id);\n\t\t\t\t *    }\n\t\t\t\t * ); \n\t\t\t\t * \n\t\t\t\t * */\n\t\t\t\t\"proteinMouseOut\",\n\t\t\t\t/**\n\t\t\t\t * @name Biojs.InteractionsD3#interactionClick\n\t\t\t\t * @event\n\t\t\t\t * @param {function} actionPerformed A function which receives an {@link Biojs.Event} object as argument.\n\t\t\t\t * @eventData {Object} source The component which did triggered the event.\n\t\t\t\t * @eventData {Object} interaction the information of the interaction that has been clicked.\n\t\t\t\t * @example \n\t\t\t\t * instance.interactionClick(\n\t\t\t\t *    function( objEvent ) {\n\t\t\t\t *       alert(\"Click on the interaction \" + objEvent.interaction.source.id +\" - \"+ objEvent.interaction.target.id);\n\t\t\t\t *    }\n\t\t\t\t * ); \n\t\t\t\t * \n\t\t\t\t * */\n\t\t\t\t\"interactionClick\",\n\t\t\t\t/**\n\t\t\t\t * @name Biojs.InteractionsD3#interactionMouseOver\n\t\t\t\t * @event\n\t\t\t\t * @param {function} actionPerformed A function which receives an {@link Biojs.Event} object as argument.\n\t\t\t\t * @eventData {Object} source The component which did triggered the event.\n\t\t\t\t * @eventData {Object} interaction the information of the interaction that has been mouseover.\n\t\t\t\t * @example \n\t\t\t\t * instance.interactionMouseOver(\n\t\t\t\t *    function( objEvent ) {\n\t\t\t\t *       alert(\"The mouse is over the interaction \" + objEvent.interaction.source.id +\" - \"+ objEvent.interaction.target.id);\n\t\t\t\t *    }\n\t\t\t\t * ); \n\t\t\t\t * \n\t\t\t\t * */\n\t\t\t\t\"interactionMouseOver\",\n\t\t\t\t/**\n\t\t\t\t * @name Biojs.InteractionsD3#interactionMouseOut\n\t\t\t\t * @event\n\t\t\t\t * @param {function} actionPerformed It is triggered when the mouse pointer leave an interaction\n\t\t\t\t * @eventData {@link Biojs.Event} objEvent Object containing the information of the event\n\t\t\t\t * @eventData {Object} source The component which did triggered the event.\n\t\t\t\t * @eventData {Object} interaction the information of the interaction that has been mouseout.\n\t\t\t\t * @example \n\t\t\t\t * instance.interactionMouseOut(\n\t\t\t\t *    function( objEvent ) {\n\t\t\t\t *      alert(\"The mouse is out of the interaction \" + objEvent.interaction.source.id +\" - \"+ objEvent.interaction.target.id);\n\t\t\t\t *    }\n\t\t\t\t * ); \n\t\t\t\t * \n\t\t\t\t * */\n\t\t\t\t\"interactionMouseOut\",\n\t\t\t\t/**\n\t\t\t\t * @name Biojs.InteractionsD3#sizeChanged\n\t\t\t\t * @event\n\t\t\t\t * @param {function} actionPerformed It is triggered when the size of the SVG element has been changed. \n\t\t\t\t * @eventData {@link Biojs.Event} objEvent Object containing the information of the event\n\t\t\t\t * @eventData {Object} source The component which did triggered the event.\n\t\t\t\t * @eventData {Object} width The width of the new size\n\t\t\t\t * @eventData {Object} height The height of the new size\n\t\t\t\t * @example \n\t\t\t\t * instance.sizeChanged(\n\t\t\t\t *    function( objEvent ) {\n\t\t\t\t *      alert(\"The size has changed: (\"+objEvent.width+\",\"+objEvent.height+\")\" );\n\t\t\t\t *    }\n\t\t\t\t * ); \n\t\t\t\t * \n\t\t\t\t * */\n\t\t\t\t\"sizeChanged\"\n\t\t\t], \n\t\t\t/**\n\t\t\t * \n\t\t\t * allows to resize the SVG element updating the gravity points\n\t\t\t * @param {string} width value of width to be assign to the SVG\n\t\t\t * @param {string} height value of height to be assign to the SVG\n\t\t\t *\n\t\t\t * @example \n\t\t\t * instance.setSize(400,400);\n\t\t\t * instance.restart();\n\t\t\t */\n\t\t\tsetSize:function(width,height){\n\t\t\t\tvar self =this;\n\t\t\t\tself.opt.width=width;\n\t\t\t\tself.opt.height=height;\n\t\t\t\td3.select(\"#\"+self.opt.target+\" svg\")\n\t\t\t\t    .attr('width', width)\n\t\t\t\t    .attr('height', height);\n\t\t\t\td3.select(\"#\"+self.opt.target+\" .frame\")\n\t\t\t\t    .attr('width', width)\n\t\t\t\t    .attr('height', height);\n\t\n\t\t\t\tself._container.width(width);\n\t\t\t\tself._container.height(height);\n\t\t\t\tvar numberOfOrganism =Object.keys(self.organisms).length;\n\t\t\t\tself.foci=[];\n\t\t\t\tfor (var i=0; i<numberOfOrganism; i++){\n\t\t\t\t\tself.foci.push({x: (self.opt.width/(numberOfOrganism+1))*(i+1), y:self.opt.height/2});\n\t\t\t\t}\n\t\t\t\tif (self.tTranslate!=null) self.redraw(self.tTranslate[0], self.tTranslate[1], self.tScale);\n\t\t\t\tself.restart();\n\t\t\t\tself.trigger('sizeChanged', {\n\t\t\t\t\twidth:width,\n\t\t\t\t\theight:height\n\t\t\t\t});\n\t\t\t},\n\t\t\t/**\n\t\t\t * Adds an interaction between 2 proteins that are already in the graphic using their IDs\n\t\t\t * \n\t\t\t * @param {string} proteinId1 Id of the first protein in the interaction\n\t\t\t * @param {string} proteinId2 Id of the second protein in the interaction\n\t\t\t * @param {Object} [extraAtributes={}] An object containing meta information of the interaction \n\t\t\t * \t\t\t\t\tto be stored in the interaction itself. useful for triggered events\n\t\t\t *\n\t\t\t * @example \n\t\t\t * instance.addInteraction(Math.floor((Math.random()*15)+1),Math.floor((Math.random()*15)+1) ,{score:Math.random()});\n\t\t\t * instance.restart();\n\t\t\t */\n\t\t\taddInteraction: function(proteinId1,proteinId2,extraAtributes) {\n\t\t\t\tvar self=this;\n\t\n\t\t\t\t// Getting the protein with the first id and checking exists in the graphic\n\t\t\t\tvar protein1= self.getProtein(proteinId1);\n\t\t\t\tif (typeof protein1==\"undefined\")return false;\n\t\t\t\t\n\t\t\t\t// Getting the protein with the second id and checking exists in the graphic\n\t\t\t\tvar protein2= self.getProtein(proteinId2);\n\t\t\t\tif (typeof protein2==\"undefined\")return false;\n\t\t\t\t\n\t\t\t\t//Checking there is not an interaction between those proteins already in the graphic\n\t\t\t\tif (typeof self.interactionsA[proteinId1]!=\"undefined\" && self.interactionsA[proteinId1].indexOf(protein2)!=-1)\n\t\t\t\t\treturn self.interactionsA[proteinId1].indexOf(protein2);\n\t\t\t\t\t\n\t\t\t\t//creating and adding an interaction\n\t\t\t\tvar interaction = {source:protein1,target:protein2};\n\t\t\t\t//adding any parameters from the object extraAtributes to the interaction object\n\t\t\t\tif (typeof extraAtributes!=\"undefined\")\n\t\t\t\t\tfor (var key in extraAtributes)\n\t\t\t\t\t\tinteraction[key]=extraAtributes[key];\n\t\n\t\t\t\tvar n= self.interactions.push(interaction);\n\t\t\t\t\n\t\t\t\t//Saving the interaction in the associative array\n\t\t\t\tif (typeof self.interactionsA[interaction.source.id] == \"undefined\")\n\t\t\t\t\tself.interactionsA[interaction.source.id]=[interaction.target];\n\t\t\t\telse\n\t\t\t\t\tself.interactionsA[interaction.source.id].push(interaction.target);\n\t\t\t\tif (typeof self.interactionsA[interaction.target.id] == \"undefined\")\n\t\t\t\t\tself.interactionsA[interaction.target.id]=[interaction.source];\n\t\t\t\telse\n\t\t\t\t\tself.interactionsA[interaction.target.id].push(interaction.source);\n\t\n\t\t\t\treturn n;\n\t\t\t},\n\t\t\t/**\n\t\t\t * Adds a protein to the graphic\n\t\t\t * \n\t\t\t * @param {Object} protein An object containing information of the protein \n\t\t\t *\n\t\t\t * @example \n\t\t\t *  instance.addProtein({ \"id\":\"new\",\"name\":\"new\",\"showLegend\":true,\"typeLegend\":\"id\",\"organism\":\"human\"+pid%3,\"features\":{\"f1\":\"val1\",\"f2\":\"val2\",\"f3\":\"val3\"}});\n\t\t\t * instance.restart();\n\t\t\t */\n\t\t\taddProtein: function(protein) {\n\t\t\t\tvar self=this;\n\t\t\t\tvar n = self.proteins.indexOf(self.proteinsA[protein.id]);\n\t\t\t\tif (n!=-1)\n\t\t\t\t\treturn n;\n\t\t\t\tif (typeof self.fixedProteins[protein.id]==\"undefined\"){\n\t\t\t\t\tprotein.x=Math.floor((Math.random()*self.opt.width));\n\t\t\t\t\tprotein.y=Math.floor((Math.random()*self.opt.width));\n\t\t\t\t}else{\n\t\t\t\t\tprotein.x=self.fixedProteins[protein.id][0];\n\t\t\t\t\tprotein.y=self.fixedProteins[protein.id][1];\n\t\t\t\t\tprotein.fixed=true;\n\t\t\t\t}\n\t\t\t\tif(typeof protein.size == \"undefined\") protein.size=1;\n\t\t\t\tn= self.proteins.push(protein);\n\t\t\t\tself.proteinsA[protein.id]=protein;\n\t\t\t\tif (typeof self.interactionsA[protein.id] == \"undefined\")\n\t\t\t\t\tself.interactionsA[protein.id]=[];\n\t\t\t\tif (typeof self.organisms[protein.organism] == 'undefined'){\n\t\t\t\t\tvar numberOfOrganism =Object.keys(self.organisms).length;\n\t\t\t\t\tself.organisms[protein.organism] = numberOfOrganism++;\n\t\t\t\t\tself.foci=[];\n\t\t\t\t\tfor (var i=0; i<numberOfOrganism; i++){\n\t\t\t\t\t\tself.foci.push({x: (self.opt.width/(numberOfOrganism+1))*(i+1), y:self.opt.height/2});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn n;\n\t\t\t},\n\t\t\t/**\n\t\t\t * Gets the protein object by its id\n\t\t\t * \n\t\t\t * @param {string} proteinId The id of the protein\n\t\t\t *  \n\t\t\t * @return {Object} protein An object containing information of the protein \n\t\t\t *\n\t\t\t * @example \n\t\t\t * alert(instance.getProtein('3'));\n\t\t\t */\n\t\t\tgetProtein: function(proteinId) {\n\t\t\t\tvar self=this;\n\t\t\t\treturn self.proteinsA[proteinId];\n\t\t\t},\n\t\t\t/**\n\t\t\t * Gets the array index of the interaction object by the ids of the interactors\n\t\t\t * \n\t\t\t * @param {string} proteinId1 The id of the first protein interacting\n\t\t\t * @param {string} proteinId2 The id of the second protein interacting\n\t\t\t *  \n\t\t\t * @return {Integer} An int value indicating the index of the interaction in the array this.interactions \n\t\t\t *\n\t\t\t * @example \n\t\t\t * alert(instance.getInteractionIndex('3','5'));\n\t\t\t */\n\t\t\tgetInteractionIndex: function(proteinId1,proteinId2){\n\t\t\t\tvar self =this;\n\t\t\t\tfor (var i=0; i<self.interactions.length; i++){\n\t\t\t\t\tvar sourceId=self.interactions[i].source.id;\n\t\t\t\t\tvar targetId=self.interactions[i].target.id;\n\t\t\t\t\tif ((sourceId==proteinId1 && targetId==proteinId2)||(sourceId==proteinId2 && targetId==proteinId1))\n\t\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\t/**\n\t\t\t * gets the interaction object by the id of its proteins\n\t\t\t * \n\t\t\t * @param {string} proteinId1 The id of the first protein\n\t\t\t * @param {string} proteinId2 The id of the second protein\n\t\t\t *  \n\t\t\t * @return {Object} An object containing information of the interaction \n\t\t\t *\n\t\t\t * @example \n\t\t\t * alert(instance.getInteraction('1','3'));\n\t\t\t */\n\t\t\tgetInteraction: function(proteinId1,proteinId2){\n\t\t\t\tvar self =this;\n\t\t\t\treturn self.getInteractionIndex(proteinId1,proteinId2);\n\t\t\t},\n\t\t\t/**\n\t\t\t * Removes from the graphic the interaction by the id of its proteins\n\t\t\t * \n\t\t\t * @param {string} proteinId1 The id of the first protein\n\t\t\t * @param {string} proteinId2 The id of the second protein\n\t\t\t *  \n\t\t\t * @example \n\t\t\t * instance.removeInteraction('2','3');\n\t\t\t */\n\t\t\tremoveInteraction: function(proteinId1,proteinId2){\n\t\t\t\tvar self = this;\n\t\t\t\tvar intIndex = self.getInteractionIndex(proteinId1,proteinId2);\n\t\t\t\tself.interactions.splice(intIndex--, 1);\n\t\t\t\t\n\t\t\t\tvar p1=self.getProtein(proteinId1),\n\t\t\t\t\tp2=self.getProtein(proteinId2);\n\t\t\t\t\n\t\t\t\tintIndex = self.interactionsA[proteinId1].indexOf(p2);\n\t\t\t\tif (intIndex!=-1) self.interactionsA[proteinId1].splice(intIndex--, 1);\n\t\n\t\t\t\tintIndex = self.interactionsA[proteinId2].indexOf(p1);\n\t\t\t\tif (intIndex!=-1) self.interactionsA[proteinId2].splice(intIndex--, 1);\n\t\t\t},\n\t\t\t/**\n\t\t\t * removes a protein from the graphic with all the interactions unless the interactor \n\t\t\t * is also interacting with another protein that is visible. \n\t\t\t * \n\t\t\t * @param {string} proteinId The id of the protein to delete\n\t\t\t *  \n\t\t\t * @example \n\t\t\t * instance.removeProtein('2');\n\t\t\t */\n\t\t\tremoveProtein: function(proteinId, excludelist){\n\t\t\t\tvar self=this;\n\t\t\t\texcludelist = (typeof excludelist == \"undefined\")?[]:excludelist;\n\t\n\t\t\t\tif (typeof self.interactionsA[proteinId] != \"undefined\"){\n\t\t\t\t\tfor (var i=0;i<self.interactionsA[proteinId].length;i++){\n\t\t\t\t\t\tvar targetid=self.interactionsA[proteinId][i].id;\n\t\t\t\t\t\tif (excludelist.indexOf(targetid) == -1){\n\t\t\t\t\t\t\tself.removeInteraction(proteinId,targetid);\n\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\tif (self.interactionsA[targetid].length==0)\n\t\t\t\t\t\t\t\tself.removeProtein(targetid);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (self.interactionsA[proteinId].length==0){\n\t\t\t\t\t\tdelete self.interactionsA[proteinId];\n\t\t\t\t\t\tfor(var i=0; i<self.proteins.length; i++) {\n\t\t\t\t\t\t\tif(self.proteins[i].id == proteinId) {\n\t\t\t\t\t\t\t\tself.proteins.splice(i, 1);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete self.proteinsA[proteinId];\n\t\t\t\t\t}else{\n\t\t\t\t\t\tself.proteinsA[proteinId].fixed=false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * \n\t\t\t * Resets the graphic to zero proteins - zero interactions\n\t\t\t * \n\t\t\t * @example \n\t\t\t * instance.resetGraphic();\n\t\t\t */\n\t\t\tresetGraphic: function(){\n\t\t\t\tvar self=this;\n\t\t\t\tself.proteins=[];\n\t\t\t\tself.proteinsA={};\n\t\t\t\tself.interactions=[];\n\t\t\t\tself.restart();\n\t\t\t},\n\t\t\t_figuresOrder:[0,3,2,5,4,1],\n\t\t\t/**\n\t\t\t * Restart the graphic to materialize the changes done on it(e.g. add/remove proteins)\n\t\t\t * It is here where the SVG elemnts are created.\n\t\t\t * \n\t\t\t * @example \n\t\t\t * instance.restart();\n\t\t\t */\n\t\t\trestart: function(){\n\t\t\t\tvar self = this;\n\t\t\t\t\n\t\t\t\tself.force\n\t\t\t\t    .nodes(self.proteins)\n\t\t\t\t    .links(self.interactions)\n\t\t\t\t\t.charge(-self.opt.radius*(3+self.proteins.length))\n\t\t\t\t\t.linkDistance(self.opt.radius*(3+self.proteins.length*0.05)).start();\n\t\n\t\t\t\tvar link =self.vis.selectAll(\".graphNetwork line.link\")\n\t\t\t\t\t.data(self.interactions, function(d) { return d.source.id + \"-\" + d.target.id; });\n\t\t\t\t\n\t\t\t\tlink.enter().insert(\"line\" , \".node\") //insert before the .node so lines won't hide the nodes\n\t\t\t\t\t.attr(\"class\", \"link\")\n\t\t\t\t\t.attr(\"id\", function(d) { return \"link_\"+d.source.id+\"_\"+d.target.id; })\n\t\t\t\t\t.on(\"mouseover\", function(d){ \n\t\t\t\t\t\tself.trigger('interactionMouseOver', {\n\t\t\t\t\t\t\tinteraction: d\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.on(\"mouseout\",  function(d){ \n\t\t\t\t\t\tself.trigger('interactionMouseOut', {\n\t\t\t\t\t\t\tinteraction: d\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.on(\"click\", function(d){ \n\t\t\t\t\t\tself.trigger('interactionClick', {\n\t\t\t\t\t\t\tinteraction: d\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.attr(\"x1\", function(d) { return d.source.x; })\n\t\t\t\t\t.attr(\"y1\", function(d) { return d.source.y; })\n\t\t\t\t\t.attr(\"x2\", function(d) { return d.target.x; })\n\t\t\t\t\t.attr(\"y2\", function(d) { return d.target.y; });\n\t\t\t\t\n\t\t\t\tlink.exit().remove();\n\t\t\n\t\t\t\tvar nodes= self.vis.selectAll(\".graphNetwork .node\")\n\t\t\t\t\t.data(self.proteins, function(d) { return d.id;});\n\t\t\t\t\n\t\t\t\tvar node=nodes\n\t\t\t\t\t.enter().append(\"g\")\n\t\t\t\t\t.attr(\"class\", \"node\")\n\t\t\t\t\t.attr(\"id\", function(d) { return \"node_\"+d.id; })\n\t\t\t\t\t.attr(\"organism\", function(d) { return d.organism; })\n\t\t\t\t\t.call(self.node_drag);\n\t\t\t\t\n\t\t\t\tnode.append(\"path\")\n\t\t\t\t\t.attr(\"class\", \"figure\")\n\t\t\t\t\t.attr(\"d\", d3.svg.symbol()\n\t\t\t\t\t\t\t.size(function(d) {\n\t\t\t\t\t\t\t\treturn (2*self.opt.radius)*(2*self.opt.radius)*d.size*d.size;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.type(function(d) {\n\t\t\t\t\t\t\t\treturn d3.svg.symbolTypes[self._figuresOrder[self.organisms[d.organism]]];\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t)\n\t\t\t\t\t.attr(\"id\", function(d) { return \"figure_\"+d.id; })\n\t\t\t\t\t.on(\"click\", function(d){ \n\t\t\t\t\t\tself.trigger('proteinClick', {\n\t\t\t\t\t\t\tprotein: d\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.on(\"mouseover\", function(d){ \n\t\t\t\t\t\tself.trigger('proteinMouseOver', {\n\t\t\t\t\t\t\tprotein: d\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.on(\"mouseout\",  function(d){ \n\t\t\t\t\t\tself.trigger('proteinMouseOut', {\n\t\t\t\t\t\t\tprotein: d\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.attr(\"stroke-width\",self.opt.radius*0.3);\n\t\t\t\t\n\t\n\t\t\t\tnode\n\t\t\t\t\t.append(\"svg:text\")\n\t\t\t\t\t.attr(\"class\", \"legend\")\n\t\t\t\t\t.attr(\"id\", function(d) { return \"legend_\"+d.id; })\n\t\t\t\t\t.text(function(d) { \n\t\t\t\t\t\tif (d.typeLegend==\"id\") \n\t\t\t\t\t\t\treturn d.id;\n\t\t\t\t\t\telse if (d.typeLegend.indexOf(\"features.\")==0)\n\t\t\t\t\t\t\treturn d.features[d.typeLegend.substr(9)];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn d[d.typeLegend];\n\t\t\t\t\t\t})\n\t\t\t\t\t.attr(\"visibility\",function(d) { return (d.showLegend)?\"visible\":\"hidden\";})\n\t\t\t\t\t.attr(\"transform\",function(d) {\n\t\t\t\t\t\treturn (self.organisms[d.organism] == 0)?\"translate(-\"+(self.opt.radius*1.9)+\",\"+(self.opt.radius*0.4)+\")\":\"translate(-\"+(self.opt.radius*0.9)+\",\"+(self.opt.radius*1.3)+\")\";\n\t\t\t\t\t});\n\t\n\t\t\t\tnodes.exit().remove();\n\t\t\t\t\n\t\t\t\tself.perspective.selectAll(\".legendBlock\").remove();\n\t\t\t\tif (typeof self.legends!=\"undefined\" && self.legends!=null)\n\t\t\t\t\tself._paintLegends();\n\t\t\t},\n\t\t\t_sortLegends:function(){\n\t\t\t\tvar self = this;\n\t\t\t\tself.legends.sort(function(a,b){\n\t\t\t\t\tif (a[1]==b[1]){\n\t\t\t\t\t\tif (a[0]==\"label\") return -1;\n\t\t\t\t\t\tif (b[0]==\"label\") return 1;\n\t\t\t\t\t}else if (a[1]>b[1]){\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}else\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\t\t\t},\n\t\t\t_paintLegend:function(legend,type){\n\t\t\t\tvar self = this;\n\t\t\t\tlegend.filter(function(d) { return d[0]== \"label\" && d[1]==type; }).append(\"text\")\n\t\t\t\t\t.attr(\"x\", self.opt.width - 6)\n\t\t\t\t\t.attr(\"y\", 7)\n\t\t\t\t\t.attr(\"dy\", \".35em\")\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.style(\"font-size\", \"1.2em\")\n\t\t\t\t\t.text(type+\":\");\n\t\t\t\tif (type.indexOf(\"Resize By\")==0){\n\t\n\t\t\t\t\tlegend.filter(function(d) { return d[0]!=\"label\" && d[1]==type; }).append(\"path\")\n\t\t\t\t\t\t.attr(\"class\", \"figure\")\n\t\t\t\t\t\t.attr(\"d\", function(d) {\n\t\t\t\t\t\t\t\tvar h=2*self.opt.radius*Math.sqrt(d[0][2]);\n\t\t\t\t\t\t\t\treturn \"M0,0L0,10M0,5L\"+h+\",5M\"+h+\",0L\"+h+\",10 \";\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.attr(\"transform\", function(d) { \n\t\t\t\t\t\t\treturn \"translate(\" +  (self.opt.width - 18 - 2*self.opt.radius*Math.sqrt(d[0][2])) + \",\" +  0 + \")\"; \n\t\t\t\t\t\t})\n\t\t\t\t\t\t.style(\"fill\", \"transparent\")\n\t\t\t\t\t\t.style(\"stroke\", \"black\");\n\t\t\t\t\tlegend.filter(function(d) { return d[0]!=\"label\" && d[1]== type; }).append(\"text\")\n\t\t\t\t\t\t.attr(\"x\", function(d) { \n\t\t\t\t\t\t\treturn (self.opt.width - 22 - 5*self.opt.radius); \n\t\t\t\t\t\t})\n\t\t\t\t\t\t.attr(\"y\", 7)\n\t\t\t\t\t\t.attr(\"dy\", \".35em\")\n\t\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t\t.text(function(d) { return (d[0][1]*1.0).toFixed(2); });\n\t\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\tlegend.filter(function(d) { return d[0]!=\"label\" && d[1]==type; }).append(\"rect\")\n\t\t\t\t\t\t.attr(\"x\", self.opt.width - 18) \n\t\t\t\t\t\t.attr(\"width\", 13)\n\t\t\t\t\t\t.attr(\"height\", 13)\n\t\t\t\t\t\t.style(\"fill\", function(d,i) {\n\t\t\t\t\t\t\tif (typeof d[2]== \"undefined\")\n\t\t\t\t\t\t\t\treturn self.color(i);\n\t\t\t\t\t\t\treturn d[2];\n\t\t\t\t\t\t});\n\t\t\t\t\tlegend.filter(function(d) { return d[0]!=\"label\" && d[1]== type; }).append(\"text\")\n\t\t\t\t\t\t.attr(\"x\", self.opt.width - 24)\n\t\t\t\t\t\t.attr(\"y\", 7)\n\t\t\t\t\t\t.attr(\"dy\", \".35em\")\n\t\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t\t.text(function(d) { return d[0]; });\n\t\t\t\t}\n\t\t\t},\n\t\t\t_paintLegends: function(){\n\t\t\t\tvar self = this;\n\t\t\t\tvar w=18 + self.longestLegend*7 + 10;\n\t\t\t\tvar legendBlock = self.perspective.insert(\"g\",\".link\")\n\t\t\t\t\t.attr(\"class\", \"legendBlock\");\n\t\t\t\tself._sortLegends();\n\t\t\t\tlegendBlock.append(\"rect\")\n\t\t\t\t\t.attr(\"x\", self.opt.width -w)\n\t\t\t\t\t.attr(\"height\", 6 + self.legends.length *16)\n\t\t\t\t\t.attr(\"width\", w)\n\t\t\t\t\t.style(\"fill\", \"#ddd\")\n\t\t\t\t\t.style(\"fill-opacity\",\"0.4\");\n\t\n\t\t\t\tvar legend = legendBlock.selectAll(\".mainLegend\") \n\t\t\t\t\t.data(self.legends)\n\t\t\t\t\t.enter().insert(\"g\")\n\t\t\t\t\t.attr(\"class\", \"mainLegend\")\n\t\t\t\t\t.attr(\"transform\", function(d, i) { \n\t\t\t\t\t\treturn \"translate(0,\" + (3 + i * 16) + \")\"; \n\t\t\t\t\t});\n\t\t\t\tfor (var i=0; i< self.legendTypes.length; i++)\n\t\t\t\t\tself._paintLegend(legend,self.legendTypes[i]);\n\t\n\t\t\t},\n\t\t\tlongestLegend:4,\n\t\t\tlegendTypes:[],\n\t\t\t/**\n\t\t\t * Adds a legend to the graphic\n\t\t\t * \n\t\t\t * @example \t\t\t\t\t\t\n\t\t\t * instance.addLegends([\"Legend red\"],\"Color\",\"#FF0000\");\n\t\t\t * instance.restart();\n\t\t\t */\n\t\t\taddLegends:function(legends,type,color){\n\t\t\t\tvar self = this;\n\t\t\t\tif (self.legends==null) self.legends=[],self.legendTypes=[];\n\t\t\t\t\n\t\t\t\tif (legends==null) {\n\t\t\t\t\tself.legends = null;\n\t\t\t\t\tself.legendTypes=[];\n\t\t\t\t\tself.longestLegend=4;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (type==\"Resize By\") \n\t\t\t\t\ttype = type+ \" \"+legends[0];\n\t\t\t\tif (self.legendTypes.indexOf(type)==-1) {\n\t\t\t\t\tself.legends.push([\"label\",type]);\n\t\t\t\t\tself.legendTypes.push(type);\n\t\t\t\t\tif (type.length>self.longestLegend)\n\t\t\t\t\t\tself.longestLegend=type.length;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (type.indexOf(\"Resize By\")==0){ //is a size label\n\t\t\t\t\tself.legends.push([legends,type]);\n\t\t\t\t} else //is a color label\n\t\t\t\t\tfor (var i=0;i<legends.length;i++){\n\t\t\t\t\t\tif (typeof color==\"undefined\")\n\t\t\t\t\t\t\tself.legends.push([legends[i],type]);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tself.legends.push([legends[i],type,color]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (legends[i].length>self.longestLegend)\n\t\t\t\t\t\t\tself.longestLegend=legends[i].length;\n\t\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Hides the elements on the graphic that match the selector. \n\t\t\t * Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string \n\t\t\t * \n\t\t\t * @param {string} selector a string to represent a set of elements. Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string\n\t\t\t *  \n\t\t\t * @example \n\t\t\t * instance.hide(\"[id = node_10]\");\n\t\t\t */\n\t\t\thide: function(selector){\n\t\t\t\tvar self=this;\n\t\t\t\tself.vis.selectAll(selector).attr(\"visibility\", 'hidden');\n\t\t\t\tself.vis.selectAll(selector).selectAll(\" .legend\").attr(\"visibility\", 'hidden');\n\t\t\t},\n\t\t\t/**\n\t\t\t * Shows the elements on the graphic that match the selector. \n\t\t\t * Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string \n\t\t\t * \n\t\t\t * @param {string} selector a string to represent a set of elements. Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string\n\t\t\t *  \n\t\t\t * @example \n\t\t\t * instance.show(\"[id = node_10]\");\n\t\t\t */\n\t\t\tshow: function(selector){\n\t\t\t\tvar self=this;\n\t\t\t\tself.vis.selectAll(selector).attr(\"visibility\", 'visible');\n\t\t\t\tself.vis.selectAll(selector).selectAll(\" .legend\").attr(\"visibility\",function(d) { return (d.showLegend)?\"visible\":\"hidden\";});\n\t\t\t},\n\t\t\t/**\n\t\t\t * Highlight the elements on the graphic that match the selector. \n\t\t\t * Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string \n\t\t\t * \n\t\t\t * @param {string} selector a string to represent a set of elements. Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string\n\t\t\t *  \n\t\t\t * @example \n\t\t\t * instance.highlight(\"[id *= node_1]\");\n\t\t\t */\n\t\t\thighlight: function(selector){\n\t\t\t\tvar self=this;\n\t\t\t\tself.vis.selectAll(selector).style(\"stroke\", '#3d6');\n\t\t\t},\n\t\t\t/**\n\t\t\t * Set the fill's color of the elements on the graphic that match the selector. \n\t\t\t * Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string \n\t\t\t * \n\t\t\t * @param {string} selector a string to represent a set of elements. Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string\n\t\t\t * @param {string} color a color in web format eg. #FF0000\n\t\t\t *  \n\t\t\t * @example \n\t\t\t * instance.setFillColor(\".figure\",\"#FF0000\");\n\t\t\t */\n\t\t\tsetFillColor: function(selector,color){\n\t\t\t\tvar self=this;\n\t\t\t\tself.vis.selectAll(selector).style(\"fill\", color);\n\t\t\t},\n\t\t\t/**\n\t\t\t * Set the stroke's color of the elements on the graphic that match the selector. \n\t\t\t * Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string \n\t\t\t * \n\t\t\t * @param {string} selector a string to represent a set of elements. Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string\n\t\t\t * @param {string} color a color in web format eg. #FF0000\n\t\t\t *  \n\t\t\t * @example \n\t\t\t * instance.setColor(\"[id *= node_2]\",\"#FF0000\");\n\t\t\t */\n\t\t\tsetColor: function(selector,color){\n\t\t\t\tvar self=this;\n\t\t\t\tself.vis.selectAll(selector).style(\"stroke\", color);\n\t\t\t},\n\t\t\t/**\n\t\t\t * If the protein has a fixed position in the graphic it gets released, or viceversa other wise\n\t\t\t * \n\t\t\t * @param {string} protein the id of the protein to swap is position on the graphic\n\t\t\t *  \n\t\t\t * @example \n\t\t\t * instance.swapFixed(\"3\");\n\t\t\t */\n\t\t\tswapFixed: function(protein){\n\t\t\t\tvar self=this;\n\t\t\t\tvar nodes=self.force.nodes();\n\t\t\t\tnodes.forEach(function(d, i) {\n\t\t\t\t  if (d.id==protein)\n\t\t\t\t\t  d.fixed = !d.fixed;\n\t\t\t\t});\n\t\t\t},\n\t\t\t/**\n\t\t\t * Shows the legend(id) of the protein\n\t\t\t * \n\t\t\t * @param {string} protein the id of the protein to swap the visibility of the legend\n\t\t\t *  \n\t\t\t * @example \n\t\t\t * instance.swapShowLegend(\"#node_5 .legend\");\n\t\t\t */\n\t\t\tshowLegend: function(selector,typeLegend){\n\t\t\t\tvar self=this;\n\t\t\t\tself.vis.selectAll(selector).selectAll(\".legend\").attr(\"visibility\", \"visible\").text(function(d) {\n\t\t\t\t\td.typeLegend=typeLegend;\n\t\t\t\t\tif (d.typeLegend==\"id\") \n\t\t\t\t\t\treturn d.id;\n\t\t\t\t\telse //if (d.typeLegend.indexOf(\"features.\")==0)\n\t\t\t\t\t\treturn d.features[d.typeLegend];\n\t//\t\t\t\telse\n\t//\t\t\t\t\treturn d[d.typeLegend];\n\t\t\t\t\t});\n\t//\t\t\tself.restart();\n\t\t\t}, \n\t\t\t/**\n\t\t\t * Scales the area of a protein\n\t\t\t * \n\t\t\t * @param {string} protein the id of the protein to scale\n\t\t\t * @param {integer} scale value to scale a node\n\t\t\t *  \n\t\t\t * @example \n\t\t\t * instance.setSizeScale(\"#figure_1\",4);\n\t\t\t */\n\t\t\tsetSizeScale: function(selector,scale){\n\t\t\t\tvar self=this;\n\t\t\t\tself.vis.selectAll(selector).attr(\"d\", d3.svg.symbol()\n\t\t\t\t\t\t.size(function(d) {\n\t\t\t\t\t\t\td.size=scale;\n\t\t\t\t\t\t\treturn (2*self.opt.radius)*(2*self.opt.radius)*scale;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.type(function(d) {\n\t\t\t\t\t\t\treturn d3.svg.symbolTypes[self._figuresOrder[self.organisms[d.organism]]];\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t}, \n\t\t\t/**\n\t\t\t * Scales the size of the proteins which value has been modify by other means\n\t\t\t * \n\t\t\t * @param {string} selector a CSS3 selector to choose the nodes to resize\n\t\t\t *  \n\t\t\t * @example \n\t\t\t * for (var i=0;i<instance.proteins.length;i++)\n\t\t\t * \tinstance.proteins[i].size=1+i%4;\n\t\t\t * instance.refreshSizeScale(\".figure\");\n\t\t\t */\n\t\t\trefreshSizeScale: function(selector){\n\t\t\t\tvar self=this;\n\t\t\t\tself.vis.selectAll(selector).attr(\"d\", d3.svg.symbol()\n\t\t\t\t\t\t.size(function(d) {\n\t\t\t\t\t\t\treturn (2*self.opt.radius)*(2*self.opt.radius)*d.size;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.type(function(d) {\n\t\t\t\t\t\t\treturn d3.svg.symbolTypes[self._figuresOrder[self.organisms[d.organism]]];\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t}, \n\t\t\t/**\n\t\t\t * Hide the legend(id) of the protein\n\t\t\t * \n\t\t\t * @param {string} selector a CSS3 selector to choose the nodes to hide its legend\n\t\t\t *  \n\t\t\t * @example \n\t\t\t * instance.hideLegend(\"#node_5 .legend\");\n\t\t\t */\n\t\t\thideLegend: function(selector){\n\t\t\t\tvar self=this;\n\t\t\t\tself.vis.selectAll(selector).selectAll(\".legend\").attr(\"visibility\", \"hidden\");\n\t\t\t},\n\t\t\t/**\n\t\t\t * Shows/Hide the legend(id) of the protein\n\t\t\t * \n\t\t\t * @param {string} protein the id of the protein to swap the visibility of the legend\n\t\t\t *  \n\t\t\t * @example \n\t\t\t * instance.swapShowLegend(\"#node_5 .legend\");\n\t\t\t */\n\t\t\tswapShowLegend: function(selector){\n\t\t\t\tvar self=this;\n\t\t\t\tself.vis.selectAll(selector).attr(\"visibility\", function(d) {\n\t\t\t\t\td.showLegend = !d.showLegend;\n\t\t\t\t\treturn (d.showLegend)?\"visible\":\"hidden\";\n\t\t\t\t});\n\t\t\t},\n\t\t\t/**\n\t\t\t * gets an array of objects with the list of proteins which poition has been fixed into the graphic\n\t\t\t * \n\t\t\t * @example \n\t\t\t * alert(instance.getFixedProteins());\n\t\t\t */\n\t\t\tgetFixedProteins:function(){\n\t\t\t\tvar self = this;\n\t\t\t\tvar prots=[];\n\t\t\t\tfor (var prot in self.proteinsA){\n\t\t\t\t\tif (self.proteinsA[prot].fixed){\n\t\t\t\t\t\tprots.push({\n\t\t\t\t\t\t\t\"protein\":prot,\n\t\t\t\t\t\t\t\"x\":self.proteinsA[prot].x,\n\t\t\t\t\t\t\t\"y\":self.proteinsA[prot].y });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn prots;\n\t\t\t},\n\t\t\tfixedProteins:{},\n\t\t\t/**\n\t\t\t * fix into the graphic a protein in a determined position\n\t\t\t * \n\t\t\t * @example \n\t\t\t * instance.fixProteinAt(\"7\",10,10);\n\t\t\t * instance.restart();\n\t\t\t */\n\t\t\tfixProteinAt:function(protein,x,y){\n\t\t\t\tvar self = this;\n\t\t\t\tif (typeof self.proteinsA[protein] == \"undefined\") {\n\t\t\t\t\tself.fixedProteins[protein]=[x,y];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tself.proteinsA[protein].x=x;\n\t\t\t\tself.proteinsA[protein].y=y;\n\t\t\t\tself.proteinsA[protein].px=x;\n\t\t\t\tself.proteinsA[protein].py=y;\n\t\t\t\tself.proteinsA[protein].fixed=true;\n\t\t\t//\tself.tick();\n\t\t\t},\n\t\n\t\t\tcolors: [ \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \n\t\t\t          \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\",\n\t\t\t          '#3399FF', '#99FF66', '#66FF99', '#CCFF00', '#6699CC', '#99CC00', '#99FFCC', '#993399', '#33FFFF', '#33CC33', \n\t\t\t         '#66CCFF', '#009999', '#00FFFF', '#CC66CC', '#FF9966', '#CC3300', '#009966', '#660000', '#99FF33', '#330066', \n\t\t\t         '#FFFF00', '#0099FF', '#FF6699', '#33FF00', '#FFFFCC', '#990000', '#99CC33', '#0033CC', '#006699', '#6699FF', \n\t\t\t         '#FFCC00', '#330099', '#999999', '#666633', '#FFCC99', '#00CCCC', '#006633', '#CCCC99', '#3300FF', '#33CC66', \n\t\t\t         '#339999', '#6666FF', '#33FF66', '#990033', '#33CC99', '#993300', '#00FF00', '#666699', '#00CC00', '#FF66CC', \n\t\t\t         '#00FFCC', '#FF9999', '#66FF00', '#003366', '#CCFF33', '#660066', '#6633CC', '#FF3366', '#99FF00', '#FF33CC', \n\t\t\t         '#CCFFCC', '#99CCCC', '#3300CC', '#0066FF', '#66CC33', '#3366CC', '#CCCCCC', '#FF0000', '#6666CC', '#336699', \n\t\t\t         '#999966', '#FFFF99', '#66CC99', '#FF0033', '#999933', '#CC99FF', '#FF0099', '#6600CC', '#CC9966', '#00CC66', \n\t\t\t         '#33CC00', '#666666', '#33CCCC', '#FF0066', '#00CC33', '#FFCC66', '#FF6600', '#9999FF', '#CC66FF', '#9933FF', \n\t\t\t         '#FF00CC', '#CC3399', '#CC6633', '#33FFCC', '#FF33FF', '#009900', '#660099', '#669999', '#CC3366', '#0099CC', \n\t\t\t         '#9900FF', '#669933', '#FFFFFF', '#CCCCFF', '#66CCCC', '#669966', '#0066CC', '#CC9900', '#663300', '#33FF99', \n\t\t\t         '#996666', '#3399CC', '#99FF99', '#66CC66', '#CC0066', '#CCFF66', '#663366', '#99CC66', '#000033', '#003333', \n\t\t\t         '#FF6666', '#009933', '#FFFF66', '#996699', '#FFCCCC', '#00CCFF', '#339966', '#3366FF', '#00CC99', '#336633', \n\t\t\t         '#FF99FF', '#663333', '#CCFF99', '#CC99CC', '#339933', '#33CCFF', '#333366', '#006666', '#CC6600', '#333300', \n\t\t\t         '#FFCC33', '#9966CC', '#003300', '#9966FF', '#996600', '#CC9933', '#9999CC', '#FF9933', '#006600', '#6633FF', \n\t\t\t         '#CC6699', '#FF3399', '#993333', '#CCFFFF', '#330033', '#FFCCFF', '#FFFF33', '#990066', '#CCCC66', '#CC0099', \n\t\t\t         '#CCCC00', '#339900', '#660033', '#FF00FF', '#333333', '#99CC99', '#66FFCC', '#003399', '#999900', '#99FFFF', \n\t\t\t         '#990099', '#3333FF', '#CC33CC', '#CC6666', '#3333CC', '#9900CC', '#9933CC', '#CC0033', '#CC00FF', '#FF99CC', \n\t\t\t         '#FF66FF', '#66FFFF', '#6600FF', '#66FF66', '#996633', '#669900', '#00FF99', '#CC9999', '#993366', '#CC33FF', \n\t\t\t         '#336666', '#0033FF', '#336600', '#CC0000', '#FF9900', '#33FF33', '#000000', '#99CCFF', '#000066', '#0000CC', \n\t\t\t         '#000099', '#00FF33', '#666600', '#66FF33', '#CCCC33', '#66CC00', '#FF3333', '#CC3333', '#663399', '#333399', \n\t\t\t         '#FF3300', '#0000FF', '#CC00CC', '#00FF66', '#330000', '#FF6633']\n\t\n\t\t});\n\t\n\t\n\tvar Events = __webpack_require__(8);\n\tEvents.mixin(InteractionsD3.prototype);\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module, global) {/** @preserve http://github.com/easeway/js-class */\n\t\n\t// Class Definition using ECMA5 prototype chain\n\t\n\tfunction inherit(dest, src, noParent) {\n\t    while (src && src !== Object.prototype) {\n\t        Object.getOwnPropertyNames(src).forEach(function (name) {\n\t            if (name != '.class' && !dest.hasOwnProperty(name)) {\n\t                var desc = Object.getOwnPropertyDescriptor(src, name);\n\t                Object.defineProperty(dest, name, desc);\n\t            }\n\t        });\n\t        if (noParent) {\n\t            break;\n\t        }\n\t        src = src.__proto__;\n\t    }\n\t    return dest;\n\t}\n\t\n\tvar Class = function (base, proto, options) {\n\t    if (typeof(base) != 'function') {\n\t        options = proto;\n\t        proto = base;\n\t        base = Object;\n\t    }\n\t    if (!proto) {\n\t        proto = {};\n\t    }\n\t    if (!options) {\n\t        options = {};\n\t    }\n\t    \n\t    var meta = {\n\t        name: options.name,\n\t        base: base,\n\t        implements: []\n\t    }\n\t    var classProto = Class.clone(proto);\n\t    if (options.implements) {\n\t        (Array.isArray(options.implements) ? options.implements : [options.implements])\n\t            .forEach(function (implementedType) {\n\t                if (typeof(implementedType) == 'function' && implementedType.prototype) {\n\t                    meta.implements.push(implementedType);\n\t                    Class.extend(classProto, implementedType.prototype);\n\t                }\n\t            });\n\t    }\n\t    classProto.__proto__ = base.prototype;\n\t    var theClass = function () {\n\t        if (typeof(this.constructor) == 'function') {\n\t            this.constructor.apply(this, arguments);\n\t        }\n\t    };\n\t    meta.type = theClass;\n\t    theClass.prototype = classProto;\n\t    Object.defineProperty(theClass, '.class.meta', { value: meta, enumerable: false, configurable: false, writable: false });\n\t    Object.defineProperty(classProto, '.class', { value: theClass, enumerable: false, configurable: false, writable: false });\n\t    if (options.statics) {\n\t        Class.extend(theClass, options.statics);\n\t    }\n\t    return theClass;\n\t};\n\t\n\tClass.extend = inherit;\n\t\n\tClass.clone = function (object) {\n\t    return inherit({}, object);\n\t};\n\t\n\tfunction findType(meta, type) {\n\t    while (meta) {\n\t        if (meta.type.prototype === type.prototype) {\n\t            return true;\n\t        }\n\t        for (var i in meta.implements) {\n\t            var implType = meta.implements[i];\n\t            var implMeta = implType['.class.meta'];\n\t            if (implMeta) {\n\t                if (findType(implMeta, type)) {\n\t                    return true;\n\t                }\n\t            } else {\n\t                for (var proto = implType.prototype; proto; proto = proto.__proto__) {\n\t                    if (proto === type.prototype) {\n\t                        return true;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        meta = meta.base ? meta.base['.class.meta'] : undefined;\n\t    }\n\t    return false;\n\t}\n\t\n\tvar Checker = Class({\n\t    constructor: function (object) {\n\t        this.object = object;\n\t    },\n\t    \n\t    typeOf: function (type) {\n\t        if (this.object instanceof type) {\n\t            return true;\n\t        }\n\t        var meta = Class.typeInfo(this.object);\n\t        return meta && findType(meta, type);\n\t    }\n\t});\n\t\n\t// aliases\n\tChecker.prototype.a = Checker.prototype.typeOf;\n\tChecker.prototype.an = Checker.prototype.typeOf;\n\t\n\tClass.is = function (object) {\n\t    return new Checker(object);\n\t};\n\t\n\tClass.typeInfo = function (object) {\n\t    var theClass = object.__proto__['.class'];\n\t    return theClass ? theClass['.class.meta'] : undefined;\n\t};\n\t\n\tClass.VERSION = [0, 0, 2];\n\t\n\tif (module) {\n\t    module.exports = Class;\n\t} else {\n\t    global.Class = Class;   // for browser\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module), (function() { return this; }())))\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t(function() { \n\t\n\t  var slice   = Array.prototype.slice,\n\t      each    = Array.prototype.forEach;\n\t\n\t  var extend = function(obj) {\n\t    if(typeof obj !== 'object') throw obj + ' is not an object' ;\n\t\n\t    var sources = slice.call(arguments, 1); \n\t\n\t    each.call(sources, function(source) {\n\t      if(source) {\n\t        for(var prop in source) {\n\t          if(typeof source[prop] === 'object' && obj[prop]) {\n\t            extend.call(obj, obj[prop], source[prop]);\n\t          } else {\n\t            obj[prop] = source[prop];\n\t          }\n\t        } \n\t      }\n\t    });\n\t\n\t    return obj;\n\t  }\n\t\n\t  this.extend = extend;\n\t\n\t}).call(this);\n\n/***/ }\n/******/ ])});;\n\n\n// WEBPACK FOOTER //\n// biojs_interactions.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 962c6a6668d6601930f1","// Give the path to your main javascript file which is installed in the plugins/biojs/YourVisualizationName folder\n    define( [ 'plugins/biojs/interactions/node_modules/interactions/lib/Biojs.InteractionsD3' ], function(interactions) {\n    return Backbone.Model.extend({\n        initialize: function( options ) {\n            var chart    = options.chart;\n            var dataset  = options.dataset;\n            var settings = options.chart.settings;\n           var yourDiv = document.getElementById(options.targets[ 0 ] + \"\");\n\nvar instance = new interactions({\n  target: yourDiv.id,\n}); \n\nfor (var pid=1;pid<=15;pid++)\n  instance.addProtein({ \"id\":pid,\"name\":pid,\"showLegend\":false,\"typeLegend\":\"id\",\"organism\":\"human\"+pid%3,\"features\":{\"f1\":\"val1\",\"f2\":\"val2\",\"f3\":\"val3\"}});\n\nfor (var pid=1;pid<=30;pid++)\n  instance.addInteraction(Math.floor((Math.random()*15)+1),Math.floor((Math.random()*15)+1) ,{score:Math.random()});\n\ninstance.restart();\n        } \n    });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/plugins/visualizations/charts/static/repository/visualizations/biojs/interactions/wrapper.js\n// module id = 0\n// module chunks = 1","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 5\n// module chunks = 1","/**\n * Standalone extraction of Backbone.Events, no external dependency required.\n * Degrades nicely when Backone/underscore are already available in the current\n * global context.\n *\n * Note that docs suggest to use underscore's `_.extend()` method to add Events\n * support to some given object. A `mixin()` method has been added to the Events\n * prototype to avoid using underscore for that sole purpose:\n *\n *     var myEventEmitter = BackboneEvents.mixin({});\n *\n * Or for a function constructor:\n *\n *     function MyConstructor(){}\n *     MyConstructor.prototype.foo = function(){}\n *     BackboneEvents.mixin(MyConstructor.prototype);\n *\n * (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * (c) 2013 Nicolas Perriault\n */\n/* global exports:true, define, module */\n(function() {\n  var root = this,\n      nativeForEach = Array.prototype.forEach,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      slice = Array.prototype.slice,\n      idCounter = 0;\n\n  // Returns a partial implementation matching the minimal API subset required\n  // by Backbone.Events\n  function miniscore() {\n    return {\n      keys: Object.keys || function (obj) {\n        if (typeof obj !== \"object\" && typeof obj !== \"function\" || obj === null) {\n          throw new TypeError(\"keys() called on a non-object\");\n        }\n        var key, keys = [];\n        for (key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            keys[keys.length] = key;\n          }\n        }\n        return keys;\n      },\n\n      uniqueId: function(prefix) {\n        var id = ++idCounter + '';\n        return prefix ? prefix + id : id;\n      },\n\n      has: function(obj, key) {\n        return hasOwnProperty.call(obj, key);\n      },\n\n      each: function(obj, iterator, context) {\n        if (obj == null) return;\n        if (nativeForEach && obj.forEach === nativeForEach) {\n          obj.forEach(iterator, context);\n        } else if (obj.length === +obj.length) {\n          for (var i = 0, l = obj.length; i < l; i++) {\n            iterator.call(context, obj[i], i, obj);\n          }\n        } else {\n          for (var key in obj) {\n            if (this.has(obj, key)) {\n              iterator.call(context, obj[key], key, obj);\n            }\n          }\n        }\n      },\n\n      once: function(func) {\n        var ran = false, memo;\n        return function() {\n          if (ran) return memo;\n          ran = true;\n          memo = func.apply(this, arguments);\n          func = null;\n          return memo;\n        };\n      }\n    };\n  }\n\n  var _ = miniscore(), Events;\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // custom events. You may bind with `on` or remove with `off` callback\n  // functions to an event; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  Events = {\n\n    // Bind an event to a `callback` function. Passing `\"all\"` will bind\n    // the callback to all events fired.\n    on: function(name, callback, context) {\n      if (!eventsApi(this, 'on', name, [callback, context]) || !callback) return this;\n      this._events || (this._events = {});\n      var events = this._events[name] || (this._events[name] = []);\n      events.push({callback: callback, context: context, ctx: context || this});\n      return this;\n    },\n\n    // Bind an event to only be triggered a single time. After the first time\n    // the callback is invoked, it will be removed.\n    once: function(name, callback, context) {\n      if (!eventsApi(this, 'once', name, [callback, context]) || !callback) return this;\n      var self = this;\n      var once = _.once(function() {\n        self.off(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n      return this.on(name, once, context);\n    },\n\n    // Remove one or many callbacks. If `context` is null, removes all\n    // callbacks with that function. If `callback` is null, removes all\n    // callbacks for the event. If `name` is null, removes all bound\n    // callbacks for all events.\n    off: function(name, callback, context) {\n      var retain, ev, events, names, i, l, j, k;\n      if (!this._events || !eventsApi(this, 'off', name, [callback, context])) return this;\n      if (!name && !callback && !context) {\n        this._events = {};\n        return this;\n      }\n\n      names = name ? [name] : _.keys(this._events);\n      for (i = 0, l = names.length; i < l; i++) {\n        name = names[i];\n        if (events = this._events[name]) {\n          this._events[name] = retain = [];\n          if (callback || context) {\n            for (j = 0, k = events.length; j < k; j++) {\n              ev = events[j];\n              if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||\n                  (context && context !== ev.context)) {\n                retain.push(ev);\n              }\n            }\n          }\n          if (!retain.length) delete this._events[name];\n        }\n      }\n\n      return this;\n    },\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger: function(name) {\n      if (!this._events) return this;\n      var args = slice.call(arguments, 1);\n      if (!eventsApi(this, 'trigger', name, args)) return this;\n      var events = this._events[name];\n      var allEvents = this._events.all;\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, arguments);\n      return this;\n    },\n\n    // Tell this object to stop listening to either specific events ... or\n    // to every object it's currently listening to.\n    stopListening: function(obj, name, callback) {\n      var listeners = this._listeners;\n      if (!listeners) return this;\n      var deleteListener = !name && !callback;\n      if (typeof name === 'object') callback = this;\n      if (obj) (listeners = {})[obj._listenerId] = obj;\n      for (var id in listeners) {\n        listeners[id].off(name, callback, this);\n        if (deleteListener) delete this._listeners[id];\n      }\n      return this;\n    }\n\n  };\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Implement fancy features of the Events API such as multiple event\n  // names `\"change blur\"` and jQuery-style event maps `{change: action}`\n  // in terms of the existing API.\n  var eventsApi = function(obj, action, name, rest) {\n    if (!name) return true;\n\n    // Handle event maps.\n    if (typeof name === 'object') {\n      for (var key in name) {\n        obj[action].apply(obj, [key, name[key]].concat(rest));\n      }\n      return false;\n    }\n\n    // Handle space separated event names.\n    if (eventSplitter.test(name)) {\n      var names = name.split(eventSplitter);\n      for (var i = 0, l = names.length; i < l; i++) {\n        obj[action].apply(obj, [names[i]].concat(rest));\n      }\n      return false;\n    }\n\n    return true;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args);\n    }\n  };\n\n  var listenMethods = {listenTo: 'on', listenToOnce: 'once'};\n\n  // Inversion-of-control versions of `on` and `once`. Tell *this* object to\n  // listen to an event in another object ... keeping track of what it's\n  // listening to.\n  _.each(listenMethods, function(implementation, method) {\n    Events[method] = function(obj, name, callback) {\n      var listeners = this._listeners || (this._listeners = {});\n      var id = obj._listenerId || (obj._listenerId = _.uniqueId('l'));\n      listeners[id] = obj;\n      if (typeof name === 'object') callback = this;\n      obj[implementation](name, callback, this);\n      return this;\n    };\n  });\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Mixin utility\n  Events.mixin = function(proto) {\n    var exports = ['on', 'once', 'off', 'trigger', 'stopListening', 'listenTo',\n                   'listenToOnce', 'bind', 'unbind'];\n    _.each(exports, function(name) {\n      proto[name] = this[name];\n    }, this);\n    return proto;\n  };\n\n  // Export Events as BackboneEvents depending on current context\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = Events;\n    }\n    exports.BackboneEvents = Events;\n  }else if (typeof define === \"function\"  && typeof define.amd == \"object\") {\n    define(function() {\n      return Events;\n    });\n  } else {\n    root.BackboneEvents = Events;\n  }\n})(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/plugins/visualizations/charts/static/repository/plugins/biojs/interactions/~/backbone-events-standalone/backbone-events-standalone.js\n// module id = 6\n// module chunks = 1","module.exports = require('./backbone-events-standalone');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/plugins/visualizations/charts/static/repository/plugins/biojs/interactions/~/backbone-events-standalone/index.js\n// module id = 7\n// module chunks = 1","var events = require(\"backbone-events-standalone\");\n\nevents.onAll = function(callback,context){\n  this.on(\"all\", callback,context);\n  return this;\n};\n\n// Mixin utility\nevents.oldMixin = events.mixin;\nevents.mixin = function(proto) {\n  events.oldMixin(proto);\n  // add custom onAll\n  var exports = ['onAll'];\n  for(var i=0; i < exports.length;i++){\n    var name = exports[i];\n    proto[name] = this[name];\n  }\n  return proto;\n};\n\nmodule.exports = events;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/plugins/visualizations/charts/static/repository/plugins/biojs/interactions/~/biojs-events/index.js\n// module id = 8\n// module chunks = 1","/**\n * This component uses the D3 library and specifically its implementation of the force algorithm to \n * represent a network of protein interactions.  \n * \n * @class\n * @extends Biojs\n * \n * @author <a href=\"mailto:gustavoadolfo.salazar@gmail.com\">Gustavo A. Salazar</a>\n * @version 0.9.1_beta\n * @category 1\n * \n * @requires <a href='http://code.jquery.com/query-1.7.2.min.js'>jQuery Core 1.7.2</a>\n * @dependency <script language=\"JavaScript\" type=\"text/javascript\" src=\"../biojs/dependencies/jquery/jquery-1.7.2.min.js\"></script>\n * \n * @requires <a href='http://d3js.org/'>D3</a>\n * @dependency <script src=\"http://d3js.org/d3.v2.min.js\" type=\"text/javascript\"></script>\n *\n * @requires <a href='http://www.ebi.ac.uk/~jgomez/biojs/biojs/css/biojs.InteractionsD3.css'>InteractionsD3 CSS</a>\n * @dependency <link rel=\"stylesheet\" href=\"../biojs/css/biojs.InteractionsD3.css\" />\n * \n * @param {Object} options An object with the options for the InteractionsD3 component.\n * \n * @option {string} target\n *    Identifier of the DIV tag where the component should be displayed.\n * @option {string} width\n *    Width of the SVG element, if given in percentage it will use it on proportion of the container \n * @option {string} height\n *    Height of the SVG element, if given in percentage it will use it on proportion of the container \n * @option {string} radius\n *    Radius of the nodes representing the proteins\n * @option {string} enableEdges\n * \t  Force the proteins to stay in the defined area of the SVG\n * \n * @example\n * \t\t\tvar instance = new Biojs.InteractionsD3({\n * \t\t\t\ttarget: \"YourOwnDivId\",\n * \t\t\t});\t\n * \t\t\tfor (var pid=1;pid<=15;pid++)\n *\t\t\t\tinstance.addProtein({ \"id\":pid,\"name\":pid,\"showLegend\":false,\"typeLegend\":\"id\",\"organism\":\"human\"+pid%3,\"features\":{\"f1\":\"val1\",\"f2\":\"val2\",\"f3\":\"val3\"}});\n *\t\t\t\n * \t\t\tfor (var pid=1;pid<=30;pid++)\n *\t\t\t\tinstance.addInteraction(Math.floor((Math.random()*15)+1),Math.floor((Math.random()*15)+1) ,{score:Math.random()});\n * \t\t\tinstance.restart();\n */\n\nvar Class = require(\"js-class\");\nvar InteractionsD3;\nmodule.exports = InteractionsD3 = Class(\n\t/** @lends Biojs.InteractionsD3# */\n\t{\n\t\tforce:null,\n\t\tvis:null,\n\t\tinteractions:[],\n\t\tinteractionsA:{},\n\t\tproteins:[],\n\t\tproteinsA:{},\n\t\tnode_drag:null,\n\t\tcolor: null,\n\t\tfoci: [],\n\t\torganisms: {},\n\t\t\n\t\t//Transformation values\n\t\ttTranslate:null,\n\t\ttScale:null,\n\t\t\n\t\tconstructor: function (options) {\n\t\t\tvar self \t= this;\n\t\t\tself.force\t=null;\n\t\t\tself.vis\t=null;\n\t\t\tself.interactions=[];\n\t\t\tself.interactionsA={};\n\t\t\tself.proteins=[];\n\t\t\tself.proteinsA={};\n\t\t\tself.node_drag=null;\n\t\t\tself.color= null;\n\t\t\tself.foci=[];\n\t\t\tself.organisms={};\n\n      require('js-extend').extend(this.opt, options)\n\n\t\t\tthis._container = $(\"#\"+self.opt.target);\n\t\t\tthis._container.empty();\n\t\t\t$(this._container).addClass(\"graphNetwork\");\n\t\t\t\n\t\t\tvar\twidth = $(this._container).width(),\n\t\t\t\theight = $(this._container).height();\n\n\t\t\tif (self.opt.width.indexOf(\"%\")!=-1)\n\t\t\t\twidth = width*(self.opt.width.substring(0, self.opt.width.length-1)*1)/100.0;\n\t\t\telse\n\t\t\t\twidth=self.opt.width*1;\n\t\t\tself.opt.width=width;\n\t\t\t\n\t\t\tif (self.opt.height.indexOf(\"%\")!=-1)\n\t\t\t\theight = height*(self.opt.height.substring(0, self.opt.height.length-1)*1)/100.0;\n\t\t\telse\n\t\t\t\theight=self.opt.height*1;\n\t\t\tself.opt.height=height;\n\t\t\t\n\t\t\tthis._container.width(width);\n\t\t\tthis._container.height(height);\n\t\t\t\n\t\t\tself.color = function() {\n\t\t\t    return d3.scale.ordinal().range(self.colors);\n\t\t\t}();\n\n\t\t\tself.zoom=d3.behavior.zoom().\n    \t\tscaleExtent([(self.opt.enableEdges)?1:0.1, 10])\n    \t\t.on(\"zoom\", redraw);\n\t\t\tself.vis = d3.select(\"#\"+self.opt.target).append(\"svg\")\n\t\t\t    .attr(\"width\", width)\n\t\t\t    .attr(\"height\", height)\n\t\t\t    .attr(\"pointer-events\", \"all\")\n\t\t\t    .call(self.zoom)\n\t\t\t    .append('svg:g');\n\t\t\t\n\t\t\tself.vis.append('svg:rect')\n\t\t\t    .attr('width', width*20)\n\t\t\t    .attr('height', height*20)\n\t\t\t    .attr('x', -width*10)\n\t\t\t    .attr('y', -height*10)\n\t\t\t    .attr('fill', 'white')\n\t\t\t    .attr('stroke','white');\n\n\t\t\tself.rect= self.vis.append('svg:rect')\n\t\t\t\t.attr(\"class\", \"frame\")\n\t\t\t    .attr('width', width)\n\t\t\t    .attr('height', height)\n\t\t\t    .attr('fill', 'white')\n\t\t\t    .attr('stroke','white')\n\t\t\t    .attr(\"stroke-dasharray\",\"5,5\");\n\n\n\t\t\tself.perspective=d3.select(\"#\"+self.opt.target + \" svg\").append('svg:g');\n\t\t\t\n\t\t\t \n\t\t\t\n\t\t\tfunction redraw(x,y,scaleP) {\n\t\t\t\tvar trans=null,scale=null;\n\t\t\t\tif (typeof x!=\"undefined\" && typeof y!=\"undefined\"){\n\t\t\t\t\ttrans=[x,y];\n\t\t\t\t\tscale = scaleP;\n\t\t\t\t}else{\n\t\t\t\t\ttrans=d3.event.translate;\n\t\t\t\t\tscale = d3.event.scale;\n\t\t\t\t}\n\t\t\t\tself.tTranslate=trans;\n\t\t\t\tself.tScale=scale;\n\t\t\t\tif (self.opt.enableEdges) {\n\t\t\t\t\tif(scale<1)scale=1;\n\t\t\t\t\td3.behavior.zoom().scaleExtent([1, Infinity]);\n\t\t\t\t\t  if (trans[0]>0)trans[0]=0;\n\t\t\t\t\t  if (trans[1]>0)trans[1]=0;\n\t\n\t\t\t\t\t  var W = self.rect[0][0].width.animVal.value, H= self.rect[0][0].height.animVal.value;\n\t\t\t\t\t  var Ws = W*scale, Hs = H*scale;\n\t\t\t\t\t  if (Ws<W-trans[0]) trans[0]=W-Ws;\n\t\t\t\t\t  if (Hs<H-trans[1]) trans[1]=H-Hs;\n\t\t\t\t}\n\t\t\t\t  self.vis.attr(\"transform\",\n\t\t\t\t      \"translate(\" + trans + \")\"\n\t\t\t\t      + \" scale(\" + scale + \")\");\n\t\t\t};\n\t\t\tself.redraw=redraw;\n\t\t\t\n\t\t\tself.force = d3.layout.force()\n\t\t\t    .nodes(self.proteins)\n\t\t\t    .links(self.interactions)\n\t\t\t    .size([width, height]);\n\t\t\t\n\t\t\t\n\t\t\tself.node_drag = d3.behavior.drag()\n\t\t\t\t.on(\"dragstart\", dragstart)\n\t\t\t\t.on(\"drag\", dragmove)\n\t\t\t\t.on(\"dragend\", dragend);\n\n\t\t\tfunction dragstart(d, i) {\n\t\t\t\tself.force.stop(); // stops the force auto positioning before you start dragging\n\t\t\t}\n\n\t\t\tfunction dragmove(d, i) {\n\t\t\t\td.px += d3.event.dx;\n\t\t\t\td.py += d3.event.dy;\n\t\t\t\td.x += d3.event.dx;\n\t\t\t\td.y += d3.event.dy; \n\t\t\t\ttick(d3.event); // this is the key to make it work together with updating both px,py,x,y on d !\n\t\t\t}\n\n\t\t\tfunction dragend(d, i) {\n\t\t\t\td.fixed = true; // of course set the node to fixed so the force doesn't include the node in its auto positioning stuff\n\t\t\t\ttick(d3.event);\n\t\t\t\tself.force.resume();\n\t\t\t}\n\t\t\tself.force.on(\"tick\", tick);\n\t\t\tfunction tick(e) {\n\t\t\t\tif (e.type==\"tick\"){\n\t\t\t\t\tvar k = .1 * e.alpha;\n\t\t\t\t\tself.proteins.forEach(function(o, i) {\n\t\t\t\t\t\to.y += (self.foci[self.organisms[o.organism]].y - o.y) * k;\n\t\t\t\t\t\to.x += (self.foci[self.organisms[o.organism]].x - o.x) * k;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tself.vis.selectAll(\"path.figure\")\n\t\t\t\t\t\t.attr(\"transform\", function(d) { \n\t\t\t\t\t\t\tif (self.opt.enableEdges)\n\t\t\t\t\t\t\t\treturn \"translate(\" + Math.max(r, Math.min(self.opt.width , d.x+r)) + \",\" + Math.max(r, Math.min(self.opt.height, d.y+r)) + \")\";\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\treturn \"translate(\" + d.x + \",\" +  d.y + \")\"; \n\t\t\t\t\t\t});\n\n\t\t\t\tif (self.opt.enableEdges) \n\t\t\t\t\tself.vis.selectAll(\".legend\")\n\t\t\t\t\t\t.attr(\"x\", function(d) { return d.x = Math.max(r, Math.min(self.opt.width - r, d.x)); })\n\t\t\t\t\t\t.attr(\"y\", function(d) { return d.y = Math.max(r, Math.min(self.opt.height - r, d.y)); });\n\t\t\t\telse\n\t\t\t\t\tself.vis.selectAll(\".legend\")\n\t\t\t\t\t\t.attr(\"x\", function(d) { return d.x; })\n\t\t\t\t\t\t.attr(\"y\", function(d) { return d.y; });\n\t\t\t\tif (self.opt.enableEdges) \n\t\t\t\t\tself.vis.selectAll(\"line.link\")\n\t\t\t\t\t\t.attr(\"x1\", function(d) { return d.source.x+r; })\n\t\t\t\t\t\t.attr(\"y1\", function(d) { return d.source.y+r; })\n\t\t\t\t\t\t.attr(\"x2\", function(d) { return d.target.x+r; })\n\t\t\t\t\t\t.attr(\"y2\", function(d) { return d.target.y+r; });\n\t\t\t\telse\n\t\t\t\t\tself.vis.selectAll(\"line.link\")\n\t\t\t\t\t\t.attr(\"x1\", function(d) { return d.source.x; })\n\t\t\t\t\t\t.attr(\"y1\", function(d) { return d.source.y; })\n\t\t\t\t\t\t.attr(\"x2\", function(d) { return d.target.x; })\n\t\t\t\t\t\t.attr(\"y2\", function(d) { return d.target.y; });\n\t\t\t};\n\t\t\tself.tick=tick;\n\t\t\t//Binding the _resize method when resizing the window! \n\t\t\t//d3.select(window).on(\"resize\", function(){self._resize(self);});\n\t\t\t\n\t\t\tself.restart();\n\t\t},\n\t\t/**\n\t\t *  Default values for the options\n\t\t *  @name Biojs.InteractionsD3-opt\n\t\t */\n\t\topt: {\n\t\t\ttarget: \"YourOwnDivId\",\n\t\t\twidth: \"100%\",\n\t\t\theight: \"500\", \n\t\t\tradius: 10,\n\t\t\tenableEdges:false\n\t\t},\n\n\t\t/**\n\t\t * Array containing the supported event names\n\t\t * @name Biojs.InteractionsD3-eventTypes\n\t\t */\n\t\teventTypes : [\n\t\t\t/**\n\t\t\t * @name Biojs.InteractionsD3#proteinClick\n\t\t\t * @event\n\t\t\t * @param {function} actionPerformed It is triggered when the user clicks on a protein\n\t\t\t * @eventData {@link Biojs.Event} objEvent Object containing the information of the event\n\t\t\t * @eventData {Object} objEvent.source The component which did triggered the event.\n\t\t\t * @eventData {Object} objEvent.protein the information of the protein that has been clicked.\n\t\t\t * @example \n\t\t\t * instance.proteinClick(\n\t\t\t *    function( objEvent ) {\n\t\t\t *       alert(\"The protein \" + objEvent.protein.id + \" was clicked.\");\n\t\t\t *    }\n\t\t\t * ); \n\t\t\t * \n\t\t\t * */\n\t\t\t\"proteinClick\",\n\t\t\t/**\n\t\t\t * @name Biojs.InteractionsD3#proteinMouseOver\n\t\t\t * @event\n\t\t\t * @param {function} actionPerformed It is triggered when the mouse pointer is over a protein\n\t\t\t * @eventData {@link Biojs.Event} objEvent Object containing the information of the event\n\t\t\t * @eventData {Object} objEvent.source The component which did triggered the event.\n\t\t\t * @eventData {Object} objEvent.protein the information of the protein that has been mouseover.\n\t\t\t * @example \n\t\t\t * instance.proteinMouseOver(\n\t\t\t *    function( objEvent ) {\n\t\t\t *       alert(\"The mouse is over the protein \" + objEvent.protein.id);\n\t\t\t *    }\n\t\t\t * ); \n\t\t\t * \n\t\t\t * */\n\t\t\t\"proteinMouseOver\",\n\t\t\t/**\n\t\t\t * @name Biojs.InteractionsD3#proteinMouseOut\n\t\t\t * @event\n\t\t\t * @param {function} actionPerformed It is triggered when the mouse pointer leave the area of a protein\n\t\t\t * @eventData {@link Biojs.Event} objEvent Object containing the information of the event\n\t\t\t * @eventData {Object} objEvent.source The component which did triggered the event.\n\t\t\t * @eventData {Object} objEvent.protein the information of the protein that has been mouseout.\n\t\t\t * @example \n\t\t\t * instance.proteinMouseOut(\n\t\t\t *    function( objEvent ) {\n\t\t\t *       alert(\"The mouse is out the protein \" + objEvent.protein.id);\n\t\t\t *    }\n\t\t\t * ); \n\t\t\t * \n\t\t\t * */\n\t\t\t\"proteinMouseOut\",\n\t\t\t/**\n\t\t\t * @name Biojs.InteractionsD3#interactionClick\n\t\t\t * @event\n\t\t\t * @param {function} actionPerformed A function which receives an {@link Biojs.Event} object as argument.\n\t\t\t * @eventData {Object} source The component which did triggered the event.\n\t\t\t * @eventData {Object} interaction the information of the interaction that has been clicked.\n\t\t\t * @example \n\t\t\t * instance.interactionClick(\n\t\t\t *    function( objEvent ) {\n\t\t\t *       alert(\"Click on the interaction \" + objEvent.interaction.source.id +\" - \"+ objEvent.interaction.target.id);\n\t\t\t *    }\n\t\t\t * ); \n\t\t\t * \n\t\t\t * */\n\t\t\t\"interactionClick\",\n\t\t\t/**\n\t\t\t * @name Biojs.InteractionsD3#interactionMouseOver\n\t\t\t * @event\n\t\t\t * @param {function} actionPerformed A function which receives an {@link Biojs.Event} object as argument.\n\t\t\t * @eventData {Object} source The component which did triggered the event.\n\t\t\t * @eventData {Object} interaction the information of the interaction that has been mouseover.\n\t\t\t * @example \n\t\t\t * instance.interactionMouseOver(\n\t\t\t *    function( objEvent ) {\n\t\t\t *       alert(\"The mouse is over the interaction \" + objEvent.interaction.source.id +\" - \"+ objEvent.interaction.target.id);\n\t\t\t *    }\n\t\t\t * ); \n\t\t\t * \n\t\t\t * */\n\t\t\t\"interactionMouseOver\",\n\t\t\t/**\n\t\t\t * @name Biojs.InteractionsD3#interactionMouseOut\n\t\t\t * @event\n\t\t\t * @param {function} actionPerformed It is triggered when the mouse pointer leave an interaction\n\t\t\t * @eventData {@link Biojs.Event} objEvent Object containing the information of the event\n\t\t\t * @eventData {Object} source The component which did triggered the event.\n\t\t\t * @eventData {Object} interaction the information of the interaction that has been mouseout.\n\t\t\t * @example \n\t\t\t * instance.interactionMouseOut(\n\t\t\t *    function( objEvent ) {\n\t\t\t *      alert(\"The mouse is out of the interaction \" + objEvent.interaction.source.id +\" - \"+ objEvent.interaction.target.id);\n\t\t\t *    }\n\t\t\t * ); \n\t\t\t * \n\t\t\t * */\n\t\t\t\"interactionMouseOut\",\n\t\t\t/**\n\t\t\t * @name Biojs.InteractionsD3#sizeChanged\n\t\t\t * @event\n\t\t\t * @param {function} actionPerformed It is triggered when the size of the SVG element has been changed. \n\t\t\t * @eventData {@link Biojs.Event} objEvent Object containing the information of the event\n\t\t\t * @eventData {Object} source The component which did triggered the event.\n\t\t\t * @eventData {Object} width The width of the new size\n\t\t\t * @eventData {Object} height The height of the new size\n\t\t\t * @example \n\t\t\t * instance.sizeChanged(\n\t\t\t *    function( objEvent ) {\n\t\t\t *      alert(\"The size has changed: (\"+objEvent.width+\",\"+objEvent.height+\")\" );\n\t\t\t *    }\n\t\t\t * ); \n\t\t\t * \n\t\t\t * */\n\t\t\t\"sizeChanged\"\n\t\t], \n\t\t/**\n\t\t * \n\t\t * allows to resize the SVG element updating the gravity points\n\t\t * @param {string} width value of width to be assign to the SVG\n\t\t * @param {string} height value of height to be assign to the SVG\n\t\t *\n\t\t * @example \n\t\t * instance.setSize(400,400);\n\t\t * instance.restart();\n\t\t */\n\t\tsetSize:function(width,height){\n\t\t\tvar self =this;\n\t\t\tself.opt.width=width;\n\t\t\tself.opt.height=height;\n\t\t\td3.select(\"#\"+self.opt.target+\" svg\")\n\t\t\t    .attr('width', width)\n\t\t\t    .attr('height', height);\n\t\t\td3.select(\"#\"+self.opt.target+\" .frame\")\n\t\t\t    .attr('width', width)\n\t\t\t    .attr('height', height);\n\n\t\t\tself._container.width(width);\n\t\t\tself._container.height(height);\n\t\t\tvar numberOfOrganism =Object.keys(self.organisms).length;\n\t\t\tself.foci=[];\n\t\t\tfor (var i=0; i<numberOfOrganism; i++){\n\t\t\t\tself.foci.push({x: (self.opt.width/(numberOfOrganism+1))*(i+1), y:self.opt.height/2});\n\t\t\t}\n\t\t\tif (self.tTranslate!=null) self.redraw(self.tTranslate[0], self.tTranslate[1], self.tScale);\n\t\t\tself.restart();\n\t\t\tself.trigger('sizeChanged', {\n\t\t\t\twidth:width,\n\t\t\t\theight:height\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Adds an interaction between 2 proteins that are already in the graphic using their IDs\n\t\t * \n\t\t * @param {string} proteinId1 Id of the first protein in the interaction\n\t\t * @param {string} proteinId2 Id of the second protein in the interaction\n\t\t * @param {Object} [extraAtributes={}] An object containing meta information of the interaction \n\t\t * \t\t\t\t\tto be stored in the interaction itself. useful for triggered events\n\t\t *\n\t\t * @example \n\t\t * instance.addInteraction(Math.floor((Math.random()*15)+1),Math.floor((Math.random()*15)+1) ,{score:Math.random()});\n\t\t * instance.restart();\n\t\t */\n\t\taddInteraction: function(proteinId1,proteinId2,extraAtributes) {\n\t\t\tvar self=this;\n\n\t\t\t// Getting the protein with the first id and checking exists in the graphic\n\t\t\tvar protein1= self.getProtein(proteinId1);\n\t\t\tif (typeof protein1==\"undefined\")return false;\n\t\t\t\n\t\t\t// Getting the protein with the second id and checking exists in the graphic\n\t\t\tvar protein2= self.getProtein(proteinId2);\n\t\t\tif (typeof protein2==\"undefined\")return false;\n\t\t\t\n\t\t\t//Checking there is not an interaction between those proteins already in the graphic\n\t\t\tif (typeof self.interactionsA[proteinId1]!=\"undefined\" && self.interactionsA[proteinId1].indexOf(protein2)!=-1)\n\t\t\t\treturn self.interactionsA[proteinId1].indexOf(protein2);\n\t\t\t\t\n\t\t\t//creating and adding an interaction\n\t\t\tvar interaction = {source:protein1,target:protein2};\n\t\t\t//adding any parameters from the object extraAtributes to the interaction object\n\t\t\tif (typeof extraAtributes!=\"undefined\")\n\t\t\t\tfor (var key in extraAtributes)\n\t\t\t\t\tinteraction[key]=extraAtributes[key];\n\n\t\t\tvar n= self.interactions.push(interaction);\n\t\t\t\n\t\t\t//Saving the interaction in the associative array\n\t\t\tif (typeof self.interactionsA[interaction.source.id] == \"undefined\")\n\t\t\t\tself.interactionsA[interaction.source.id]=[interaction.target];\n\t\t\telse\n\t\t\t\tself.interactionsA[interaction.source.id].push(interaction.target);\n\t\t\tif (typeof self.interactionsA[interaction.target.id] == \"undefined\")\n\t\t\t\tself.interactionsA[interaction.target.id]=[interaction.source];\n\t\t\telse\n\t\t\t\tself.interactionsA[interaction.target.id].push(interaction.source);\n\n\t\t\treturn n;\n\t\t},\n\t\t/**\n\t\t * Adds a protein to the graphic\n\t\t * \n\t\t * @param {Object} protein An object containing information of the protein \n\t\t *\n\t\t * @example \n\t\t *  instance.addProtein({ \"id\":\"new\",\"name\":\"new\",\"showLegend\":true,\"typeLegend\":\"id\",\"organism\":\"human\"+pid%3,\"features\":{\"f1\":\"val1\",\"f2\":\"val2\",\"f3\":\"val3\"}});\n\t\t * instance.restart();\n\t\t */\n\t\taddProtein: function(protein) {\n\t\t\tvar self=this;\n\t\t\tvar n = self.proteins.indexOf(self.proteinsA[protein.id]);\n\t\t\tif (n!=-1)\n\t\t\t\treturn n;\n\t\t\tif (typeof self.fixedProteins[protein.id]==\"undefined\"){\n\t\t\t\tprotein.x=Math.floor((Math.random()*self.opt.width));\n\t\t\t\tprotein.y=Math.floor((Math.random()*self.opt.width));\n\t\t\t}else{\n\t\t\t\tprotein.x=self.fixedProteins[protein.id][0];\n\t\t\t\tprotein.y=self.fixedProteins[protein.id][1];\n\t\t\t\tprotein.fixed=true;\n\t\t\t}\n\t\t\tif(typeof protein.size == \"undefined\") protein.size=1;\n\t\t\tn= self.proteins.push(protein);\n\t\t\tself.proteinsA[protein.id]=protein;\n\t\t\tif (typeof self.interactionsA[protein.id] == \"undefined\")\n\t\t\t\tself.interactionsA[protein.id]=[];\n\t\t\tif (typeof self.organisms[protein.organism] == 'undefined'){\n\t\t\t\tvar numberOfOrganism =Object.keys(self.organisms).length;\n\t\t\t\tself.organisms[protein.organism] = numberOfOrganism++;\n\t\t\t\tself.foci=[];\n\t\t\t\tfor (var i=0; i<numberOfOrganism; i++){\n\t\t\t\t\tself.foci.push({x: (self.opt.width/(numberOfOrganism+1))*(i+1), y:self.opt.height/2});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn n;\n\t\t},\n\t\t/**\n\t\t * Gets the protein object by its id\n\t\t * \n\t\t * @param {string} proteinId The id of the protein\n\t\t *  \n\t\t * @return {Object} protein An object containing information of the protein \n\t\t *\n\t\t * @example \n\t\t * alert(instance.getProtein('3'));\n\t\t */\n\t\tgetProtein: function(proteinId) {\n\t\t\tvar self=this;\n\t\t\treturn self.proteinsA[proteinId];\n\t\t},\n\t\t/**\n\t\t * Gets the array index of the interaction object by the ids of the interactors\n\t\t * \n\t\t * @param {string} proteinId1 The id of the first protein interacting\n\t\t * @param {string} proteinId2 The id of the second protein interacting\n\t\t *  \n\t\t * @return {Integer} An int value indicating the index of the interaction in the array this.interactions \n\t\t *\n\t\t * @example \n\t\t * alert(instance.getInteractionIndex('3','5'));\n\t\t */\n\t\tgetInteractionIndex: function(proteinId1,proteinId2){\n\t\t\tvar self =this;\n\t\t\tfor (var i=0; i<self.interactions.length; i++){\n\t\t\t\tvar sourceId=self.interactions[i].source.id;\n\t\t\t\tvar targetId=self.interactions[i].target.id;\n\t\t\t\tif ((sourceId==proteinId1 && targetId==proteinId2)||(sourceId==proteinId2 && targetId==proteinId1))\n\t\t\t\t\treturn i;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\t/**\n\t\t * gets the interaction object by the id of its proteins\n\t\t * \n\t\t * @param {string} proteinId1 The id of the first protein\n\t\t * @param {string} proteinId2 The id of the second protein\n\t\t *  \n\t\t * @return {Object} An object containing information of the interaction \n\t\t *\n\t\t * @example \n\t\t * alert(instance.getInteraction('1','3'));\n\t\t */\n\t\tgetInteraction: function(proteinId1,proteinId2){\n\t\t\tvar self =this;\n\t\t\treturn self.getInteractionIndex(proteinId1,proteinId2);\n\t\t},\n\t\t/**\n\t\t * Removes from the graphic the interaction by the id of its proteins\n\t\t * \n\t\t * @param {string} proteinId1 The id of the first protein\n\t\t * @param {string} proteinId2 The id of the second protein\n\t\t *  \n\t\t * @example \n\t\t * instance.removeInteraction('2','3');\n\t\t */\n\t\tremoveInteraction: function(proteinId1,proteinId2){\n\t\t\tvar self = this;\n\t\t\tvar intIndex = self.getInteractionIndex(proteinId1,proteinId2);\n\t\t\tself.interactions.splice(intIndex--, 1);\n\t\t\t\n\t\t\tvar p1=self.getProtein(proteinId1),\n\t\t\t\tp2=self.getProtein(proteinId2);\n\t\t\t\n\t\t\tintIndex = self.interactionsA[proteinId1].indexOf(p2);\n\t\t\tif (intIndex!=-1) self.interactionsA[proteinId1].splice(intIndex--, 1);\n\n\t\t\tintIndex = self.interactionsA[proteinId2].indexOf(p1);\n\t\t\tif (intIndex!=-1) self.interactionsA[proteinId2].splice(intIndex--, 1);\n\t\t},\n\t\t/**\n\t\t * removes a protein from the graphic with all the interactions unless the interactor \n\t\t * is also interacting with another protein that is visible. \n\t\t * \n\t\t * @param {string} proteinId The id of the protein to delete\n\t\t *  \n\t\t * @example \n\t\t * instance.removeProtein('2');\n\t\t */\n\t\tremoveProtein: function(proteinId, excludelist){\n\t\t\tvar self=this;\n\t\t\texcludelist = (typeof excludelist == \"undefined\")?[]:excludelist;\n\n\t\t\tif (typeof self.interactionsA[proteinId] != \"undefined\"){\n\t\t\t\tfor (var i=0;i<self.interactionsA[proteinId].length;i++){\n\t\t\t\t\tvar targetid=self.interactionsA[proteinId][i].id;\n\t\t\t\t\tif (excludelist.indexOf(targetid) == -1){\n\t\t\t\t\t\tself.removeInteraction(proteinId,targetid);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t\tif (self.interactionsA[targetid].length==0)\n\t\t\t\t\t\t\tself.removeProtein(targetid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (self.interactionsA[proteinId].length==0){\n\t\t\t\t\tdelete self.interactionsA[proteinId];\n\t\t\t\t\tfor(var i=0; i<self.proteins.length; i++) {\n\t\t\t\t\t\tif(self.proteins[i].id == proteinId) {\n\t\t\t\t\t\t\tself.proteins.splice(i, 1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdelete self.proteinsA[proteinId];\n\t\t\t\t}else{\n\t\t\t\t\tself.proteinsA[proteinId].fixed=false;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * \n\t\t * Resets the graphic to zero proteins - zero interactions\n\t\t * \n\t\t * @example \n\t\t * instance.resetGraphic();\n\t\t */\n\t\tresetGraphic: function(){\n\t\t\tvar self=this;\n\t\t\tself.proteins=[];\n\t\t\tself.proteinsA={};\n\t\t\tself.interactions=[];\n\t\t\tself.restart();\n\t\t},\n\t\t_figuresOrder:[0,3,2,5,4,1],\n\t\t/**\n\t\t * Restart the graphic to materialize the changes done on it(e.g. add/remove proteins)\n\t\t * It is here where the SVG elemnts are created.\n\t\t * \n\t\t * @example \n\t\t * instance.restart();\n\t\t */\n\t\trestart: function(){\n\t\t\tvar self = this;\n\t\t\t\n\t\t\tself.force\n\t\t\t    .nodes(self.proteins)\n\t\t\t    .links(self.interactions)\n\t\t\t\t.charge(-self.opt.radius*(3+self.proteins.length))\n\t\t\t\t.linkDistance(self.opt.radius*(3+self.proteins.length*0.05)).start();\n\n\t\t\tvar link =self.vis.selectAll(\".graphNetwork line.link\")\n\t\t\t\t.data(self.interactions, function(d) { return d.source.id + \"-\" + d.target.id; });\n\t\t\t\n\t\t\tlink.enter().insert(\"line\" , \".node\") //insert before the .node so lines won't hide the nodes\n\t\t\t\t.attr(\"class\", \"link\")\n\t\t\t\t.attr(\"id\", function(d) { return \"link_\"+d.source.id+\"_\"+d.target.id; })\n\t\t\t\t.on(\"mouseover\", function(d){ \n\t\t\t\t\tself.trigger('interactionMouseOver', {\n\t\t\t\t\t\tinteraction: d\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.on(\"mouseout\",  function(d){ \n\t\t\t\t\tself.trigger('interactionMouseOut', {\n\t\t\t\t\t\tinteraction: d\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.on(\"click\", function(d){ \n\t\t\t\t\tself.trigger('interactionClick', {\n\t\t\t\t\t\tinteraction: d\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.attr(\"x1\", function(d) { return d.source.x; })\n\t\t\t\t.attr(\"y1\", function(d) { return d.source.y; })\n\t\t\t\t.attr(\"x2\", function(d) { return d.target.x; })\n\t\t\t\t.attr(\"y2\", function(d) { return d.target.y; });\n\t\t\t\n\t\t\tlink.exit().remove();\n\t\n\t\t\tvar nodes= self.vis.selectAll(\".graphNetwork .node\")\n\t\t\t\t.data(self.proteins, function(d) { return d.id;});\n\t\t\t\n\t\t\tvar node=nodes\n\t\t\t\t.enter().append(\"g\")\n\t\t\t\t.attr(\"class\", \"node\")\n\t\t\t\t.attr(\"id\", function(d) { return \"node_\"+d.id; })\n\t\t\t\t.attr(\"organism\", function(d) { return d.organism; })\n\t\t\t\t.call(self.node_drag);\n\t\t\t\n\t\t\tnode.append(\"path\")\n\t\t\t\t.attr(\"class\", \"figure\")\n\t\t\t\t.attr(\"d\", d3.svg.symbol()\n\t\t\t\t\t\t.size(function(d) {\n\t\t\t\t\t\t\treturn (2*self.opt.radius)*(2*self.opt.radius)*d.size*d.size;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.type(function(d) {\n\t\t\t\t\t\t\treturn d3.svg.symbolTypes[self._figuresOrder[self.organisms[d.organism]]];\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t.attr(\"id\", function(d) { return \"figure_\"+d.id; })\n\t\t\t\t.on(\"click\", function(d){ \n\t\t\t\t\tself.trigger('proteinClick', {\n\t\t\t\t\t\tprotein: d\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.on(\"mouseover\", function(d){ \n\t\t\t\t\tself.trigger('proteinMouseOver', {\n\t\t\t\t\t\tprotein: d\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.on(\"mouseout\",  function(d){ \n\t\t\t\t\tself.trigger('proteinMouseOut', {\n\t\t\t\t\t\tprotein: d\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.attr(\"stroke-width\",self.opt.radius*0.3);\n\t\t\t\n\n\t\t\tnode\n\t\t\t\t.append(\"svg:text\")\n\t\t\t\t.attr(\"class\", \"legend\")\n\t\t\t\t.attr(\"id\", function(d) { return \"legend_\"+d.id; })\n\t\t\t\t.text(function(d) { \n\t\t\t\t\tif (d.typeLegend==\"id\") \n\t\t\t\t\t\treturn d.id;\n\t\t\t\t\telse if (d.typeLegend.indexOf(\"features.\")==0)\n\t\t\t\t\t\treturn d.features[d.typeLegend.substr(9)];\n\t\t\t\t\telse\n\t\t\t\t\t\treturn d[d.typeLegend];\n\t\t\t\t\t})\n\t\t\t\t.attr(\"visibility\",function(d) { return (d.showLegend)?\"visible\":\"hidden\";})\n\t\t\t\t.attr(\"transform\",function(d) {\n\t\t\t\t\treturn (self.organisms[d.organism] == 0)?\"translate(-\"+(self.opt.radius*1.9)+\",\"+(self.opt.radius*0.4)+\")\":\"translate(-\"+(self.opt.radius*0.9)+\",\"+(self.opt.radius*1.3)+\")\";\n\t\t\t\t});\n\n\t\t\tnodes.exit().remove();\n\t\t\t\n\t\t\tself.perspective.selectAll(\".legendBlock\").remove();\n\t\t\tif (typeof self.legends!=\"undefined\" && self.legends!=null)\n\t\t\t\tself._paintLegends();\n\t\t},\n\t\t_sortLegends:function(){\n\t\t\tvar self = this;\n\t\t\tself.legends.sort(function(a,b){\n\t\t\t\tif (a[1]==b[1]){\n\t\t\t\t\tif (a[0]==\"label\") return -1;\n\t\t\t\t\tif (b[0]==\"label\") return 1;\n\t\t\t\t}else if (a[1]>b[1]){\n\t\t\t\t\treturn -1;\n\t\t\t\t}else\n\t\t\t\t\treturn 1;\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t},\n\t\t_paintLegend:function(legend,type){\n\t\t\tvar self = this;\n\t\t\tlegend.filter(function(d) { return d[0]== \"label\" && d[1]==type; }).append(\"text\")\n\t\t\t\t.attr(\"x\", self.opt.width - 6)\n\t\t\t\t.attr(\"y\", 7)\n\t\t\t\t.attr(\"dy\", \".35em\")\n\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t.style(\"font-size\", \"1.2em\")\n\t\t\t\t.text(type+\":\");\n\t\t\tif (type.indexOf(\"Resize By\")==0){\n\n\t\t\t\tlegend.filter(function(d) { return d[0]!=\"label\" && d[1]==type; }).append(\"path\")\n\t\t\t\t\t.attr(\"class\", \"figure\")\n\t\t\t\t\t.attr(\"d\", function(d) {\n\t\t\t\t\t\t\tvar h=2*self.opt.radius*Math.sqrt(d[0][2]);\n\t\t\t\t\t\t\treturn \"M0,0L0,10M0,5L\"+h+\",5M\"+h+\",0L\"+h+\",10 \";\n\t\t\t\t\t})\n\t\t\t\t\t.attr(\"transform\", function(d) { \n\t\t\t\t\t\treturn \"translate(\" +  (self.opt.width - 18 - 2*self.opt.radius*Math.sqrt(d[0][2])) + \",\" +  0 + \")\"; \n\t\t\t\t\t})\n\t\t\t\t\t.style(\"fill\", \"transparent\")\n\t\t\t\t\t.style(\"stroke\", \"black\");\n\t\t\t\tlegend.filter(function(d) { return d[0]!=\"label\" && d[1]== type; }).append(\"text\")\n\t\t\t\t\t.attr(\"x\", function(d) { \n\t\t\t\t\t\treturn (self.opt.width - 22 - 5*self.opt.radius); \n\t\t\t\t\t})\n\t\t\t\t\t.attr(\"y\", 7)\n\t\t\t\t\t.attr(\"dy\", \".35em\")\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(function(d) { return (d[0][1]*1.0).toFixed(2); });\n\t\t\t\t\n\t\t\t}else{\n\t\t\t\tlegend.filter(function(d) { return d[0]!=\"label\" && d[1]==type; }).append(\"rect\")\n\t\t\t\t\t.attr(\"x\", self.opt.width - 18) \n\t\t\t\t\t.attr(\"width\", 13)\n\t\t\t\t\t.attr(\"height\", 13)\n\t\t\t\t\t.style(\"fill\", function(d,i) {\n\t\t\t\t\t\tif (typeof d[2]== \"undefined\")\n\t\t\t\t\t\t\treturn self.color(i);\n\t\t\t\t\t\treturn d[2];\n\t\t\t\t\t});\n\t\t\t\tlegend.filter(function(d) { return d[0]!=\"label\" && d[1]== type; }).append(\"text\")\n\t\t\t\t\t.attr(\"x\", self.opt.width - 24)\n\t\t\t\t\t.attr(\"y\", 7)\n\t\t\t\t\t.attr(\"dy\", \".35em\")\n\t\t\t\t\t.style(\"text-anchor\", \"end\")\n\t\t\t\t\t.text(function(d) { return d[0]; });\n\t\t\t}\n\t\t},\n\t\t_paintLegends: function(){\n\t\t\tvar self = this;\n\t\t\tvar w=18 + self.longestLegend*7 + 10;\n\t\t\tvar legendBlock = self.perspective.insert(\"g\",\".link\")\n\t\t\t\t.attr(\"class\", \"legendBlock\");\n\t\t\tself._sortLegends();\n\t\t\tlegendBlock.append(\"rect\")\n\t\t\t\t.attr(\"x\", self.opt.width -w)\n\t\t\t\t.attr(\"height\", 6 + self.legends.length *16)\n\t\t\t\t.attr(\"width\", w)\n\t\t\t\t.style(\"fill\", \"#ddd\")\n\t\t\t\t.style(\"fill-opacity\",\"0.4\");\n\n\t\t\tvar legend = legendBlock.selectAll(\".mainLegend\") \n\t\t\t\t.data(self.legends)\n\t\t\t\t.enter().insert(\"g\")\n\t\t\t\t.attr(\"class\", \"mainLegend\")\n\t\t\t\t.attr(\"transform\", function(d, i) { \n\t\t\t\t\treturn \"translate(0,\" + (3 + i * 16) + \")\"; \n\t\t\t\t});\n\t\t\tfor (var i=0; i< self.legendTypes.length; i++)\n\t\t\t\tself._paintLegend(legend,self.legendTypes[i]);\n\n\t\t},\n\t\tlongestLegend:4,\n\t\tlegendTypes:[],\n\t\t/**\n\t\t * Adds a legend to the graphic\n\t\t * \n\t\t * @example \t\t\t\t\t\t\n\t\t * instance.addLegends([\"Legend red\"],\"Color\",\"#FF0000\");\n\t\t * instance.restart();\n\t\t */\n\t\taddLegends:function(legends,type,color){\n\t\t\tvar self = this;\n\t\t\tif (self.legends==null) self.legends=[],self.legendTypes=[];\n\t\t\t\n\t\t\tif (legends==null) {\n\t\t\t\tself.legends = null;\n\t\t\t\tself.legendTypes=[];\n\t\t\t\tself.longestLegend=4;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (type==\"Resize By\") \n\t\t\t\ttype = type+ \" \"+legends[0];\n\t\t\tif (self.legendTypes.indexOf(type)==-1) {\n\t\t\t\tself.legends.push([\"label\",type]);\n\t\t\t\tself.legendTypes.push(type);\n\t\t\t\tif (type.length>self.longestLegend)\n\t\t\t\t\tself.longestLegend=type.length;\n\t\t\t}\n\t\t\t\n\t\t\tif (type.indexOf(\"Resize By\")==0){ //is a size label\n\t\t\t\tself.legends.push([legends,type]);\n\t\t\t} else //is a color label\n\t\t\t\tfor (var i=0;i<legends.length;i++){\n\t\t\t\t\tif (typeof color==\"undefined\")\n\t\t\t\t\t\tself.legends.push([legends[i],type]);\n\t\t\t\t\telse\n\t\t\t\t\t\tself.legends.push([legends[i],type,color]);\n\t\t\t\t\t\n\t\t\t\t\tif (legends[i].length>self.longestLegend)\n\t\t\t\t\t\tself.longestLegend=legends[i].length;\n\t\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Hides the elements on the graphic that match the selector. \n\t\t * Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string \n\t\t * \n\t\t * @param {string} selector a string to represent a set of elements. Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string\n\t\t *  \n\t\t * @example \n\t\t * instance.hide(\"[id = node_10]\");\n\t\t */\n\t\thide: function(selector){\n\t\t\tvar self=this;\n\t\t\tself.vis.selectAll(selector).attr(\"visibility\", 'hidden');\n\t\t\tself.vis.selectAll(selector).selectAll(\" .legend\").attr(\"visibility\", 'hidden');\n\t\t},\n\t\t/**\n\t\t * Shows the elements on the graphic that match the selector. \n\t\t * Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string \n\t\t * \n\t\t * @param {string} selector a string to represent a set of elements. Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string\n\t\t *  \n\t\t * @example \n\t\t * instance.show(\"[id = node_10]\");\n\t\t */\n\t\tshow: function(selector){\n\t\t\tvar self=this;\n\t\t\tself.vis.selectAll(selector).attr(\"visibility\", 'visible');\n\t\t\tself.vis.selectAll(selector).selectAll(\" .legend\").attr(\"visibility\",function(d) { return (d.showLegend)?\"visible\":\"hidden\";});\n\t\t},\n\t\t/**\n\t\t * Highlight the elements on the graphic that match the selector. \n\t\t * Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string \n\t\t * \n\t\t * @param {string} selector a string to represent a set of elements. Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string\n\t\t *  \n\t\t * @example \n\t\t * instance.highlight(\"[id *= node_1]\");\n\t\t */\n\t\thighlight: function(selector){\n\t\t\tvar self=this;\n\t\t\tself.vis.selectAll(selector).style(\"stroke\", '#3d6');\n\t\t},\n\t\t/**\n\t\t * Set the fill's color of the elements on the graphic that match the selector. \n\t\t * Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string \n\t\t * \n\t\t * @param {string} selector a string to represent a set of elements. Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string\n\t\t * @param {string} color a color in web format eg. #FF0000\n\t\t *  \n\t\t * @example \n\t\t * instance.setFillColor(\".figure\",\"#FF0000\");\n\t\t */\n\t\tsetFillColor: function(selector,color){\n\t\t\tvar self=this;\n\t\t\tself.vis.selectAll(selector).style(\"fill\", color);\n\t\t},\n\t\t/**\n\t\t * Set the stroke's color of the elements on the graphic that match the selector. \n\t\t * Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string \n\t\t * \n\t\t * @param {string} selector a string to represent a set of elements. Check the <a href=\"http://www.w3.org/TR/css3-selectors/\">CSS3 selectors documentation</a> to build a selector string\n\t\t * @param {string} color a color in web format eg. #FF0000\n\t\t *  \n\t\t * @example \n\t\t * instance.setColor(\"[id *= node_2]\",\"#FF0000\");\n\t\t */\n\t\tsetColor: function(selector,color){\n\t\t\tvar self=this;\n\t\t\tself.vis.selectAll(selector).style(\"stroke\", color);\n\t\t},\n\t\t/**\n\t\t * If the protein has a fixed position in the graphic it gets released, or viceversa other wise\n\t\t * \n\t\t * @param {string} protein the id of the protein to swap is position on the graphic\n\t\t *  \n\t\t * @example \n\t\t * instance.swapFixed(\"3\");\n\t\t */\n\t\tswapFixed: function(protein){\n\t\t\tvar self=this;\n\t\t\tvar nodes=self.force.nodes();\n\t\t\tnodes.forEach(function(d, i) {\n\t\t\t  if (d.id==protein)\n\t\t\t\t  d.fixed = !d.fixed;\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Shows the legend(id) of the protein\n\t\t * \n\t\t * @param {string} protein the id of the protein to swap the visibility of the legend\n\t\t *  \n\t\t * @example \n\t\t * instance.swapShowLegend(\"#node_5 .legend\");\n\t\t */\n\t\tshowLegend: function(selector,typeLegend){\n\t\t\tvar self=this;\n\t\t\tself.vis.selectAll(selector).selectAll(\".legend\").attr(\"visibility\", \"visible\").text(function(d) {\n\t\t\t\td.typeLegend=typeLegend;\n\t\t\t\tif (d.typeLegend==\"id\") \n\t\t\t\t\treturn d.id;\n\t\t\t\telse //if (d.typeLegend.indexOf(\"features.\")==0)\n\t\t\t\t\treturn d.features[d.typeLegend];\n//\t\t\t\telse\n//\t\t\t\t\treturn d[d.typeLegend];\n\t\t\t\t});\n//\t\t\tself.restart();\n\t\t}, \n\t\t/**\n\t\t * Scales the area of a protein\n\t\t * \n\t\t * @param {string} protein the id of the protein to scale\n\t\t * @param {integer} scale value to scale a node\n\t\t *  \n\t\t * @example \n\t\t * instance.setSizeScale(\"#figure_1\",4);\n\t\t */\n\t\tsetSizeScale: function(selector,scale){\n\t\t\tvar self=this;\n\t\t\tself.vis.selectAll(selector).attr(\"d\", d3.svg.symbol()\n\t\t\t\t\t.size(function(d) {\n\t\t\t\t\t\td.size=scale;\n\t\t\t\t\t\treturn (2*self.opt.radius)*(2*self.opt.radius)*scale;\n\t\t\t\t\t})\n\t\t\t\t\t.type(function(d) {\n\t\t\t\t\t\treturn d3.svg.symbolTypes[self._figuresOrder[self.organisms[d.organism]]];\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t}, \n\t\t/**\n\t\t * Scales the size of the proteins which value has been modify by other means\n\t\t * \n\t\t * @param {string} selector a CSS3 selector to choose the nodes to resize\n\t\t *  \n\t\t * @example \n\t\t * for (var i=0;i<instance.proteins.length;i++)\n\t\t * \tinstance.proteins[i].size=1+i%4;\n\t\t * instance.refreshSizeScale(\".figure\");\n\t\t */\n\t\trefreshSizeScale: function(selector){\n\t\t\tvar self=this;\n\t\t\tself.vis.selectAll(selector).attr(\"d\", d3.svg.symbol()\n\t\t\t\t\t.size(function(d) {\n\t\t\t\t\t\treturn (2*self.opt.radius)*(2*self.opt.radius)*d.size;\n\t\t\t\t\t})\n\t\t\t\t\t.type(function(d) {\n\t\t\t\t\t\treturn d3.svg.symbolTypes[self._figuresOrder[self.organisms[d.organism]]];\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t}, \n\t\t/**\n\t\t * Hide the legend(id) of the protein\n\t\t * \n\t\t * @param {string} selector a CSS3 selector to choose the nodes to hide its legend\n\t\t *  \n\t\t * @example \n\t\t * instance.hideLegend(\"#node_5 .legend\");\n\t\t */\n\t\thideLegend: function(selector){\n\t\t\tvar self=this;\n\t\t\tself.vis.selectAll(selector).selectAll(\".legend\").attr(\"visibility\", \"hidden\");\n\t\t},\n\t\t/**\n\t\t * Shows/Hide the legend(id) of the protein\n\t\t * \n\t\t * @param {string} protein the id of the protein to swap the visibility of the legend\n\t\t *  \n\t\t * @example \n\t\t * instance.swapShowLegend(\"#node_5 .legend\");\n\t\t */\n\t\tswapShowLegend: function(selector){\n\t\t\tvar self=this;\n\t\t\tself.vis.selectAll(selector).attr(\"visibility\", function(d) {\n\t\t\t\td.showLegend = !d.showLegend;\n\t\t\t\treturn (d.showLegend)?\"visible\":\"hidden\";\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * gets an array of objects with the list of proteins which poition has been fixed into the graphic\n\t\t * \n\t\t * @example \n\t\t * alert(instance.getFixedProteins());\n\t\t */\n\t\tgetFixedProteins:function(){\n\t\t\tvar self = this;\n\t\t\tvar prots=[];\n\t\t\tfor (var prot in self.proteinsA){\n\t\t\t\tif (self.proteinsA[prot].fixed){\n\t\t\t\t\tprots.push({\n\t\t\t\t\t\t\"protein\":prot,\n\t\t\t\t\t\t\"x\":self.proteinsA[prot].x,\n\t\t\t\t\t\t\"y\":self.proteinsA[prot].y });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn prots;\n\t\t},\n\t\tfixedProteins:{},\n\t\t/**\n\t\t * fix into the graphic a protein in a determined position\n\t\t * \n\t\t * @example \n\t\t * instance.fixProteinAt(\"7\",10,10);\n\t\t * instance.restart();\n\t\t */\n\t\tfixProteinAt:function(protein,x,y){\n\t\t\tvar self = this;\n\t\t\tif (typeof self.proteinsA[protein] == \"undefined\") {\n\t\t\t\tself.fixedProteins[protein]=[x,y];\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tself.proteinsA[protein].x=x;\n\t\t\tself.proteinsA[protein].y=y;\n\t\t\tself.proteinsA[protein].px=x;\n\t\t\tself.proteinsA[protein].py=y;\n\t\t\tself.proteinsA[protein].fixed=true;\n\t\t//\tself.tick();\n\t\t},\n\n\t\tcolors: [ \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \n\t\t          \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\",\n\t\t          '#3399FF', '#99FF66', '#66FF99', '#CCFF00', '#6699CC', '#99CC00', '#99FFCC', '#993399', '#33FFFF', '#33CC33', \n\t\t         '#66CCFF', '#009999', '#00FFFF', '#CC66CC', '#FF9966', '#CC3300', '#009966', '#660000', '#99FF33', '#330066', \n\t\t         '#FFFF00', '#0099FF', '#FF6699', '#33FF00', '#FFFFCC', '#990000', '#99CC33', '#0033CC', '#006699', '#6699FF', \n\t\t         '#FFCC00', '#330099', '#999999', '#666633', '#FFCC99', '#00CCCC', '#006633', '#CCCC99', '#3300FF', '#33CC66', \n\t\t         '#339999', '#6666FF', '#33FF66', '#990033', '#33CC99', '#993300', '#00FF00', '#666699', '#00CC00', '#FF66CC', \n\t\t         '#00FFCC', '#FF9999', '#66FF00', '#003366', '#CCFF33', '#660066', '#6633CC', '#FF3366', '#99FF00', '#FF33CC', \n\t\t         '#CCFFCC', '#99CCCC', '#3300CC', '#0066FF', '#66CC33', '#3366CC', '#CCCCCC', '#FF0000', '#6666CC', '#336699', \n\t\t         '#999966', '#FFFF99', '#66CC99', '#FF0033', '#999933', '#CC99FF', '#FF0099', '#6600CC', '#CC9966', '#00CC66', \n\t\t         '#33CC00', '#666666', '#33CCCC', '#FF0066', '#00CC33', '#FFCC66', '#FF6600', '#9999FF', '#CC66FF', '#9933FF', \n\t\t         '#FF00CC', '#CC3399', '#CC6633', '#33FFCC', '#FF33FF', '#009900', '#660099', '#669999', '#CC3366', '#0099CC', \n\t\t         '#9900FF', '#669933', '#FFFFFF', '#CCCCFF', '#66CCCC', '#669966', '#0066CC', '#CC9900', '#663300', '#33FF99', \n\t\t         '#996666', '#3399CC', '#99FF99', '#66CC66', '#CC0066', '#CCFF66', '#663366', '#99CC66', '#000033', '#003333', \n\t\t         '#FF6666', '#009933', '#FFFF66', '#996699', '#FFCCCC', '#00CCFF', '#339966', '#3366FF', '#00CC99', '#336633', \n\t\t         '#FF99FF', '#663333', '#CCFF99', '#CC99CC', '#339933', '#33CCFF', '#333366', '#006666', '#CC6600', '#333300', \n\t\t         '#FFCC33', '#9966CC', '#003300', '#9966FF', '#996600', '#CC9933', '#9999CC', '#FF9933', '#006600', '#6633FF', \n\t\t         '#CC6699', '#FF3399', '#993333', '#CCFFFF', '#330033', '#FFCCFF', '#FFFF33', '#990066', '#CCCC66', '#CC0099', \n\t\t         '#CCCC00', '#339900', '#660033', '#FF00FF', '#333333', '#99CC99', '#66FFCC', '#003399', '#999900', '#99FFFF', \n\t\t         '#990099', '#3333FF', '#CC33CC', '#CC6666', '#3333CC', '#9900CC', '#9933CC', '#CC0033', '#CC00FF', '#FF99CC', \n\t\t         '#FF66FF', '#66FFFF', '#6600FF', '#66FF66', '#996633', '#669900', '#00FF99', '#CC9999', '#993366', '#CC33FF', \n\t\t         '#336666', '#0033FF', '#336600', '#CC0000', '#FF9900', '#33FF33', '#000000', '#99CCFF', '#000066', '#0000CC', \n\t\t         '#000099', '#00FF33', '#666600', '#66FF33', '#CCCC33', '#66CC00', '#FF3333', '#CC3333', '#663399', '#333399', \n\t\t         '#FF3300', '#0000FF', '#CC00CC', '#00FF66', '#330000', '#FF6633']\n\n\t});\n\n\nvar Events = require('biojs-events');\nEvents.mixin(InteractionsD3.prototype);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/plugins/visualizations/charts/static/repository/plugins/biojs/interactions/~/interactions/lib/Biojs.InteractionsD3.js\n// module id = 9\n// module chunks = 1","/** @preserve http://github.com/easeway/js-class */\n\n// Class Definition using ECMA5 prototype chain\n\nfunction inherit(dest, src, noParent) {\n    while (src && src !== Object.prototype) {\n        Object.getOwnPropertyNames(src).forEach(function (name) {\n            if (name != '.class' && !dest.hasOwnProperty(name)) {\n                var desc = Object.getOwnPropertyDescriptor(src, name);\n                Object.defineProperty(dest, name, desc);\n            }\n        });\n        if (noParent) {\n            break;\n        }\n        src = src.__proto__;\n    }\n    return dest;\n}\n\nvar Class = function (base, proto, options) {\n    if (typeof(base) != 'function') {\n        options = proto;\n        proto = base;\n        base = Object;\n    }\n    if (!proto) {\n        proto = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    \n    var meta = {\n        name: options.name,\n        base: base,\n        implements: []\n    }\n    var classProto = Class.clone(proto);\n    if (options.implements) {\n        (Array.isArray(options.implements) ? options.implements : [options.implements])\n            .forEach(function (implementedType) {\n                if (typeof(implementedType) == 'function' && implementedType.prototype) {\n                    meta.implements.push(implementedType);\n                    Class.extend(classProto, implementedType.prototype);\n                }\n            });\n    }\n    classProto.__proto__ = base.prototype;\n    var theClass = function () {\n        if (typeof(this.constructor) == 'function') {\n            this.constructor.apply(this, arguments);\n        }\n    };\n    meta.type = theClass;\n    theClass.prototype = classProto;\n    Object.defineProperty(theClass, '.class.meta', { value: meta, enumerable: false, configurable: false, writable: false });\n    Object.defineProperty(classProto, '.class', { value: theClass, enumerable: false, configurable: false, writable: false });\n    if (options.statics) {\n        Class.extend(theClass, options.statics);\n    }\n    return theClass;\n};\n\nClass.extend = inherit;\n\nClass.clone = function (object) {\n    return inherit({}, object);\n};\n\nfunction findType(meta, type) {\n    while (meta) {\n        if (meta.type.prototype === type.prototype) {\n            return true;\n        }\n        for (var i in meta.implements) {\n            var implType = meta.implements[i];\n            var implMeta = implType['.class.meta'];\n            if (implMeta) {\n                if (findType(implMeta, type)) {\n                    return true;\n                }\n            } else {\n                for (var proto = implType.prototype; proto; proto = proto.__proto__) {\n                    if (proto === type.prototype) {\n                        return true;\n                    }\n                }\n            }\n        }\n        meta = meta.base ? meta.base['.class.meta'] : undefined;\n    }\n    return false;\n}\n\nvar Checker = Class({\n    constructor: function (object) {\n        this.object = object;\n    },\n    \n    typeOf: function (type) {\n        if (this.object instanceof type) {\n            return true;\n        }\n        var meta = Class.typeInfo(this.object);\n        return meta && findType(meta, type);\n    }\n});\n\n// aliases\nChecker.prototype.a = Checker.prototype.typeOf;\nChecker.prototype.an = Checker.prototype.typeOf;\n\nClass.is = function (object) {\n    return new Checker(object);\n};\n\nClass.typeInfo = function (object) {\n    var theClass = object.__proto__['.class'];\n    return theClass ? theClass['.class.meta'] : undefined;\n};\n\nClass.VERSION = [0, 0, 2];\n\nif (module) {\n    module.exports = Class;\n} else {\n    global.Class = Class;   // for browser\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/plugins/visualizations/charts/static/repository/plugins/biojs/interactions/~/js-class/class.js\n// module id = 10\n// module chunks = 1","(function() { \n\n  var slice   = Array.prototype.slice,\n      each    = Array.prototype.forEach;\n\n  var extend = function(obj) {\n    if(typeof obj !== 'object') throw obj + ' is not an object' ;\n\n    var sources = slice.call(arguments, 1); \n\n    each.call(sources, function(source) {\n      if(source) {\n        for(var prop in source) {\n          if(typeof source[prop] === 'object' && obj[prop]) {\n            extend.call(obj, obj[prop], source[prop]);\n          } else {\n            obj[prop] = source[prop];\n          }\n        } \n      }\n    });\n\n    return obj;\n  }\n\n  this.extend = extend;\n\n}).call(this);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/plugins/visualizations/charts/static/repository/plugins/biojs/interactions/~/js-extend/extend.js\n// module id = 11\n// module chunks = 1"],"sourceRoot":""}