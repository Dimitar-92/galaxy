{"version":3,"sources":["webpack:///biojs_visPieChart.js","webpack:///webpack/bootstrap a4e6dc6117b1909a4d95?9160","webpack:///./config/plugins/visualizations/charts/static/repository/visualizations/biojs/visPieChart/wrapper.js","webpack:///./config/plugins/visualizations/charts/static/repository/plugins/biojs/visPieChart/~/tnt.api/index.js","webpack:///./config/plugins/visualizations/charts/static/repository/plugins/biojs/visPieChart/~/tnt.api/src/api.js","webpack:///./config/plugins/visualizations/charts/static/repository/plugins/biojs/visPieChart/~/tnt.tooltip/index.js","webpack:///./config/plugins/visualizations/charts/static/repository/plugins/biojs/visPieChart/~/tnt.tooltip/src/tooltip.js","webpack:///./config/plugins/visualizations/charts/static/repository/plugins/biojs/visPieChart/~/visualize_piechart/src/vis.js"],"names":["define","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","Vis","Backbone","Model","extend","initialize","options","chart","dataset","settings","console","log","v","read","download_url","document","getElementById","targets","state","process","resolve","apply","undefined","api","who","_methods","add_batch","obj","unshift","update","method","value","i","length","add","reg","get","methods","check","msg","Array","transform","cbak","attach_method","opts","checks","transforms","getter","on_getter","setter","on_setter","x","j","new_method","new_val","arguments","push","this","getset","param","default_value","def","set","name","tooltip","apijs","selectAncestor","elem","type","toLowerCase","parentNode","tagName","tooltip_div","drag","d3","behavior","conf","position","allow_drag","show_closer","fill","width","t","data","event","origin","parseInt","select","style","y","on","containerElem","append","attr","classed","remove","d3mouse","mouse","xoffset","close","node","val","list","obj_info_list","header","text","table_rows","selectAll","rows","enter","html","d","each","link","table","obj_info_table","label","plain","body","tntTooltip","cssId","head","getElementsByTagName","createElement","rel","href","media","appendChild","vis","updateScales","radius","selected","circleScales","scale","linear","domain","range","clamp","newScales","currRad","object","String","slice","links","l","checkLink","labels","checkLabel","points","checkNode","unselect","point","r","Math","cos","sin","graph","dataTypes","config","allColorsExp","fontSize","pointSize","pointColor","size","filter","direction","subject","labelSize","transitionSpeed","render","div","graphSize","svg","circleColorScale","rgb","b","w","h","s","graphicMode","vizType","createComparator","property","a","shadeColor2","color","percent","f","R","G","B","round","toString","circleColorScaleExp","updateBreadcrumbs","nodeArray","breadcrumbPoints","join","renderInitialState","rings","transition","duration","setTimeout","path","pie","attrTween","interpolate","_current","arc","g","depth","entering","childNodes","innerHTML","substring","drawData","displData","currAngle","coords","angle","PI","grades","sort","types","population","count","colorsExpr","category20","arcs","outerRadius","innerRadius","layout","tempDataTypes","JSON","parse","stringify","selDataType","startAngle","endAngle","delay","selection","prototype","moveToFront","json","error","resp","setPieColors","setFontSize","setPointSize","setPointColor","filter_type"],"mappings":"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","file":"biojs_visPieChart.js","sourcesContent":["define(function() { return /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(14) ], __WEBPACK_AMD_DEFINE_RESULT__ = function(Vis) {\n\t    return Backbone.Model.extend({\n\t        initialize: function( options ) {\n\t            var chart    = options.chart;\n\t            var dataset  = options.dataset;\n\t            var settings = options.chart.settings;\n\t            console.log(Vis);\n\t            //Example Data Format = [\n\t\n\t                   // {\n\t                   //  \"direction\": null,\n\t                   //  \"object\": \"disease1\",\n\t                   //  \"type\": \"diseases1\",\n\t                   //  \"value\": 0.7139138126389065,\n\t                   //   \"subject\": \"EFO_0004591\"\n\t                   //},{\n\t                   //    \"direction\": null,\n\t                   //     \"object\": \"disease1\",\n\t                   //     \"type\": \"diseases3\",\n\t                   //    \"value\": 0.7139138126389065,\n\t                   //      \"subject\": \"EFO_0004591\"\n\t                //    }\n\t            //  ]\n\t\n\t            var v = Vis()\n\t                // .size(500)//250-1000\n\t                // .size(2000)\n\t                // .size(250)\n\t                // .size(450)\n\t                // .setPointSize(5)\n\t                // .setPieColors([\"#ff0000\"])\n\t                // .setPointColor('#fff')\n\t                // .setPointColor('rgb(200,132,200)')\n\t                // .setFontSize('10px')\n\t                //.read(\"http://partizanos.github.io/VizTargetDiseases/data/sample.json\");\n\t                // .read(data);\n\t                .read(dataset.download_url)\n\t\n\t\n\t            \n\t            v(document.getElementById(options.targets[ 0 ] + \"\"));\n\t            chart.state( 'ok', 'Chart drawn.' );\n\t            options.process.resolve();\n\t\n\t            // d3.select(\"#changeType\")\n\t            //     .on(\"change\", function () {\n\t            //         console.log(this.value);\n\t            //         v.filter_type(this.value);\n\t            //     })\n\t\n\t            // setTimeout(function () {\n\t            //     v.filter_type(\"shared-phenotype\");\n\t            // }, 1000);\n\t            //\n\t            // setTimeout(function () {\n\t            //     v.filter_type(null);\n\t            // }, 2000);\n\t\n\t        }\n\t    });\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(11);\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\tvar api = function (who) {\n\t\n\t    var _methods = function () {\n\t\tvar m = [];\n\t\n\t\tm.add_batch = function (obj) {\n\t\t    m.unshift(obj);\n\t\t};\n\t\n\t\tm.update = function (method, value) {\n\t\t    for (var i=0; i<m.length; i++) {\n\t\t\tfor (var p in m[i]) {\n\t\t\t    if (p === method) {\n\t\t\t\tm[i][p] = value;\n\t\t\t\treturn true;\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t    return false;\n\t\t};\n\t\n\t\tm.add = function (method, value) {\n\t\t    if (m.update (method, value) ) {\n\t\t    } else {\n\t\t\tvar reg = {};\n\t\t\treg[method] = value;\n\t\t\tm.add_batch (reg);\n\t\t    }\n\t\t};\n\t\n\t\tm.get = function (method) {\n\t\t    for (var i=0; i<m.length; i++) {\n\t\t\tfor (var p in m[i]) {\n\t\t\t    if (p === method) {\n\t\t\t\treturn m[i][p];\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t};\n\t\n\t\treturn m;\n\t    };\n\t\n\t    var methods    = _methods();\n\t    var api = function () {};\n\t\n\t    api.check = function (method, check, msg) {\n\t\tif (method instanceof Array) {\n\t\t    for (var i=0; i<method.length; i++) {\n\t\t\tapi.check(method[i], check, msg);\n\t\t    }\n\t\t    return;\n\t\t}\n\t\n\t\tif (typeof (method) === 'function') {\n\t\t    method.check(check, msg);\n\t\t} else {\n\t\t    who[method].check(check, msg);\n\t\t}\n\t\treturn api;\n\t    };\n\t\n\t    api.transform = function (method, cbak) {\n\t\tif (method instanceof Array) {\n\t\t    for (var i=0; i<method.length; i++) {\n\t\t\tapi.transform (method[i], cbak);\n\t\t    }\n\t\t    return;\n\t\t}\n\t\n\t\tif (typeof (method) === 'function') {\n\t\t    method.transform (cbak);\n\t\t} else {\n\t\t    who[method].transform(cbak);\n\t\t}\n\t\treturn api;\n\t    };\n\t\n\t    var attach_method = function (method, opts) {\n\t\tvar checks = [];\n\t\tvar transforms = [];\n\t\n\t\tvar getter = opts.on_getter || function () {\n\t\t    return methods.get(method);\n\t\t};\n\t\n\t\tvar setter = opts.on_setter || function (x) {\n\t\t    for (var i=0; i<transforms.length; i++) {\n\t\t\tx = transforms[i](x);\n\t\t    }\n\t\n\t\t    for (var j=0; j<checks.length; j++) {\n\t\t\tif (!checks[j].check(x)) {\n\t\t\t    var msg = checks[j].msg || \n\t\t\t\t(\"Value \" + x + \" doesn't seem to be valid for this method\");\n\t\t\t    throw (msg);\n\t\t\t}\n\t\t    }\n\t\t    methods.add(method, x);\n\t\t};\n\t\n\t\tvar new_method = function (new_val) {\n\t\t    if (!arguments.length) {\n\t\t\treturn getter();\n\t\t    }\n\t\t    setter(new_val);\n\t\t    return who; // Return this?\n\t\t};\n\t\tnew_method.check = function (cbak, msg) {\n\t\t    if (!arguments.length) {\n\t\t\treturn checks;\n\t\t    }\n\t\t    checks.push ({check : cbak,\n\t\t\t\t  msg   : msg});\n\t\t    return this;\n\t\t};\n\t\tnew_method.transform = function (cbak) {\n\t\t    if (!arguments.length) {\n\t\t\treturn transforms;\n\t\t    }\n\t\t    transforms.push(cbak);\n\t\t    return this;\n\t\t};\n\t\n\t\twho[method] = new_method;\n\t    };\n\t\n\t    var getset = function (param, opts) {\n\t\tif (typeof (param) === 'object') {\n\t\t    methods.add_batch (param);\n\t\t    for (var p in param) {\n\t\t\tattach_method (p, opts);\n\t\t    }\n\t\t} else {\n\t\t    methods.add (param, opts.default_value);\n\t\t    attach_method (param, opts);\n\t\t}\n\t    };\n\t\n\t    api.getset = function (param, def) {\n\t\tgetset(param, {default_value : def});\n\t\n\t\treturn api;\n\t    };\n\t\n\t    api.get = function (param, def) {\n\t\tvar on_setter = function () {\n\t\t    throw (\"Method defined only as a getter (you are trying to use it as a setter\");\n\t\t};\n\t\n\t\tgetset(param, {default_value : def,\n\t\t\t       on_setter : on_setter}\n\t\t      );\n\t\n\t\treturn api;\n\t    };\n\t\n\t    api.set = function (param, def) {\n\t\tvar on_getter = function () {\n\t\t    throw (\"Method defined only as a setter (you are trying to use it as a getter\");\n\t\t};\n\t\n\t\tgetset(param, {default_value : def,\n\t\t\t       on_getter : on_getter}\n\t\t      );\n\t\n\t\treturn api;\n\t    };\n\t\n\t    api.method = function (name, cbak) {\n\t\tif (typeof (name) === 'object') {\n\t\t    for (var p in name) {\n\t\t\twho[p] = name[p];\n\t\t    }\n\t\t} else {\n\t\t    who[name] = cbak;\n\t\t}\n\t\treturn api;\n\t    };\n\t\n\t    return api;\n\t    \n\t};\n\t\n\tmodule.exports = exports = api;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = tooltip = __webpack_require__(13);\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar apijs = __webpack_require__(10);\n\t\n\tvar tooltip = function () {\n\t    \"use strict\";\n\t\n\t    var drag = d3.behavior.drag();\n\t    var tooltip_div;\n\t\n\t    var conf = {\n\t        position : \"right\",\n\t        allow_drag : true,\n\t        show_closer : true,\n\t        fill : function () { throw \"fill is not defined in the base object\"; },\n\t        width : 180,\n\t        id : 1\n\t    };\n\t\n\t    var t = function (data, event) {\n\t        drag\n\t            .origin(function(){\n\t                return {\n\t                    x : parseInt(d3.select(this).style(\"left\")),\n\t                    y : parseInt(d3.select(this).style(\"top\"))\n\t                };\n\t            })\n\t            .on(\"drag\", function() {\n\t                if (conf.allow_drag) {\n\t                    d3.select(this)\n\t                        .style(\"left\", d3.event.x + \"px\")\n\t                        .style(\"top\", d3.event.y + \"px\");\n\t                }\n\t            });\n\t\n\t        // TODO: Why do we need the div element?\n\t        // It looks like if we anchor the tooltip in the \"body\"\n\t        // The tooltip is not located in the right place (appears at the bottom)\n\t        // See clients/tooltips_test.html for an example\n\t        var containerElem = selectAncestor (this, \"div\");\n\t        if (containerElem === undefined) {\n\t            // We require a div element at some point to anchor the tooltip\n\t            return;\n\t        }\n\t\n\t        tooltip_div = d3.select(containerElem)\n\t            .append(\"div\")\n\t            .attr(\"class\", \"tnt_tooltip\")\n\t            .classed(\"tnt_tooltip_active\", true)  // TODO: Is this needed/used???\n\t            .call(drag);\n\t\n\t        // prev tooltips with the same header\n\t        d3.select(\"#tnt_tooltip_\" + conf.id).remove();\n\t\n\t        if ((d3.event === null) && (event)) {\n\t            d3.event = event;\n\t        }\n\t        var d3mouse = d3.mouse(containerElem);\n\t        d3.event = null;\n\t\n\t        var xoffset = 0;\n\t        if (conf.position === \"left\") {\n\t            xoffset = conf.width;\n\t        }\n\t\n\t        tooltip_div.attr(\"id\", \"tnt_tooltip_\" + conf.id);\n\t\n\t        // We place the tooltip\n\t        tooltip_div\n\t            .style(\"left\", (d3mouse[0] - xoffset) + \"px\")\n\t            .style(\"top\", (d3mouse[1]) + \"px\");\n\t\n\t        // Close\n\t        if (conf.show_closer) {\n\t            tooltip_div\n\t                .append(\"div\")\n\t                .attr(\"class\", \"tnt_tooltip_closer\")\n\t                .on (\"click\", function () {\n\t                    t.close();\n\t                });\n\t        }\n\t\n\t        conf.fill.call(tooltip_div.node(), data);\n\t\n\t        // return this here?\n\t        return t;\n\t    };\n\t\n\t    // gets the first ancestor of elem having tagname \"type\"\n\t    // example : var mydiv = selectAncestor(myelem, \"div\");\n\t    function selectAncestor (elem, type) {\n\t        type = type.toLowerCase();\n\t        if (elem.parentNode === null) {\n\t            console.log(\"No more parents\");\n\t            return undefined;\n\t        }\n\t        var tagName = elem.parentNode.tagName;\n\t\n\t        if ((tagName !== undefined) && (tagName.toLowerCase() === type)) {\n\t            return elem.parentNode;\n\t        } else {\n\t            return selectAncestor (elem.parentNode, type);\n\t        }\n\t    }\n\t\n\t    var api = apijs(t)\n\t        .getset(conf);\n\t\n\t    api.check('position', function (val) {\n\t        return (val === 'left') || (val === 'right');\n\t    }, \"Only 'left' or 'right' values are allowed for position\");\n\t\n\t    api.method('close', function () {\n\t        if (tooltip_div) {\n\t            tooltip_div.remove();\n\t        }\n\t    });\n\t\n\t    return t;\n\t};\n\t\n\ttooltip.list = function () {\n\t    // list tooltip is based on general tooltips\n\t    var t = tooltip();\n\t    var width = 180;\n\t\n\t    t.fill (function (obj) {\n\t        var tooltip_div = d3.select(this);\n\t        var obj_info_list = tooltip_div\n\t            .append(\"table\")\n\t            .attr(\"class\", \"tnt_zmenu\")\n\t            .attr(\"border\", \"solid\")\n\t            .style(\"width\", t.width() + \"px\");\n\t\n\t        // Tooltip header\n\t        if (obj.header) {\n\t            obj_info_list\n\t                .append(\"tr\")\n\t                .attr(\"class\", \"tnt_zmenu_header\")\n\t                .append(\"th\")\n\t                .text(obj.header);\n\t        }\n\t\n\t        // Tooltip rows\n\t        var table_rows = obj_info_list.selectAll(\".tnt_zmenu_row\")\n\t            .data(obj.rows)\n\t            .enter()\n\t            .append(\"tr\")\n\t            .attr(\"class\", \"tnt_zmenu_row\");\n\t\n\t        table_rows\n\t            .append(\"td\")\n\t            .style(\"text-align\", \"center\")\n\t            .html(function(d,i) {\n\t                return obj.rows[i].value;\n\t            })\n\t            .each(function (d) {\n\t                if (d.link === undefined) {\n\t                    return;\n\t                }\n\t                d3.select(this)\n\t                    .classed(\"link\", 1)\n\t                    .on('click', function (d) {\n\t                        d.link(d.obj);\n\t                        t.close.call(this);\n\t                    });\n\t            });\n\t    });\n\t    return t;\n\t};\n\t\n\ttooltip.table = function () {\n\t    // table tooltips are based on general tooltips\n\t    var t = tooltip();\n\t\n\t    var width = 180;\n\t\n\t    t.fill (function (obj) {\n\t        var tooltip_div = d3.select(this);\n\t\n\t        var obj_info_table = tooltip_div\n\t            .append(\"table\")\n\t            .attr(\"class\", \"tnt_zmenu\")\n\t            .attr(\"border\", \"solid\")\n\t            .style(\"width\", t.width() + \"px\");\n\t\n\t        // Tooltip header\n\t        if (obj.header) {\n\t            obj_info_table\n\t                .append(\"tr\")\n\t                .attr(\"class\", \"tnt_zmenu_header\")\n\t                .append(\"th\")\n\t                .attr(\"colspan\", 2)\n\t                .text(obj.header);\n\t        }\n\t\n\t        // Tooltip rows\n\t        var table_rows = obj_info_table.selectAll(\".tnt_zmenu_row\")\n\t            .data(obj.rows)\n\t            .enter()\n\t            .append(\"tr\")\n\t            .attr(\"class\", \"tnt_zmenu_row\");\n\t\n\t        table_rows\n\t            .append(\"th\")\n\t            .attr(\"colspan\", function (d, i) {\n\t                if (d.value === \"\") {\n\t                    return 2;\n\t                }\n\t                return 1;\n\t            })\n\t            .attr(\"class\", function (d) {\n\t                if (d.value === \"\") {\n\t                    return \"tnt_zmenu_inner_header\";\n\t                }\n\t                return \"tnt_zmenu_cell\";\n\t            })\n\t            .html(function(d,i) {\n\t                return obj.rows[i].label;\n\t            });\n\t\n\t        table_rows\n\t            .append(\"td\")\n\t            .html(function(d,i) {\n\t                if (typeof obj.rows[i].value === 'function') {\n\t                    obj.rows[i].value.call(this, d);\n\t                } else {\n\t                    return obj.rows[i].value;\n\t                }\n\t            })\n\t            .each(function (d) {\n\t                if (d.value === \"\") {\n\t                    d3.select(this).remove();\n\t                }\n\t            })\n\t            .each(function (d) {\n\t                if (d.link === undefined) {\n\t                    return;\n\t                }\n\t                d3.select(this)\n\t                .classed(\"link\", 1)\n\t                .on('click', function (d) {\n\t                    d.link(d.obj);\n\t                    t.close.call(this);\n\t                });\n\t            });\n\t    });\n\t\n\t    return t;\n\t};\n\t\n\ttooltip.plain = function () {\n\t    // plain tooltips are based on general tooltips\n\t    var t = tooltip();\n\t\n\t    t.fill (function (obj) {\n\t        var tooltip_div = d3.select(this);\n\t\n\t        var obj_info_table = tooltip_div\n\t            .append(\"table\")\n\t            .attr(\"class\", \"tnt_zmenu\")\n\t            .attr(\"border\", \"solid\")\n\t            .style(\"width\", t.width() + \"px\");\n\t\n\t        if (obj.header) {\n\t            obj_info_table\n\t                .append(\"tr\")\n\t                .attr(\"class\", \"tnt_zmenu_header\")\n\t                .append(\"th\")\n\t                .text(obj.header);\n\t        }\n\t\n\t        if (obj.body) {\n\t            obj_info_table\n\t                .append(\"tr\")\n\t                .attr(\"class\", \"tnt_zmenu_row\")\n\t                .append(\"td\")\n\t                .style(\"text-align\", \"center\")\n\t                .html(obj.body);\n\t        }\n\t    });\n\t\n\t    return t;\n\t};\n\t\n\tmodule.exports = exports = tooltip;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// var cttvApi = require('cttv.api');\n\tvar tntTooltip = __webpack_require__(12);\n\t// var d3 = require('d3');\n\t// var flowerView = require(\"cttv.flowerView\");\n\t//add necessary css from js so that the user doesn have to explicitely include it\n\t//if he includes it css is not imported \n\tvar cssId = 'myCss'; \n\tif (!document.getElementById(cssId))\n\t{\n\t    var head  = document.getElementsByTagName('head')[0];\n\t    var link  = document.createElement('link');\n\t    link.id   = cssId;\n\t    link.rel  = 'stylesheet';\n\t    link.type = 'text/css';\n\t    link.href = \"../build/viz_diseases.css\";\n\t    link.media = 'all';\n\t    head.appendChild(link);\n\t}\n\t\n\t\n\t\n\tvar vis = function() {\n\t    \"use strict\";\n\t    var config = {\n\t        allColorsExp:[],\n\t        // allColorsExp:[],\n\t        fontSize:\"10px\",\n\t        pointSize:3.5,\n\t        pointColor:\"navy\",\n\t        size: 700,\n\t        filter: null,\n\t        data: [\n\t\n\t            {\n\t                \"direction\": null,\n\t                \"object\": \"disease1\",\n\t                \"type\": \"diseases1\",\n\t                \"value\": 0.7139138126389065,\n\t                \"subject\": \"EFO_0004591\"\n\t            }, {\n\t                \"direction\": null,\n\t                \"object\": \"disease1\",\n\t                \"type\": \"diseases2\",\n\t                \"value\": 0.7139138126389065,\n\t                \"subject\": \"EFO_0004591\"\n\t            }, {\n\t                \"direction\": null,\n\t                \"object\": \"disease1\",\n\t                \"type\": \"diseases3\",\n\t                \"value\": 0.7139138126389065,\n\t                \"subject\": \"EFO_0004591\"\n\t            }\n\t        ]\n\t    };\n\t    var graph;\n\t\n\t    var labelSize = 100;\n\t    var transitionSpeed = 1000;\n\t    var points, labels, links;\n\t    // var api = cttvApi()\n\t    //     .prefix(\"http://test.targetvalidation.org:8899/api/\")\n\t    //     .appname(\"cttv-web-app\")\n\t    //     .secret(\"2J23T20O31UyepRj7754pEA2osMOYfFK\");\n\t    var dataTypes;\n\t    var render = function(div) {\n\t        var graphSize = config.size - (labelSize * 2);\n\t        var radius = graphSize / 2;\n\t\n\t\n\t        d3.select(div)\n\t            .append(\"div\")\n\t            .attr(\"id\", \"sequence\")\n\t            .attr(\"width\", config.size)\n\t            .attr(\"height\", 30)\n\t\n\t        var svg = d3.select(div)\n\t            .append(\"svg\")\n\t            .attr(\"width\", config.size)\n\t            .attr(\"height\", config.size)\n\t            .append(\"g\")\n\t            .attr(\"transform\", \"translate(\" + (radius + labelSize) + \",\" + (radius + labelSize) + \")\")\n\t            .attr(\"id\", \"pieChart\")\n\t\n\t        var circleColorScale = d3.scale.linear()\n\t            .domain([0, 1])\n\t            .range([d3.rgb(0, 82, 163), d3.rgb(182, 221, 252)]);\n\t\n\t        // d3.json(\"../data/sample.json\", function(error, resp) {\n\t        //     var data = resp.data;\n\t        //     render.update(data, updateScales(radius), 'pieChart');\n\t        // });\n\t        // d3.json(\"../data/sample.json\", function(error, resp) {\n\t        //     var data = resp.data;\n\t        // });\n\t\n\t        var b = {\n\t            w: 100,\n\t            h: 30,\n\t            s: 3,\n\t            t: 10\n\t        };\n\t\n\t        render.update = function(data, circleScales, graphicMode, vizType) {\n\t\n\t            if (graphicMode == 'pieChart') {\n\t                d3.selectAll(\"#sequence svg\").remove();\n\t                d3.selectAll(\"g text\").remove();\n\t                d3.selectAll(\"line\").remove();\n\t                d3.selectAll(\"circle\").remove();\n\t                updateBreadcrumbs([{ name: 'Home' }]);\n\t\n\t                function createComparator(property) {\n\t                    return function(a, b) {\n\t                        if (a[property] > b[property]) return 1\n\t                        if (a[property] < b[property]) return -1\n\t                        return 0\n\t                    };\n\t                }\n\t\n\t                data.sort(createComparator('type'))\n\t\n\t                var types = {}\n\t                for (var i = 0; i < data.length; i++) {\n\t                    if (types[data[i].type] == undefined)\n\t                        types[data[i].type] = []\n\t                    types[data[i].type].push(data[i])\n\t                }\n\t                // portion of circle per data type\n\t                dataTypes = [];\n\t                for (i in types) {\n\t                    dataTypes.push({\n\t                        \"type\": i,\n\t                        \"population\": types[i].length / data.length,\n\t                        \"count\": types[i].length\n\t                    })\n\t                }\n\t                dataTypes.sort(function compare(a, b) {\n\t                    if (a.population > b.population) return -1;\n\t                    if (a.population < b.population) return 1;\n\t                    return 0;\n\t                })\n\t\n\t                //Create colors mapping to data Types\n\t                var colorsExpr = [];\n\t                for (i = 0; i < 10; i++) {\n\t                    colorsExpr.push([d3.scale.category20().range()[i * 2], d3.scale.category20().range()[i * 2 + 1]])\n\t                }\n\t\n\t\n\t                function shadeColor2(color, percent) {   \n\t                    var f=parseInt(color.slice(1),16),t=percent<0?0:255,p=percent<0?percent*-1:percent,R=f>>16,G=f>>8&0x00FF,B=f&0x0000FF;\n\t                    return \"#\"+(0x1000000+(Math.round((t-R)*p)+R)*0x10000+(Math.round((t-G)*p)+G)*0x100+(Math.round((t-B)*p)+B)).toString(16).slice(1);\n\t                }\n\t                // config.allColorsExp;\n\t                var allColorsExp = {};\n\t                if(config.allColorsExp.length!=0){\n\t                    for(i=0; i<config.allColorsExp.length; i++){\n\t                        allColorsExp[dataTypes[i].type] = [\n\t                        config.allColorsExp[i],\n\t                        shadeColor2(config.allColorsExp[i], 0.8)\n\t                        // d3.scale.category20().range()[i % 10 * 2 + 1],\n\t                        // d3.scale.category20().range()[i % 10 * 2]\n\t                    ]\n\t                    }\n\t                }\n\t                for (i = config.allColorsExp.length; i < dataTypes.length; i++) {\n\t                    allColorsExp[dataTypes[i].type] = [\n\t                        d3.scale.category20().range()[i % 10 * 2],\n\t                        d3.scale.category20().range()[i % 10 * 2 + 1]\n\t                        // d3.scale.category20().range()[i % 10 * 2 + 1],\n\t                        // d3.scale.category20().range()[i % 10 * 2]\n\t                    ]\n\t                }\n\t\n\t                function circleColorScaleExp(type) {\n\t                    return d3.scale.linear()\n\t                        .domain([0, 1])\n\t                        .range(allColorsExp[type]);\n\t                }\n\t\n\t                function giveArcColor(type) {\n\t                    return d3.scale.linear()\n\t                        .domain([0, 105])\n\t                        .range([allColorsExp[type][0], allColorsExp[type][1]])\n\t                }\n\t                //create arcs equivalent of rings\n\t                var arcs = [];\n\t                for (var i = 0; i < 1; i++) {\n\t                    var arc = d3.svg.arc()\n\t                        .outerRadius(radius - (i * radius))\n\t                        .innerRadius(radius - (i * radius) - radius);\n\t\n\t                    arcs.push(arc);\n\t                }\n\t\n\t                var labelArc = d3.svg.arc()\n\t                    .outerRadius(radius - 40)\n\t                    .innerRadius(radius - 40);\n\t\n\t                var pie = d3.layout.pie()\n\t                    .sort(null)\n\t                    .value(function(d) {\n\t                        return d.population;\n\t                    });\n\t\n\t                var arc = d3.svg.arc()\n\t                    .outerRadius(radius)\n\t                    .innerRadius(0)\n\t\n\t                var path = svg\n\t                    .selectAll(\"path\")\n\t                    .data(pie(dataTypes))\n\t                    .enter().append(\"path\")\n\t                    //Give color based on datatype\n\t                    .attr(\"fill\", function(d, i) {\n\t                        return allColorsExp[d.data.type][0];\n\t                    })\n\t                    .attr(\"d\", arc)\n\t                    .each(function(d) { this._current = d; }) // store the initial values\n\t                    .on(\"click\", function(d) {\n\t                        d3.selectAll(\"#pieChart text\").style('opacity', 0);\n\t\n\t                        var tempDataTypes = JSON.parse(JSON.stringify(dataTypes));\n\t                        for (var i in tempDataTypes) {\n\t                            if (tempDataTypes[i].type == d.data.type)\n\t                                tempDataTypes[i].population = 1;\n\t                            else {\n\t                                tempDataTypes[i].population = 0;\n\t                            }\n\t                        }\n\t\n\t                        path = path.data(pie(tempDataTypes))\n\t                            .attr(\"fill\", function(d, i) {\n\t                                return allColorsExp[(d.data.type)][0];\n\t                            });\n\t\n\t                        path.transition().duration(500).attrTween(\"d\", function(a) {\n\t                            var i = d3.interpolate(this._current, a) //,\n\t                                // k = d3.interpolate(arc.outerRadius()(), newRadius);\n\t                            this._current = i(0);\n\t                            return function(t) {\n\t                                return arc(i(t));\n\t                                // return arc.innerRadius(k(t) / 4).outerRadius(k(t))(i(t));\n\t                            };\n\t                        });\n\t                        //////////////////////////\n\t                        setTimeout(\n\t                            function() {\n\t                                var selDataType = d.data.type;\n\t                                updateBreadcrumbs([{ name: 'Home', depth: 0 }, { name: selDataType, depth: 1 }]);\n\t\n\t                                // d3.selectAll(\"g path\").remove();\n\t                                //////////\n\t                                graph = d3.select(\"#pieChart\")\n\t                                    //////////////\n\t                                var rings = graph\n\t                                    .selectAll(\".ring\")\n\t                                    .data(circleScales);\n\t\n\t\n\t                                rings\n\t                                    .enter()\n\t                                    .append(\"path\")\n\t                                    /////////\n\t                                    .style('opacity', 0)\n\t                                    /////\n\t                                    .attr(\"class\", \"ring\")\n\t                                    .attr(\"fill\", function(d) {\n\t                                        return circleColorScaleExp(selDataType)(d.domain()[0]);\n\t                                    })\n\t                                    .attr(\"d\", function(d) {\n\t                                        var arc = d3.svg.arc()\n\t                                            .innerRadius(d.range()[0])\n\t                                            .outerRadius(d.range()[1])\n\t                                            .startAngle(0)\n\t                                            .endAngle(2 * Math.PI);\n\t                                        return arc(d);\n\t                                    })\n\t                                    .attr(\"id\", function(d, i) {\n\t                                        return \"ring\" + i;\n\t                                    })\n\t\n\t\n\t                                rings.transition()\n\t                                    .delay(function(d, i) {\n\t                                        return i * 50;\n\t                                    })\n\t                                    .duration(100)\n\t                                    .style('opacity', 1);\n\t\n\t                                rings\n\t                                    .on(\"click\", function(d, i) {\n\t                                        // One ring has been selected\n\t                                        var selected = d3.select(this);\n\t                                        if (selected.classed(\"zoomed\")) {\n\t                                            selected.classed(\"zoomed\", false);\n\t\n\t                                            render.update(data, updateScales(radius), 'rings', selDataType);\n\t                                        } else {\n\t                                            selected.classed(\"zoomed\", true);\n\t\n\t                                            render.update(data, updateScales(radius, d), 'rings', selDataType);\n\t                                        }\n\t                                    });\n\t\n\t                                drawData(selDataType)\n\t\n\t                                //on background change bring points to foreground\n\t                                d3.selection.prototype.moveToFront = function() {\n\t                                    return this.each(function() {\n\t                                        this.parentNode.appendChild(this);\n\t                                    });\n\t                                };\n\t                                d3.selectAll('circle').moveToFront()\n\t                                d3.selectAll('line').moveToFront()\n\t                            }, 600);\n\t                    });\n\t\n\t                path.each(function(d) {\n\t                    svg.append(\"text\")\n\t                        .attr(\"fill\", \"#fff\")\n\t                        .style(\"margin\", \"3px\")\n\t                        .attr(\"transform\", function() {\n\t                            // debugger;\n\t                            var grades = ((d.startAngle + d.endAngle) / 2) * 180 / Math.PI;\n\t                            if (grades > 0 && grades < 180) {\n\t                                var x = (-200 + graphSize) / 2 * Math.cos(((d.startAngle + d.endAngle) / 2) - Math.PI / 2);\n\t                                var y = (-200 + graphSize) / 2 * Math.sin(((d.startAngle + d.endAngle) / 2) - Math.PI / 2);\n\t                                return \"translate(\" + x + \",\" + y + \") rotate(\" + (grades - 90) + \")\";\n\t                            } else {\n\t                                var x = (-25 + graphSize) / 2 * Math.cos(((d.startAngle + d.endAngle) / 2) - Math.PI / 2);\n\t                                var y = (-25 + graphSize) / 2 * Math.sin(((d.startAngle + d.endAngle) / 2) - Math.PI / 2);\n\t                                return \"translate(\" + x + \",\" + y + \") rotate(\" + (grades - 90 + 180) + \")\";\n\t                            }\n\t                        })\n\t                        // .style(\"font-size\", \"12px\")\n\t                        .style(\"font-size\", config.fontSize)\n\t                        .attr(\"dy\", \".35em\")\n\t                        .text(function() {\n\t                            return d.data.type + \" \" + d.data.count;\n\t                        });\n\t                })\n\t\n\t                function type(d) {\n\t                    d.population = +d.population;\n\t                    return d;\n\t                }\n\t\n\t            } else if (graphicMode == 'rings') {\n\t\n\t                var rings = graph\n\t                    .selectAll(\".ring\")\n\t                    .data(circleScales);\n\t\n\t                rings\n\t                    .enter()\n\t                    .append(\"path\")\n\t                    .attr(\"class\", \"ring\")\n\t                    .attr(\"fill\", function(d) {\n\t                        return circleColorScale(d.domain()[0]);\n\t                    })\n\t                    .attr(\"d\", function(d) {\n\t                        var arc = d3.svg.arc()\n\t                            .innerRadius(d.range()[0])\n\t                            .outerRadius(d.range()[1])\n\t                            .startAngle(0)\n\t                            .endAngle(2 * Math.PI);\n\t                        return arc(d);\n\t                    })\n\t                    .attr(\"id\", function(d, i) {\n\t                        return \"ring\" + i;\n\t                    })\n\t\n\t\n\t                .on(\"click\", function(d, i) {\n\t                    // One ring has been selected\n\t                    var selected = d3.select(this);\n\t                    if (selected.classed(\"zoomed\")) {\n\t                        selected.classed(\"zoomed\", false);\n\t                        render.update(data, updateScales(radius));\n\t                    } else {\n\t                        selected.classed(\"zoomed\", true);\n\t                        render.update(data, updateScales(radius, d));\n\t                    }\n\t                });\n\t\n\t                rings\n\t                    .transition()\n\t                    .duration(transitionSpeed)\n\t                    .attr(\"d\", function(d, i) {\n\t                        var arc = d3.svg.arc()\n\t                            .innerRadius(circleScales[i].range()[0] + 0.1) // Have to add 0.1 otherwise it doesn't transition correctly\n\t                            .outerRadius(circleScales[i].range()[1] + 0.1) // Have to add 0.1 otherwise it doesn't transition correctly\n\t                            .startAngle(0)\n\t                            .endAngle(2 * Math.PI);\n\t                        return arc(d, i);\n\t                    });\n\t\n\t                var displData = [];\n\t                for (i in data)\n\t                    if (data[i].type == vizType)\n\t                        displData.push(data[i])\n\t\n\t                    // Calculate coords for each data point\n\t                var stepRad = 2 * Math.PI * 360 / displData.length; // grades\n\t                var currAngle = 0;\n\t\n\t                for (var i = 0; i < displData.length; i++) {\n\t                    var p = displData[i];\n\t                    var scale = circleScales[~~((1 - p.value) / 0.2)];\n\t                    var coords = point(scale(1 - p.value), currAngle);\n\t                    p.x = coords[0];\n\t                    p.y = coords[1];\n\t                    p.angle = currAngle;\n\t                    currAngle += (2 * Math.PI / displData.length);\n\t                }\n\t\n\t                // Links\n\t                links = graph.selectAll(\".openTargets_d-d_overview_link\")\n\t                    .data(displData, function(d) {\n\t                        return d.object + \"-\" + d.subject;\n\t                    });\n\t                links\n\t                    .enter()\n\t                    .append(\"line\")\n\t                    .style(\"stroke\", \"navy\")\n\t                    .attr(\"class\", \"openTargets_d-d_overview_link unselected\");\n\t                links\n\t                    .transition()\n\t                    .duration(transitionSpeed)\n\t                    .attr(\"x1\", function(d) {\n\t                        return d.x;\n\t                    })\n\t                    .attr(\"y1\", function(d) {\n\t                        return d.y;\n\t                    })\n\t                    .attr(\"x2\", function(d) {\n\t                        return radius * Math.cos(d.angle);\n\t                    })\n\t                    .attr(\"y2\", function(d) {\n\t                        return radius * Math.sin(d.angle);\n\t                    });\n\t\n\t                // Nodes\n\t                points = graph.selectAll(\".openTargets_d-d_overview_node\")\n\t                    .data(displData, function(d) {\n\t                        return d.object + \"-\" + d.subject;\n\t                    });\n\t                points\n\t                    .enter()\n\t                    .append(\"circle\")\n\t                    .attr(\"class\", \"openTargets_d-d_overview_node selected\")\n\t                    .on(\"mouseout\", unselect)\n\t                    .on(\"mouseover\", select)\n\t                    .on(\"click\",\n\t                        tooltip\n\t                    );\n\t                points\n\t                    .transition()\n\t                    .duration(transitionSpeed)\n\t                    .attr(\"cx\", function(d) {\n\t                        return d.x;\n\t                    })\n\t                    .attr(\"cy\", function(d) {\n\t                        return d.y;\n\t                    })\n\t                    .attr(\"r\", config.pointSize)\n\t                    .attr(\"fill\", config.pointColor);\n\t\n\t                // Labels\n\t                graph.selectAll(\".openTargets_d-d_overview_label\").remove()\n\t                labels = graph.selectAll(\".openTargets_d-d_overview_label\")\n\t                    .data(displData, function(d) {\n\t                        return d.object + \"-\" + d.subject;\n\t                    });\n\t                labels\n\t                    .enter()\n\t                    .append(\"g\")\n\t                    .attr(\"class\", \"openTargets_d-d_overview_label selected\")\n\t                    // Create SVG container, and apply a transform such that the origin is the\n\t                    // center of the canvas. This way, we don't need to position arcs individually\n\t                    .attr(\"transform\", function(d) {\n\t                        var grades = d.angle * 360 / (2 * Math.PI);\n\t                        var x = graphSize / 2 * Math.cos(d.angle);\n\t                        var y = graphSize / 2 * Math.sin(d.angle);\n\t\n\t                        return \"translate(\" + x + \",\" + y + \")\";\n\t                    })\n\t                    .append(\"text\")\n\t                    .style(\"font-size\", config.fontSize)\n\t                    // .style(\"font-size\", \"10px\")\n\t                    .style(\"text-anchor\", function(d) {\n\t                        var grades = d.angle * 360 / (2 * Math.PI);\n\t                        if (grades % 360 > 90 && grades % 360 < 275) {\n\t                            return \"end\";\n\t                        }\n\t                        return \"start\";\n\t                    })\n\t                    .text(function(d) {\n\t                        return d.object;\n\t                    })\n\t                    .attr(\"transform\", function(d) {\n\t                        var grades = d.angle * 360 / (2 * Math.PI);\n\t                        if (grades % 360 > 90 && grades % 360 < 275) {\n\t                            return \"rotate(\" + ((grades % 360) + 180) + \")\";\n\t                        }\n\t                        return \"rotate(\" + (grades % 360) + \")\";\n\t                    })\n\t                    .on(\"mouseover\", select)\n\t                    .on(\"mouseout\", unselect)\n\t                    .on(\"click\", tooltip);\n\t\n\t                // drawData(\"diseases1\")\n\t\n\t            }\n\t\n\t            function updateBreadcrumbs(nodeArray) {\n\t\n\t                function breadcrumbPoints(d, i) {\n\t                    var points = [];\n\t                    points.push(\"0,0\");\n\t                    points.push(b.w + \",0\");\n\t                    points.push(b.w + b.t + \",\" + (b.h / 2));\n\t                    points.push(b.w + \",\" + b.h);\n\t                    points.push(\"0,\" + b.h);\n\t                    if (i > 0) { // Leftmost breadcrumb; don't include 6th vertex.\n\t                        points.push(b.t + \",\" + (b.h / 2));\n\t                    }\n\t                    return points.join(\" \");\n\t                }\n\t                d3.selectAll(\"#trail\").remove()\n\t\n\t                // Add the svg area.\n\t                var trail = d3.select(\"#sequence\").append(\"svg:svg\")\n\t                    // .attr(\"width\", 1200)\n\t                    .style(\"width\", config.size)\n\t                    .style(\"height\", 30)\n\t                    .attr(\"id\", \"trail\");\n\t\n\t                // Data join; key function combines name and depth (= position in sequence).\n\t                var g = d3.select(\"#trail\")\n\t                    .selectAll(\"g\")\n\t                    .data(nodeArray, function(d) {\n\t\n\t                        return d.name + d.depth;\n\t                    });\n\t\n\t                // Add breadcrumb and label for entering nodes.\n\t                var entering = g.enter().append(\"svg:g\");\n\t\n\t                function renderInitialState() {\n\t                    rings = d3.selectAll(\"#pieChart .ring\")\n\t                    var lines = d3.selectAll(\"#pieChart line\")\n\t                        // var labels=d3.selectAll(\"#pieChart text\")\n\t                    d3.selectAll(\"#pieChart text\").style('opacity', 0);\n\t                    var circles = d3.selectAll(\"#pieChart circle\")\n\t\n\t                    rings.transition()\n\t                        .duration(200)\n\t                        .style('opacity', 0);\n\t\n\t                    d3.selectAll(\"#pieChart line\").remove();\n\t                    // d3.selectAll(\"#pieChart text\").remove();\n\t                    d3.selectAll(\"#pieChart .openTargets_d-d_overview_label\").remove();\n\t                    d3.selectAll(\"#pieChart circle\").remove();\n\t\n\t                    d3.selectAll('#sequence g').remove()\n\t\n\t                    updateBreadcrumbs([{ name: 'Home' }]);\n\t                    setTimeout(function() {\n\t                        d3.selectAll(\"#pieChart .ring\").remove();\n\t\n\t                        path = path.data(pie(dataTypes))\n\t                            .attr(\"fill\", function(d, i) {\n\t                                return allColorsExp[(d.data.type)][0];\n\t                            });\n\t\n\t                        path.transition().duration(500).attrTween(\"d\", function(a) {\n\t                            var i = d3.interpolate(this._current, a) //,\n\t                                // k = d3.interpolate(arc.outerRadius()(), newRadius);\n\t                            this._current = i(0);\n\t                            return function(t) {\n\t                                return arc(i(t));\n\t                                // return arc.innerRadius(k(t) / 4).outerRadius(k(t))(i(t));\n\t                            };\n\t                        });\n\t                        d3.selectAll(\"#pieChart text\").transition().duration(600).style('opacity', 1);\n\t\n\t                    }, 500)\n\t\n\t                }\n\t\n\t                entering.append(\"svg:polygon\")\n\t                    .attr(\"points\", breadcrumbPoints)\n\t                    .style(\"fill\", function(d) {\n\t                        if (d.name == 'Home') {\n\t                            return '#DCDCDC';\n\t                        }\n\t                        return allColorsExp[d.name][1]\n\t                    })\n\t                    .on(\"click\", function(d, i) {\n\t                        if (this.parentNode.childNodes[1].innerHTML == \"Home\")\n\t                            renderInitialState();\n\t                    })\n\t\n\t                entering.append(\"svg:text\")\n\t                    .attr(\"x\", (b.w + b.t) / 2)\n\t                    .attr(\"y\", b.h / 2)\n\t                    .attr(\"dy\", \"0.35em\")\n\t                    .attr(\"text-anchor\", \"middle\")\n\t                    .text(function(d) {\n\t                        var name;\n\t\n\t                        if (d.name.length > 11) {\n\t                            name = d.name.substring(0, 10) + '...';\n\t                        } else {\n\t                            name = d.name;\n\t                        }\n\t                        return name;\n\t                        // return d.name;\n\t                    })\n\t                    .on(\"click\", function(d, i) {\n\t                        if (this.innerHTML == \"Home\")\n\t                            renderInitialState();\n\t                    });\n\t\n\t                // Set position for entering and updating nodes.\n\t                g.attr(\"transform\", function(d, i) {\n\t                    return \"translate(\" + i * (b.w + b.s) + \", 0)\";\n\t                });\n\t            }\n\t\n\t            function drawData(type) {\n\t                var displData = [];\n\t                for (i in data) {\n\t                    if (data[i].type == type) {\n\t                        displData.push(data[i])\n\t                    }\n\t                }\n\t\n\t                // Calculate coords for each data point\n\t                // var stepRad = 2 * Math.PI / displData.length; // grades\n\t                // var stepRad = 2 * Math.PI * 360 / displData.length; // grades\n\t                var stepRad = 3.5; // grades\n\t\n\t                var currAngle = 0;\n\t\n\t                for (var i = 0; i < displData.length; i++) {\n\t                    var p = displData[i];\n\t                    var scale = circleScales[~~((1 - p.value) / 0.2)];\n\t                    var coords = point(scale(1 - p.value), currAngle);\n\t                    p.x = coords[0];\n\t                    p.y = coords[1];\n\t                    p.angle = currAngle;\n\t                    currAngle += (2 * Math.PI / displData.length);\n\t                    // currAngle += (stepRad * 2 * Math.PI / 360);\n\t                }\n\t\n\t                // Links\n\t                links = graph.selectAll(\".openTargets_d-d_overview_link\")\n\t                    .data(displData, function(d) {\n\t                        return d.object + \"-\" + d.subject;\n\t                    });\n\t                links\n\t                    .enter()\n\t                    .append(\"line\")\n\t                    .style(\"stroke\", \"navy\")\n\t                    .attr(\"class\", \"openTargets_d-d_overview_link unselected\");\n\t                links\n\t                    .transition()\n\t                    .duration(transitionSpeed)\n\t                    .attr(\"x1\", function(d) {\n\t                        return d.x;\n\t                    })\n\t                    .attr(\"y1\", function(d) {\n\t                        return d.y;\n\t                    })\n\t                    .attr(\"x2\", function(d) {\n\t                        return radius * Math.cos(d.angle);\n\t                    })\n\t                    .attr(\"y2\", function(d) {\n\t                        return radius * Math.sin(d.angle);\n\t                    });\n\t\n\t                // Nodes\n\t                points = graph.selectAll(\".openTargets_d-d_overview_node\")\n\t                    .data(displData, function(d) {\n\t                        return d.object + \"-\" + d.subject;\n\t                    });\n\t                points\n\t                    .enter()\n\t                    .append(\"circle\")\n\t                    .attr(\"class\", \"openTargets_d-d_overview_node selected\")\n\t                    .on(\"mouseout\", unselect)\n\t                    .on(\"mouseover\", select)\n\t                    .on(\"click\", tooltip);\n\t                // .on(\"click\", function(){ tooltip(this,dataTypes)});\n\t                points\n\t                    .transition()\n\t                    .duration(transitionSpeed)\n\t                    .attr(\"cx\", function(d) {\n\t                        return d.x;\n\t                    })\n\t                    .attr(\"cy\", function(d) {\n\t                        return d.y;\n\t                    })\n\t                    .attr(\"r\", config.pointSize)\n\t                    .attr(\"fill\", config.pointColor);\n\t\n\t                // Labels\n\t                graph.selectAll(\".openTargets_d-d_overview_label\").remove()\n\t                labels = graph.selectAll(\".openTargets_d-d_overview_label\")\n\t                    .data(displData, function(d) {\n\t                        return d.object + \"-\" + d.subject;\n\t                    });\n\t                labels\n\t                    .enter()\n\t                    .append(\"g\")\n\t                    .attr(\"class\", \"openTargets_d-d_overview_label selected\")\n\t                    // Create SVG container, and apply a transform such that the origin is the\n\t                    // center of the canvas. This way, we don't need to position arcs individually\n\t                    .attr(\"transform\", function(d) {\n\t                        var grades = d.angle * 360 / (2 * Math.PI);\n\t                        var x = graphSize / 2 * Math.cos(d.angle);\n\t                        var y = graphSize / 2 * Math.sin(d.angle);\n\t\n\t                        return \"translate(\" + x + \",\" + y + \")\";\n\t                    })\n\t                    .append(\"text\")\n\t                    .style(\"font-size\", config.fontSize)\n\t                    // .style(\"font-size\", \"10px\")\n\t                    .style(\"text-anchor\", function(d) {\n\t                        var grades = d.angle * 360 / (2 * Math.PI);\n\t                        if (grades % 360 > 90 && grades % 360 < 275) {\n\t                            return \"end\";\n\t                        }\n\t                        return \"start\";\n\t                    })\n\t                    .text(function(d) {\n\t                        return d.object;\n\t                    })\n\t                    .attr(\"transform\", function(d) {\n\t                        var grades = d.angle * 360 / (2 * Math.PI);\n\t                        if (grades % 360 > 90 && grades % 360 < 275) {\n\t                            return \"rotate(\" + ((grades % 360) + 180) + \")\";\n\t                        }\n\t                        return \"rotate(\" + (grades % 360) + \")\";\n\t                    })\n\t                    .on(\"mouseover\", select)\n\t                    .on(\"mouseout\", unselect)\n\t                    .on(\"click\", tooltip);\n\t            }\n\t        };\n\t\n\t        if (typeof config.data == \"string\") {\n\t            d3.json(config.data, function(error, resp) {\n\t                var data = resp.data;\n\t                render.update(data, updateScales(radius), 'pieChart');\n\t            });\n\t        } else {\n\t\n\t            render.update(config.data, updateScales(radius), 'pieChart');\n\t        }\n\t\n\t\n\t\n\t    };\n\t\n\t    function updateScales(radius, selected) {\n\t        var circleScales = [\n\t            d3.scale.linear().domain([0.0, 0.2]).range([0, 1 * radius / 5]).clamp(true),\n\t            d3.scale.linear().domain([0.2, 0.4]).range([1 * radius / 5, 2 * radius / 5]).clamp(true),\n\t            d3.scale.linear().domain([0.4, 0.6]).range([2 * radius / 5, 3 * radius / 5]).clamp(true),\n\t            d3.scale.linear().domain([0.6, 0.8]).range([3 * radius / 5, 4 * radius / 5]).clamp(true),\n\t            d3.scale.linear().domain([0.8, 1.0]).range([4 * radius / 5, 5 * radius / 5]).clamp(true),\n\t        ];\n\t\n\t        if (!selected) {\n\t            return circleScales;\n\t        }\n\t\n\t        // We are focusing on a scale\n\t        var newScales = [];\n\t        var currRad = 0;\n\t        //if it's the selected scale put it to the length of radius else put it to 0 length\n\t        for (var i = 0; i < circleScales.length; i++) {\n\t            var scale = circleScales[i];\n\t            if (selected.domain()[0] == scale.domain()[0]) {\n\t                scale.range([currRad, radius]);\n\t                currRad = radius;\n\t            } else {\n\t                scale.range([currRad, currRad]);\n\t            }\n\t            newScales.push(scale);\n\t        }\n\t        return newScales;\n\t    }\n\t\n\t    function tooltip(d) {\n\t\n\t        var obj = {};\n\t        obj.header = d.object;\n\t        obj.rows = [];\n\t        obj.rows.push({\n\t            label: \"type\",\n\t            value: d.type\n\t        });\n\t        obj.rows.push({\n\t            label: \"Value:\",\n\t            value: String(d.value * 100).slice(0, 5)\n\t        });\n\t        tntTooltip.table()\n\t            .width(180)\n\t            .show_closer(true)\n\t            .call(this, obj);\n\t    }\n\t\n\t    // private methods\n\t    function select(d) {\n\t        var selectNode = this;\n\t        links\n\t            .each(function(l) {\n\t                var checkLink = this;\n\t                if (d.object === l.object) {\n\t                    d3.select(checkLink)\n\t                        .classed(\"unselected\", false)\n\t                        .classed(\"selected\", true);\n\t                } else {\n\t                    d3.select(checkLink)\n\t                        .classed(\"selected\", false)\n\t                        .classed(\"unselected\", true);\n\t                }\n\t            });\n\t        labels\n\t            .each(function(l) {\n\t                var checkLabel = this;\n\t                if (d.object === l.object) {\n\t                    d3.select(checkLabel)\n\t                        .classed(\"unselected\", false)\n\t                        .classed(\"selected\", true);\n\t                } else {\n\t                    d3.select(checkLabel)\n\t                        .classed(\"selected\", false)\n\t                        .classed(\"unselected\", true);\n\t                }\n\t            });\n\t        points\n\t            .each(function(p) {\n\t                var checkNode = this;\n\t                if (p.object === d.object) {\n\t                    d3.select(checkNode)\n\t                        .classed(\"unselected\", false)\n\t                        .classed(\"selected\", true);\n\t                } else {\n\t                    d3.select(checkNode)\n\t                        .classed(\"selected\", false)\n\t                        .classed(\"unselected\", true);\n\t                }\n\t            });\n\t    }\n\t\n\t    function unselect() {\n\t        links\n\t            .each(function() {\n\t                d3.select(this)\n\t                    .classed(\"selected\", false)\n\t                    .classed(\"unselected\", true);\n\t            });\n\t        labels\n\t            .each(function() {\n\t                d3.select(this)\n\t                    .classed(\"selected\", true)\n\t                    .classed(\"unselected\", false);\n\t            });\n\t        points\n\t            .each(function() {\n\t                d3.select(this)\n\t                    .classed(\"selected\", true)\n\t                    .classed(\"unselected\", false);\n\t            });\n\t    }\n\t\n\t    function point(l, r) {\n\t        var x = l * Math.cos(r);\n\t        var y = l * Math.sin(r);\n\t        return [x, y];\n\t    }\n\t\n\t    // Public methods\n\t\n\t    render.read = function(data) {\n\t        // if (typeof data == 'object') {\n\t            if (!arguments.length) {\n\t                return config.data;\n\t            }\n\t            config.data = data;\n\t            return this;\n\t        // }\n\t    }\n\t\n\t    render.size = function(size) {\n\t        if (!arguments.length) {\n\t            return config.size;\n\t        }\n\t        config.size = size;\n\t        return this;\n\t    };\n\t\n\t    render.setPieColors = function(color) {\n\t        if (!arguments.length) {\n\t            return config.allColorsExp;\n\t        }\n\t        config.allColorsExp = color;\n\t        return this;\n\t    };\n\t\n\t    render.setFontSize = function(size) {\n\t        if (!arguments.length) {\n\t            return config.fontSize;\n\t        }\n\t        if(typeof size== \"number\"){\n\t            size = String(size+'px');\n\t        }\n\t        config.fontSize=size;\n\t        return this;\n\t    };\n\t\n\t    render.setPointSize = function(size) {\n\t        if (!arguments.length) {\n\t            return config.pointSize;\n\t        }\n\t        config.pointSize = size;\n\t        return this;\n\t    };\n\t\n\t    render.setPointColor = function(color) {\n\t        if (!arguments.length) {\n\t            return config.pointColor;\n\t        }\n\t        config.pointColor = color;\n\t        return this;\n\t    };\n\t\n\t    render.filter_type = function(type) {\n\t        points\n\t            .style(\"display\", function(d) {\n\t                if (!type) {\n\t                    return \"block\";\n\t                }\n\t                if (d.type !== type) {\n\t                    return \"none\";\n\t                }\n\t                return \"block\";\n\t            });\n\t    };\n\t    return render;\n\t};\n\t\n\tmodule.exports = exports = vis;\n\n\n/***/ })\n/******/ ])});;\n\n\n// WEBPACK FOOTER //\n// biojs_visPieChart.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a4e6dc6117b1909a4d95","define( [ 'plugins/biojs/visPieChart/node_modules/visualize_piechart/src/vis' ], function(Vis) {\n    return Backbone.Model.extend({\n        initialize: function( options ) {\n            var chart    = options.chart;\n            var dataset  = options.dataset;\n            var settings = options.chart.settings;\n            console.log(Vis);\n            //Example Data Format = [\n\n                   // {\n                   //  \"direction\": null,\n                   //  \"object\": \"disease1\",\n                   //  \"type\": \"diseases1\",\n                   //  \"value\": 0.7139138126389065,\n                   //   \"subject\": \"EFO_0004591\"\n                   //},{\n                   //    \"direction\": null,\n                   //     \"object\": \"disease1\",\n                   //     \"type\": \"diseases3\",\n                   //    \"value\": 0.7139138126389065,\n                   //      \"subject\": \"EFO_0004591\"\n                //    }\n            //  ]\n\n            var v = Vis()\n                // .size(500)//250-1000\n                // .size(2000)\n                // .size(250)\n                // .size(450)\n                // .setPointSize(5)\n                // .setPieColors([\"#ff0000\"])\n                // .setPointColor('#fff')\n                // .setPointColor('rgb(200,132,200)')\n                // .setFontSize('10px')\n                //.read(\"http://partizanos.github.io/VizTargetDiseases/data/sample.json\");\n                // .read(data);\n                .read(dataset.download_url)\n\n\n            \n            v(document.getElementById(options.targets[ 0 ] + \"\"));\n            chart.state( 'ok', 'Chart drawn.' );\n            options.process.resolve();\n\n            // d3.select(\"#changeType\")\n            //     .on(\"change\", function () {\n            //         console.log(this.value);\n            //         v.filter_type(this.value);\n            //     })\n\n            // setTimeout(function () {\n            //     v.filter_type(\"shared-phenotype\");\n            // }, 1000);\n            //\n            // setTimeout(function () {\n            //     v.filter_type(null);\n            // }, 2000);\n\n        }\n    });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/plugins/visualizations/charts/static/repository/visualizations/biojs/visPieChart/wrapper.js\n// module id = 0\n// module chunks = 1","module.exports = require(\"./src/api.js\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/plugins/visualizations/charts/static/repository/plugins/biojs/visPieChart/~/tnt.api/index.js\n// module id = 10\n// module chunks = 1","var api = function (who) {\n\n    var _methods = function () {\n\tvar m = [];\n\n\tm.add_batch = function (obj) {\n\t    m.unshift(obj);\n\t};\n\n\tm.update = function (method, value) {\n\t    for (var i=0; i<m.length; i++) {\n\t\tfor (var p in m[i]) {\n\t\t    if (p === method) {\n\t\t\tm[i][p] = value;\n\t\t\treturn true;\n\t\t    }\n\t\t}\n\t    }\n\t    return false;\n\t};\n\n\tm.add = function (method, value) {\n\t    if (m.update (method, value) ) {\n\t    } else {\n\t\tvar reg = {};\n\t\treg[method] = value;\n\t\tm.add_batch (reg);\n\t    }\n\t};\n\n\tm.get = function (method) {\n\t    for (var i=0; i<m.length; i++) {\n\t\tfor (var p in m[i]) {\n\t\t    if (p === method) {\n\t\t\treturn m[i][p];\n\t\t    }\n\t\t}\n\t    }\n\t};\n\n\treturn m;\n    };\n\n    var methods    = _methods();\n    var api = function () {};\n\n    api.check = function (method, check, msg) {\n\tif (method instanceof Array) {\n\t    for (var i=0; i<method.length; i++) {\n\t\tapi.check(method[i], check, msg);\n\t    }\n\t    return;\n\t}\n\n\tif (typeof (method) === 'function') {\n\t    method.check(check, msg);\n\t} else {\n\t    who[method].check(check, msg);\n\t}\n\treturn api;\n    };\n\n    api.transform = function (method, cbak) {\n\tif (method instanceof Array) {\n\t    for (var i=0; i<method.length; i++) {\n\t\tapi.transform (method[i], cbak);\n\t    }\n\t    return;\n\t}\n\n\tif (typeof (method) === 'function') {\n\t    method.transform (cbak);\n\t} else {\n\t    who[method].transform(cbak);\n\t}\n\treturn api;\n    };\n\n    var attach_method = function (method, opts) {\n\tvar checks = [];\n\tvar transforms = [];\n\n\tvar getter = opts.on_getter || function () {\n\t    return methods.get(method);\n\t};\n\n\tvar setter = opts.on_setter || function (x) {\n\t    for (var i=0; i<transforms.length; i++) {\n\t\tx = transforms[i](x);\n\t    }\n\n\t    for (var j=0; j<checks.length; j++) {\n\t\tif (!checks[j].check(x)) {\n\t\t    var msg = checks[j].msg || \n\t\t\t(\"Value \" + x + \" doesn't seem to be valid for this method\");\n\t\t    throw (msg);\n\t\t}\n\t    }\n\t    methods.add(method, x);\n\t};\n\n\tvar new_method = function (new_val) {\n\t    if (!arguments.length) {\n\t\treturn getter();\n\t    }\n\t    setter(new_val);\n\t    return who; // Return this?\n\t};\n\tnew_method.check = function (cbak, msg) {\n\t    if (!arguments.length) {\n\t\treturn checks;\n\t    }\n\t    checks.push ({check : cbak,\n\t\t\t  msg   : msg});\n\t    return this;\n\t};\n\tnew_method.transform = function (cbak) {\n\t    if (!arguments.length) {\n\t\treturn transforms;\n\t    }\n\t    transforms.push(cbak);\n\t    return this;\n\t};\n\n\twho[method] = new_method;\n    };\n\n    var getset = function (param, opts) {\n\tif (typeof (param) === 'object') {\n\t    methods.add_batch (param);\n\t    for (var p in param) {\n\t\tattach_method (p, opts);\n\t    }\n\t} else {\n\t    methods.add (param, opts.default_value);\n\t    attach_method (param, opts);\n\t}\n    };\n\n    api.getset = function (param, def) {\n\tgetset(param, {default_value : def});\n\n\treturn api;\n    };\n\n    api.get = function (param, def) {\n\tvar on_setter = function () {\n\t    throw (\"Method defined only as a getter (you are trying to use it as a setter\");\n\t};\n\n\tgetset(param, {default_value : def,\n\t\t       on_setter : on_setter}\n\t      );\n\n\treturn api;\n    };\n\n    api.set = function (param, def) {\n\tvar on_getter = function () {\n\t    throw (\"Method defined only as a setter (you are trying to use it as a getter\");\n\t};\n\n\tgetset(param, {default_value : def,\n\t\t       on_getter : on_getter}\n\t      );\n\n\treturn api;\n    };\n\n    api.method = function (name, cbak) {\n\tif (typeof (name) === 'object') {\n\t    for (var p in name) {\n\t\twho[p] = name[p];\n\t    }\n\t} else {\n\t    who[name] = cbak;\n\t}\n\treturn api;\n    };\n\n    return api;\n    \n};\n\nmodule.exports = exports = api;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/plugins/visualizations/charts/static/repository/plugins/biojs/visPieChart/~/tnt.api/src/api.js\n// module id = 11\n// module chunks = 1","module.exports = tooltip = require(\"./src/tooltip.js\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/plugins/visualizations/charts/static/repository/plugins/biojs/visPieChart/~/tnt.tooltip/index.js\n// module id = 12\n// module chunks = 1","var apijs = require(\"tnt.api\");\n\nvar tooltip = function () {\n    \"use strict\";\n\n    var drag = d3.behavior.drag();\n    var tooltip_div;\n\n    var conf = {\n        position : \"right\",\n        allow_drag : true,\n        show_closer : true,\n        fill : function () { throw \"fill is not defined in the base object\"; },\n        width : 180,\n        id : 1\n    };\n\n    var t = function (data, event) {\n        drag\n            .origin(function(){\n                return {\n                    x : parseInt(d3.select(this).style(\"left\")),\n                    y : parseInt(d3.select(this).style(\"top\"))\n                };\n            })\n            .on(\"drag\", function() {\n                if (conf.allow_drag) {\n                    d3.select(this)\n                        .style(\"left\", d3.event.x + \"px\")\n                        .style(\"top\", d3.event.y + \"px\");\n                }\n            });\n\n        // TODO: Why do we need the div element?\n        // It looks like if we anchor the tooltip in the \"body\"\n        // The tooltip is not located in the right place (appears at the bottom)\n        // See clients/tooltips_test.html for an example\n        var containerElem = selectAncestor (this, \"div\");\n        if (containerElem === undefined) {\n            // We require a div element at some point to anchor the tooltip\n            return;\n        }\n\n        tooltip_div = d3.select(containerElem)\n            .append(\"div\")\n            .attr(\"class\", \"tnt_tooltip\")\n            .classed(\"tnt_tooltip_active\", true)  // TODO: Is this needed/used???\n            .call(drag);\n\n        // prev tooltips with the same header\n        d3.select(\"#tnt_tooltip_\" + conf.id).remove();\n\n        if ((d3.event === null) && (event)) {\n            d3.event = event;\n        }\n        var d3mouse = d3.mouse(containerElem);\n        d3.event = null;\n\n        var xoffset = 0;\n        if (conf.position === \"left\") {\n            xoffset = conf.width;\n        }\n\n        tooltip_div.attr(\"id\", \"tnt_tooltip_\" + conf.id);\n\n        // We place the tooltip\n        tooltip_div\n            .style(\"left\", (d3mouse[0] - xoffset) + \"px\")\n            .style(\"top\", (d3mouse[1]) + \"px\");\n\n        // Close\n        if (conf.show_closer) {\n            tooltip_div\n                .append(\"div\")\n                .attr(\"class\", \"tnt_tooltip_closer\")\n                .on (\"click\", function () {\n                    t.close();\n                });\n        }\n\n        conf.fill.call(tooltip_div.node(), data);\n\n        // return this here?\n        return t;\n    };\n\n    // gets the first ancestor of elem having tagname \"type\"\n    // example : var mydiv = selectAncestor(myelem, \"div\");\n    function selectAncestor (elem, type) {\n        type = type.toLowerCase();\n        if (elem.parentNode === null) {\n            console.log(\"No more parents\");\n            return undefined;\n        }\n        var tagName = elem.parentNode.tagName;\n\n        if ((tagName !== undefined) && (tagName.toLowerCase() === type)) {\n            return elem.parentNode;\n        } else {\n            return selectAncestor (elem.parentNode, type);\n        }\n    }\n\n    var api = apijs(t)\n        .getset(conf);\n\n    api.check('position', function (val) {\n        return (val === 'left') || (val === 'right');\n    }, \"Only 'left' or 'right' values are allowed for position\");\n\n    api.method('close', function () {\n        if (tooltip_div) {\n            tooltip_div.remove();\n        }\n    });\n\n    return t;\n};\n\ntooltip.list = function () {\n    // list tooltip is based on general tooltips\n    var t = tooltip();\n    var width = 180;\n\n    t.fill (function (obj) {\n        var tooltip_div = d3.select(this);\n        var obj_info_list = tooltip_div\n            .append(\"table\")\n            .attr(\"class\", \"tnt_zmenu\")\n            .attr(\"border\", \"solid\")\n            .style(\"width\", t.width() + \"px\");\n\n        // Tooltip header\n        if (obj.header) {\n            obj_info_list\n                .append(\"tr\")\n                .attr(\"class\", \"tnt_zmenu_header\")\n                .append(\"th\")\n                .text(obj.header);\n        }\n\n        // Tooltip rows\n        var table_rows = obj_info_list.selectAll(\".tnt_zmenu_row\")\n            .data(obj.rows)\n            .enter()\n            .append(\"tr\")\n            .attr(\"class\", \"tnt_zmenu_row\");\n\n        table_rows\n            .append(\"td\")\n            .style(\"text-align\", \"center\")\n            .html(function(d,i) {\n                return obj.rows[i].value;\n            })\n            .each(function (d) {\n                if (d.link === undefined) {\n                    return;\n                }\n                d3.select(this)\n                    .classed(\"link\", 1)\n                    .on('click', function (d) {\n                        d.link(d.obj);\n                        t.close.call(this);\n                    });\n            });\n    });\n    return t;\n};\n\ntooltip.table = function () {\n    // table tooltips are based on general tooltips\n    var t = tooltip();\n\n    var width = 180;\n\n    t.fill (function (obj) {\n        var tooltip_div = d3.select(this);\n\n        var obj_info_table = tooltip_div\n            .append(\"table\")\n            .attr(\"class\", \"tnt_zmenu\")\n            .attr(\"border\", \"solid\")\n            .style(\"width\", t.width() + \"px\");\n\n        // Tooltip header\n        if (obj.header) {\n            obj_info_table\n                .append(\"tr\")\n                .attr(\"class\", \"tnt_zmenu_header\")\n                .append(\"th\")\n                .attr(\"colspan\", 2)\n                .text(obj.header);\n        }\n\n        // Tooltip rows\n        var table_rows = obj_info_table.selectAll(\".tnt_zmenu_row\")\n            .data(obj.rows)\n            .enter()\n            .append(\"tr\")\n            .attr(\"class\", \"tnt_zmenu_row\");\n\n        table_rows\n            .append(\"th\")\n            .attr(\"colspan\", function (d, i) {\n                if (d.value === \"\") {\n                    return 2;\n                }\n                return 1;\n            })\n            .attr(\"class\", function (d) {\n                if (d.value === \"\") {\n                    return \"tnt_zmenu_inner_header\";\n                }\n                return \"tnt_zmenu_cell\";\n            })\n            .html(function(d,i) {\n                return obj.rows[i].label;\n            });\n\n        table_rows\n            .append(\"td\")\n            .html(function(d,i) {\n                if (typeof obj.rows[i].value === 'function') {\n                    obj.rows[i].value.call(this, d);\n                } else {\n                    return obj.rows[i].value;\n                }\n            })\n            .each(function (d) {\n                if (d.value === \"\") {\n                    d3.select(this).remove();\n                }\n            })\n            .each(function (d) {\n                if (d.link === undefined) {\n                    return;\n                }\n                d3.select(this)\n                .classed(\"link\", 1)\n                .on('click', function (d) {\n                    d.link(d.obj);\n                    t.close.call(this);\n                });\n            });\n    });\n\n    return t;\n};\n\ntooltip.plain = function () {\n    // plain tooltips are based on general tooltips\n    var t = tooltip();\n\n    t.fill (function (obj) {\n        var tooltip_div = d3.select(this);\n\n        var obj_info_table = tooltip_div\n            .append(\"table\")\n            .attr(\"class\", \"tnt_zmenu\")\n            .attr(\"border\", \"solid\")\n            .style(\"width\", t.width() + \"px\");\n\n        if (obj.header) {\n            obj_info_table\n                .append(\"tr\")\n                .attr(\"class\", \"tnt_zmenu_header\")\n                .append(\"th\")\n                .text(obj.header);\n        }\n\n        if (obj.body) {\n            obj_info_table\n                .append(\"tr\")\n                .attr(\"class\", \"tnt_zmenu_row\")\n                .append(\"td\")\n                .style(\"text-align\", \"center\")\n                .html(obj.body);\n        }\n    });\n\n    return t;\n};\n\nmodule.exports = exports = tooltip;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/plugins/visualizations/charts/static/repository/plugins/biojs/visPieChart/~/tnt.tooltip/src/tooltip.js\n// module id = 13\n// module chunks = 1","// var cttvApi = require('cttv.api');\nvar tntTooltip = require('tnt.tooltip');\n// var d3 = require('d3');\n// var flowerView = require(\"cttv.flowerView\");\n//add necessary css from js so that the user doesn have to explicitely include it\n//if he includes it css is not imported \nvar cssId = 'myCss'; \nif (!document.getElementById(cssId))\n{\n    var head  = document.getElementsByTagName('head')[0];\n    var link  = document.createElement('link');\n    link.id   = cssId;\n    link.rel  = 'stylesheet';\n    link.type = 'text/css';\n    link.href = \"../build/viz_diseases.css\";\n    link.media = 'all';\n    head.appendChild(link);\n}\n\n\n\nvar vis = function() {\n    \"use strict\";\n    var config = {\n        allColorsExp:[],\n        // allColorsExp:[],\n        fontSize:\"10px\",\n        pointSize:3.5,\n        pointColor:\"navy\",\n        size: 700,\n        filter: null,\n        data: [\n\n            {\n                \"direction\": null,\n                \"object\": \"disease1\",\n                \"type\": \"diseases1\",\n                \"value\": 0.7139138126389065,\n                \"subject\": \"EFO_0004591\"\n            }, {\n                \"direction\": null,\n                \"object\": \"disease1\",\n                \"type\": \"diseases2\",\n                \"value\": 0.7139138126389065,\n                \"subject\": \"EFO_0004591\"\n            }, {\n                \"direction\": null,\n                \"object\": \"disease1\",\n                \"type\": \"diseases3\",\n                \"value\": 0.7139138126389065,\n                \"subject\": \"EFO_0004591\"\n            }\n        ]\n    };\n    var graph;\n\n    var labelSize = 100;\n    var transitionSpeed = 1000;\n    var points, labels, links;\n    // var api = cttvApi()\n    //     .prefix(\"http://test.targetvalidation.org:8899/api/\")\n    //     .appname(\"cttv-web-app\")\n    //     .secret(\"2J23T20O31UyepRj7754pEA2osMOYfFK\");\n    var dataTypes;\n    var render = function(div) {\n        var graphSize = config.size - (labelSize * 2);\n        var radius = graphSize / 2;\n\n\n        d3.select(div)\n            .append(\"div\")\n            .attr(\"id\", \"sequence\")\n            .attr(\"width\", config.size)\n            .attr(\"height\", 30)\n\n        var svg = d3.select(div)\n            .append(\"svg\")\n            .attr(\"width\", config.size)\n            .attr(\"height\", config.size)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + (radius + labelSize) + \",\" + (radius + labelSize) + \")\")\n            .attr(\"id\", \"pieChart\")\n\n        var circleColorScale = d3.scale.linear()\n            .domain([0, 1])\n            .range([d3.rgb(0, 82, 163), d3.rgb(182, 221, 252)]);\n\n        // d3.json(\"../data/sample.json\", function(error, resp) {\n        //     var data = resp.data;\n        //     render.update(data, updateScales(radius), 'pieChart');\n        // });\n        // d3.json(\"../data/sample.json\", function(error, resp) {\n        //     var data = resp.data;\n        // });\n\n        var b = {\n            w: 100,\n            h: 30,\n            s: 3,\n            t: 10\n        };\n\n        render.update = function(data, circleScales, graphicMode, vizType) {\n\n            if (graphicMode == 'pieChart') {\n                d3.selectAll(\"#sequence svg\").remove();\n                d3.selectAll(\"g text\").remove();\n                d3.selectAll(\"line\").remove();\n                d3.selectAll(\"circle\").remove();\n                updateBreadcrumbs([{ name: 'Home' }]);\n\n                function createComparator(property) {\n                    return function(a, b) {\n                        if (a[property] > b[property]) return 1\n                        if (a[property] < b[property]) return -1\n                        return 0\n                    };\n                }\n\n                data.sort(createComparator('type'))\n\n                var types = {}\n                for (var i = 0; i < data.length; i++) {\n                    if (types[data[i].type] == undefined)\n                        types[data[i].type] = []\n                    types[data[i].type].push(data[i])\n                }\n                // portion of circle per data type\n                dataTypes = [];\n                for (i in types) {\n                    dataTypes.push({\n                        \"type\": i,\n                        \"population\": types[i].length / data.length,\n                        \"count\": types[i].length\n                    })\n                }\n                dataTypes.sort(function compare(a, b) {\n                    if (a.population > b.population) return -1;\n                    if (a.population < b.population) return 1;\n                    return 0;\n                })\n\n                //Create colors mapping to data Types\n                var colorsExpr = [];\n                for (i = 0; i < 10; i++) {\n                    colorsExpr.push([d3.scale.category20().range()[i * 2], d3.scale.category20().range()[i * 2 + 1]])\n                }\n\n\n                function shadeColor2(color, percent) {   \n                    var f=parseInt(color.slice(1),16),t=percent<0?0:255,p=percent<0?percent*-1:percent,R=f>>16,G=f>>8&0x00FF,B=f&0x0000FF;\n                    return \"#\"+(0x1000000+(Math.round((t-R)*p)+R)*0x10000+(Math.round((t-G)*p)+G)*0x100+(Math.round((t-B)*p)+B)).toString(16).slice(1);\n                }\n                // config.allColorsExp;\n                var allColorsExp = {};\n                if(config.allColorsExp.length!=0){\n                    for(i=0; i<config.allColorsExp.length; i++){\n                        allColorsExp[dataTypes[i].type] = [\n                        config.allColorsExp[i],\n                        shadeColor2(config.allColorsExp[i], 0.8)\n                        // d3.scale.category20().range()[i % 10 * 2 + 1],\n                        // d3.scale.category20().range()[i % 10 * 2]\n                    ]\n                    }\n                }\n                for (i = config.allColorsExp.length; i < dataTypes.length; i++) {\n                    allColorsExp[dataTypes[i].type] = [\n                        d3.scale.category20().range()[i % 10 * 2],\n                        d3.scale.category20().range()[i % 10 * 2 + 1]\n                        // d3.scale.category20().range()[i % 10 * 2 + 1],\n                        // d3.scale.category20().range()[i % 10 * 2]\n                    ]\n                }\n\n                function circleColorScaleExp(type) {\n                    return d3.scale.linear()\n                        .domain([0, 1])\n                        .range(allColorsExp[type]);\n                }\n\n                function giveArcColor(type) {\n                    return d3.scale.linear()\n                        .domain([0, 105])\n                        .range([allColorsExp[type][0], allColorsExp[type][1]])\n                }\n                //create arcs equivalent of rings\n                var arcs = [];\n                for (var i = 0; i < 1; i++) {\n                    var arc = d3.svg.arc()\n                        .outerRadius(radius - (i * radius))\n                        .innerRadius(radius - (i * radius) - radius);\n\n                    arcs.push(arc);\n                }\n\n                var labelArc = d3.svg.arc()\n                    .outerRadius(radius - 40)\n                    .innerRadius(radius - 40);\n\n                var pie = d3.layout.pie()\n                    .sort(null)\n                    .value(function(d) {\n                        return d.population;\n                    });\n\n                var arc = d3.svg.arc()\n                    .outerRadius(radius)\n                    .innerRadius(0)\n\n                var path = svg\n                    .selectAll(\"path\")\n                    .data(pie(dataTypes))\n                    .enter().append(\"path\")\n                    //Give color based on datatype\n                    .attr(\"fill\", function(d, i) {\n                        return allColorsExp[d.data.type][0];\n                    })\n                    .attr(\"d\", arc)\n                    .each(function(d) { this._current = d; }) // store the initial values\n                    .on(\"click\", function(d) {\n                        d3.selectAll(\"#pieChart text\").style('opacity', 0);\n\n                        var tempDataTypes = JSON.parse(JSON.stringify(dataTypes));\n                        for (var i in tempDataTypes) {\n                            if (tempDataTypes[i].type == d.data.type)\n                                tempDataTypes[i].population = 1;\n                            else {\n                                tempDataTypes[i].population = 0;\n                            }\n                        }\n\n                        path = path.data(pie(tempDataTypes))\n                            .attr(\"fill\", function(d, i) {\n                                return allColorsExp[(d.data.type)][0];\n                            });\n\n                        path.transition().duration(500).attrTween(\"d\", function(a) {\n                            var i = d3.interpolate(this._current, a) //,\n                                // k = d3.interpolate(arc.outerRadius()(), newRadius);\n                            this._current = i(0);\n                            return function(t) {\n                                return arc(i(t));\n                                // return arc.innerRadius(k(t) / 4).outerRadius(k(t))(i(t));\n                            };\n                        });\n                        //////////////////////////\n                        setTimeout(\n                            function() {\n                                var selDataType = d.data.type;\n                                updateBreadcrumbs([{ name: 'Home', depth: 0 }, { name: selDataType, depth: 1 }]);\n\n                                // d3.selectAll(\"g path\").remove();\n                                //////////\n                                graph = d3.select(\"#pieChart\")\n                                    //////////////\n                                var rings = graph\n                                    .selectAll(\".ring\")\n                                    .data(circleScales);\n\n\n                                rings\n                                    .enter()\n                                    .append(\"path\")\n                                    /////////\n                                    .style('opacity', 0)\n                                    /////\n                                    .attr(\"class\", \"ring\")\n                                    .attr(\"fill\", function(d) {\n                                        return circleColorScaleExp(selDataType)(d.domain()[0]);\n                                    })\n                                    .attr(\"d\", function(d) {\n                                        var arc = d3.svg.arc()\n                                            .innerRadius(d.range()[0])\n                                            .outerRadius(d.range()[1])\n                                            .startAngle(0)\n                                            .endAngle(2 * Math.PI);\n                                        return arc(d);\n                                    })\n                                    .attr(\"id\", function(d, i) {\n                                        return \"ring\" + i;\n                                    })\n\n\n                                rings.transition()\n                                    .delay(function(d, i) {\n                                        return i * 50;\n                                    })\n                                    .duration(100)\n                                    .style('opacity', 1);\n\n                                rings\n                                    .on(\"click\", function(d, i) {\n                                        // One ring has been selected\n                                        var selected = d3.select(this);\n                                        if (selected.classed(\"zoomed\")) {\n                                            selected.classed(\"zoomed\", false);\n\n                                            render.update(data, updateScales(radius), 'rings', selDataType);\n                                        } else {\n                                            selected.classed(\"zoomed\", true);\n\n                                            render.update(data, updateScales(radius, d), 'rings', selDataType);\n                                        }\n                                    });\n\n                                drawData(selDataType)\n\n                                //on background change bring points to foreground\n                                d3.selection.prototype.moveToFront = function() {\n                                    return this.each(function() {\n                                        this.parentNode.appendChild(this);\n                                    });\n                                };\n                                d3.selectAll('circle').moveToFront()\n                                d3.selectAll('line').moveToFront()\n                            }, 600);\n                    });\n\n                path.each(function(d) {\n                    svg.append(\"text\")\n                        .attr(\"fill\", \"#fff\")\n                        .style(\"margin\", \"3px\")\n                        .attr(\"transform\", function() {\n                            // debugger;\n                            var grades = ((d.startAngle + d.endAngle) / 2) * 180 / Math.PI;\n                            if (grades > 0 && grades < 180) {\n                                var x = (-200 + graphSize) / 2 * Math.cos(((d.startAngle + d.endAngle) / 2) - Math.PI / 2);\n                                var y = (-200 + graphSize) / 2 * Math.sin(((d.startAngle + d.endAngle) / 2) - Math.PI / 2);\n                                return \"translate(\" + x + \",\" + y + \") rotate(\" + (grades - 90) + \")\";\n                            } else {\n                                var x = (-25 + graphSize) / 2 * Math.cos(((d.startAngle + d.endAngle) / 2) - Math.PI / 2);\n                                var y = (-25 + graphSize) / 2 * Math.sin(((d.startAngle + d.endAngle) / 2) - Math.PI / 2);\n                                return \"translate(\" + x + \",\" + y + \") rotate(\" + (grades - 90 + 180) + \")\";\n                            }\n                        })\n                        // .style(\"font-size\", \"12px\")\n                        .style(\"font-size\", config.fontSize)\n                        .attr(\"dy\", \".35em\")\n                        .text(function() {\n                            return d.data.type + \" \" + d.data.count;\n                        });\n                })\n\n                function type(d) {\n                    d.population = +d.population;\n                    return d;\n                }\n\n            } else if (graphicMode == 'rings') {\n\n                var rings = graph\n                    .selectAll(\".ring\")\n                    .data(circleScales);\n\n                rings\n                    .enter()\n                    .append(\"path\")\n                    .attr(\"class\", \"ring\")\n                    .attr(\"fill\", function(d) {\n                        return circleColorScale(d.domain()[0]);\n                    })\n                    .attr(\"d\", function(d) {\n                        var arc = d3.svg.arc()\n                            .innerRadius(d.range()[0])\n                            .outerRadius(d.range()[1])\n                            .startAngle(0)\n                            .endAngle(2 * Math.PI);\n                        return arc(d);\n                    })\n                    .attr(\"id\", function(d, i) {\n                        return \"ring\" + i;\n                    })\n\n\n                .on(\"click\", function(d, i) {\n                    // One ring has been selected\n                    var selected = d3.select(this);\n                    if (selected.classed(\"zoomed\")) {\n                        selected.classed(\"zoomed\", false);\n                        render.update(data, updateScales(radius));\n                    } else {\n                        selected.classed(\"zoomed\", true);\n                        render.update(data, updateScales(radius, d));\n                    }\n                });\n\n                rings\n                    .transition()\n                    .duration(transitionSpeed)\n                    .attr(\"d\", function(d, i) {\n                        var arc = d3.svg.arc()\n                            .innerRadius(circleScales[i].range()[0] + 0.1) // Have to add 0.1 otherwise it doesn't transition correctly\n                            .outerRadius(circleScales[i].range()[1] + 0.1) // Have to add 0.1 otherwise it doesn't transition correctly\n                            .startAngle(0)\n                            .endAngle(2 * Math.PI);\n                        return arc(d, i);\n                    });\n\n                var displData = [];\n                for (i in data)\n                    if (data[i].type == vizType)\n                        displData.push(data[i])\n\n                    // Calculate coords for each data point\n                var stepRad = 2 * Math.PI * 360 / displData.length; // grades\n                var currAngle = 0;\n\n                for (var i = 0; i < displData.length; i++) {\n                    var p = displData[i];\n                    var scale = circleScales[~~((1 - p.value) / 0.2)];\n                    var coords = point(scale(1 - p.value), currAngle);\n                    p.x = coords[0];\n                    p.y = coords[1];\n                    p.angle = currAngle;\n                    currAngle += (2 * Math.PI / displData.length);\n                }\n\n                // Links\n                links = graph.selectAll(\".openTargets_d-d_overview_link\")\n                    .data(displData, function(d) {\n                        return d.object + \"-\" + d.subject;\n                    });\n                links\n                    .enter()\n                    .append(\"line\")\n                    .style(\"stroke\", \"navy\")\n                    .attr(\"class\", \"openTargets_d-d_overview_link unselected\");\n                links\n                    .transition()\n                    .duration(transitionSpeed)\n                    .attr(\"x1\", function(d) {\n                        return d.x;\n                    })\n                    .attr(\"y1\", function(d) {\n                        return d.y;\n                    })\n                    .attr(\"x2\", function(d) {\n                        return radius * Math.cos(d.angle);\n                    })\n                    .attr(\"y2\", function(d) {\n                        return radius * Math.sin(d.angle);\n                    });\n\n                // Nodes\n                points = graph.selectAll(\".openTargets_d-d_overview_node\")\n                    .data(displData, function(d) {\n                        return d.object + \"-\" + d.subject;\n                    });\n                points\n                    .enter()\n                    .append(\"circle\")\n                    .attr(\"class\", \"openTargets_d-d_overview_node selected\")\n                    .on(\"mouseout\", unselect)\n                    .on(\"mouseover\", select)\n                    .on(\"click\",\n                        tooltip\n                    );\n                points\n                    .transition()\n                    .duration(transitionSpeed)\n                    .attr(\"cx\", function(d) {\n                        return d.x;\n                    })\n                    .attr(\"cy\", function(d) {\n                        return d.y;\n                    })\n                    .attr(\"r\", config.pointSize)\n                    .attr(\"fill\", config.pointColor);\n\n                // Labels\n                graph.selectAll(\".openTargets_d-d_overview_label\").remove()\n                labels = graph.selectAll(\".openTargets_d-d_overview_label\")\n                    .data(displData, function(d) {\n                        return d.object + \"-\" + d.subject;\n                    });\n                labels\n                    .enter()\n                    .append(\"g\")\n                    .attr(\"class\", \"openTargets_d-d_overview_label selected\")\n                    // Create SVG container, and apply a transform such that the origin is the\n                    // center of the canvas. This way, we don't need to position arcs individually\n                    .attr(\"transform\", function(d) {\n                        var grades = d.angle * 360 / (2 * Math.PI);\n                        var x = graphSize / 2 * Math.cos(d.angle);\n                        var y = graphSize / 2 * Math.sin(d.angle);\n\n                        return \"translate(\" + x + \",\" + y + \")\";\n                    })\n                    .append(\"text\")\n                    .style(\"font-size\", config.fontSize)\n                    // .style(\"font-size\", \"10px\")\n                    .style(\"text-anchor\", function(d) {\n                        var grades = d.angle * 360 / (2 * Math.PI);\n                        if (grades % 360 > 90 && grades % 360 < 275) {\n                            return \"end\";\n                        }\n                        return \"start\";\n                    })\n                    .text(function(d) {\n                        return d.object;\n                    })\n                    .attr(\"transform\", function(d) {\n                        var grades = d.angle * 360 / (2 * Math.PI);\n                        if (grades % 360 > 90 && grades % 360 < 275) {\n                            return \"rotate(\" + ((grades % 360) + 180) + \")\";\n                        }\n                        return \"rotate(\" + (grades % 360) + \")\";\n                    })\n                    .on(\"mouseover\", select)\n                    .on(\"mouseout\", unselect)\n                    .on(\"click\", tooltip);\n\n                // drawData(\"diseases1\")\n\n            }\n\n            function updateBreadcrumbs(nodeArray) {\n\n                function breadcrumbPoints(d, i) {\n                    var points = [];\n                    points.push(\"0,0\");\n                    points.push(b.w + \",0\");\n                    points.push(b.w + b.t + \",\" + (b.h / 2));\n                    points.push(b.w + \",\" + b.h);\n                    points.push(\"0,\" + b.h);\n                    if (i > 0) { // Leftmost breadcrumb; don't include 6th vertex.\n                        points.push(b.t + \",\" + (b.h / 2));\n                    }\n                    return points.join(\" \");\n                }\n                d3.selectAll(\"#trail\").remove()\n\n                // Add the svg area.\n                var trail = d3.select(\"#sequence\").append(\"svg:svg\")\n                    // .attr(\"width\", 1200)\n                    .style(\"width\", config.size)\n                    .style(\"height\", 30)\n                    .attr(\"id\", \"trail\");\n\n                // Data join; key function combines name and depth (= position in sequence).\n                var g = d3.select(\"#trail\")\n                    .selectAll(\"g\")\n                    .data(nodeArray, function(d) {\n\n                        return d.name + d.depth;\n                    });\n\n                // Add breadcrumb and label for entering nodes.\n                var entering = g.enter().append(\"svg:g\");\n\n                function renderInitialState() {\n                    rings = d3.selectAll(\"#pieChart .ring\")\n                    var lines = d3.selectAll(\"#pieChart line\")\n                        // var labels=d3.selectAll(\"#pieChart text\")\n                    d3.selectAll(\"#pieChart text\").style('opacity', 0);\n                    var circles = d3.selectAll(\"#pieChart circle\")\n\n                    rings.transition()\n                        .duration(200)\n                        .style('opacity', 0);\n\n                    d3.selectAll(\"#pieChart line\").remove();\n                    // d3.selectAll(\"#pieChart text\").remove();\n                    d3.selectAll(\"#pieChart .openTargets_d-d_overview_label\").remove();\n                    d3.selectAll(\"#pieChart circle\").remove();\n\n                    d3.selectAll('#sequence g').remove()\n\n                    updateBreadcrumbs([{ name: 'Home' }]);\n                    setTimeout(function() {\n                        d3.selectAll(\"#pieChart .ring\").remove();\n\n                        path = path.data(pie(dataTypes))\n                            .attr(\"fill\", function(d, i) {\n                                return allColorsExp[(d.data.type)][0];\n                            });\n\n                        path.transition().duration(500).attrTween(\"d\", function(a) {\n                            var i = d3.interpolate(this._current, a) //,\n                                // k = d3.interpolate(arc.outerRadius()(), newRadius);\n                            this._current = i(0);\n                            return function(t) {\n                                return arc(i(t));\n                                // return arc.innerRadius(k(t) / 4).outerRadius(k(t))(i(t));\n                            };\n                        });\n                        d3.selectAll(\"#pieChart text\").transition().duration(600).style('opacity', 1);\n\n                    }, 500)\n\n                }\n\n                entering.append(\"svg:polygon\")\n                    .attr(\"points\", breadcrumbPoints)\n                    .style(\"fill\", function(d) {\n                        if (d.name == 'Home') {\n                            return '#DCDCDC';\n                        }\n                        return allColorsExp[d.name][1]\n                    })\n                    .on(\"click\", function(d, i) {\n                        if (this.parentNode.childNodes[1].innerHTML == \"Home\")\n                            renderInitialState();\n                    })\n\n                entering.append(\"svg:text\")\n                    .attr(\"x\", (b.w + b.t) / 2)\n                    .attr(\"y\", b.h / 2)\n                    .attr(\"dy\", \"0.35em\")\n                    .attr(\"text-anchor\", \"middle\")\n                    .text(function(d) {\n                        var name;\n\n                        if (d.name.length > 11) {\n                            name = d.name.substring(0, 10) + '...';\n                        } else {\n                            name = d.name;\n                        }\n                        return name;\n                        // return d.name;\n                    })\n                    .on(\"click\", function(d, i) {\n                        if (this.innerHTML == \"Home\")\n                            renderInitialState();\n                    });\n\n                // Set position for entering and updating nodes.\n                g.attr(\"transform\", function(d, i) {\n                    return \"translate(\" + i * (b.w + b.s) + \", 0)\";\n                });\n            }\n\n            function drawData(type) {\n                var displData = [];\n                for (i in data) {\n                    if (data[i].type == type) {\n                        displData.push(data[i])\n                    }\n                }\n\n                // Calculate coords for each data point\n                // var stepRad = 2 * Math.PI / displData.length; // grades\n                // var stepRad = 2 * Math.PI * 360 / displData.length; // grades\n                var stepRad = 3.5; // grades\n\n                var currAngle = 0;\n\n                for (var i = 0; i < displData.length; i++) {\n                    var p = displData[i];\n                    var scale = circleScales[~~((1 - p.value) / 0.2)];\n                    var coords = point(scale(1 - p.value), currAngle);\n                    p.x = coords[0];\n                    p.y = coords[1];\n                    p.angle = currAngle;\n                    currAngle += (2 * Math.PI / displData.length);\n                    // currAngle += (stepRad * 2 * Math.PI / 360);\n                }\n\n                // Links\n                links = graph.selectAll(\".openTargets_d-d_overview_link\")\n                    .data(displData, function(d) {\n                        return d.object + \"-\" + d.subject;\n                    });\n                links\n                    .enter()\n                    .append(\"line\")\n                    .style(\"stroke\", \"navy\")\n                    .attr(\"class\", \"openTargets_d-d_overview_link unselected\");\n                links\n                    .transition()\n                    .duration(transitionSpeed)\n                    .attr(\"x1\", function(d) {\n                        return d.x;\n                    })\n                    .attr(\"y1\", function(d) {\n                        return d.y;\n                    })\n                    .attr(\"x2\", function(d) {\n                        return radius * Math.cos(d.angle);\n                    })\n                    .attr(\"y2\", function(d) {\n                        return radius * Math.sin(d.angle);\n                    });\n\n                // Nodes\n                points = graph.selectAll(\".openTargets_d-d_overview_node\")\n                    .data(displData, function(d) {\n                        return d.object + \"-\" + d.subject;\n                    });\n                points\n                    .enter()\n                    .append(\"circle\")\n                    .attr(\"class\", \"openTargets_d-d_overview_node selected\")\n                    .on(\"mouseout\", unselect)\n                    .on(\"mouseover\", select)\n                    .on(\"click\", tooltip);\n                // .on(\"click\", function(){ tooltip(this,dataTypes)});\n                points\n                    .transition()\n                    .duration(transitionSpeed)\n                    .attr(\"cx\", function(d) {\n                        return d.x;\n                    })\n                    .attr(\"cy\", function(d) {\n                        return d.y;\n                    })\n                    .attr(\"r\", config.pointSize)\n                    .attr(\"fill\", config.pointColor);\n\n                // Labels\n                graph.selectAll(\".openTargets_d-d_overview_label\").remove()\n                labels = graph.selectAll(\".openTargets_d-d_overview_label\")\n                    .data(displData, function(d) {\n                        return d.object + \"-\" + d.subject;\n                    });\n                labels\n                    .enter()\n                    .append(\"g\")\n                    .attr(\"class\", \"openTargets_d-d_overview_label selected\")\n                    // Create SVG container, and apply a transform such that the origin is the\n                    // center of the canvas. This way, we don't need to position arcs individually\n                    .attr(\"transform\", function(d) {\n                        var grades = d.angle * 360 / (2 * Math.PI);\n                        var x = graphSize / 2 * Math.cos(d.angle);\n                        var y = graphSize / 2 * Math.sin(d.angle);\n\n                        return \"translate(\" + x + \",\" + y + \")\";\n                    })\n                    .append(\"text\")\n                    .style(\"font-size\", config.fontSize)\n                    // .style(\"font-size\", \"10px\")\n                    .style(\"text-anchor\", function(d) {\n                        var grades = d.angle * 360 / (2 * Math.PI);\n                        if (grades % 360 > 90 && grades % 360 < 275) {\n                            return \"end\";\n                        }\n                        return \"start\";\n                    })\n                    .text(function(d) {\n                        return d.object;\n                    })\n                    .attr(\"transform\", function(d) {\n                        var grades = d.angle * 360 / (2 * Math.PI);\n                        if (grades % 360 > 90 && grades % 360 < 275) {\n                            return \"rotate(\" + ((grades % 360) + 180) + \")\";\n                        }\n                        return \"rotate(\" + (grades % 360) + \")\";\n                    })\n                    .on(\"mouseover\", select)\n                    .on(\"mouseout\", unselect)\n                    .on(\"click\", tooltip);\n            }\n        };\n\n        if (typeof config.data == \"string\") {\n            d3.json(config.data, function(error, resp) {\n                var data = resp.data;\n                render.update(data, updateScales(radius), 'pieChart');\n            });\n        } else {\n\n            render.update(config.data, updateScales(radius), 'pieChart');\n        }\n\n\n\n    };\n\n    function updateScales(radius, selected) {\n        var circleScales = [\n            d3.scale.linear().domain([0.0, 0.2]).range([0, 1 * radius / 5]).clamp(true),\n            d3.scale.linear().domain([0.2, 0.4]).range([1 * radius / 5, 2 * radius / 5]).clamp(true),\n            d3.scale.linear().domain([0.4, 0.6]).range([2 * radius / 5, 3 * radius / 5]).clamp(true),\n            d3.scale.linear().domain([0.6, 0.8]).range([3 * radius / 5, 4 * radius / 5]).clamp(true),\n            d3.scale.linear().domain([0.8, 1.0]).range([4 * radius / 5, 5 * radius / 5]).clamp(true),\n        ];\n\n        if (!selected) {\n            return circleScales;\n        }\n\n        // We are focusing on a scale\n        var newScales = [];\n        var currRad = 0;\n        //if it's the selected scale put it to the length of radius else put it to 0 length\n        for (var i = 0; i < circleScales.length; i++) {\n            var scale = circleScales[i];\n            if (selected.domain()[0] == scale.domain()[0]) {\n                scale.range([currRad, radius]);\n                currRad = radius;\n            } else {\n                scale.range([currRad, currRad]);\n            }\n            newScales.push(scale);\n        }\n        return newScales;\n    }\n\n    function tooltip(d) {\n\n        var obj = {};\n        obj.header = d.object;\n        obj.rows = [];\n        obj.rows.push({\n            label: \"type\",\n            value: d.type\n        });\n        obj.rows.push({\n            label: \"Value:\",\n            value: String(d.value * 100).slice(0, 5)\n        });\n        tntTooltip.table()\n            .width(180)\n            .show_closer(true)\n            .call(this, obj);\n    }\n\n    // private methods\n    function select(d) {\n        var selectNode = this;\n        links\n            .each(function(l) {\n                var checkLink = this;\n                if (d.object === l.object) {\n                    d3.select(checkLink)\n                        .classed(\"unselected\", false)\n                        .classed(\"selected\", true);\n                } else {\n                    d3.select(checkLink)\n                        .classed(\"selected\", false)\n                        .classed(\"unselected\", true);\n                }\n            });\n        labels\n            .each(function(l) {\n                var checkLabel = this;\n                if (d.object === l.object) {\n                    d3.select(checkLabel)\n                        .classed(\"unselected\", false)\n                        .classed(\"selected\", true);\n                } else {\n                    d3.select(checkLabel)\n                        .classed(\"selected\", false)\n                        .classed(\"unselected\", true);\n                }\n            });\n        points\n            .each(function(p) {\n                var checkNode = this;\n                if (p.object === d.object) {\n                    d3.select(checkNode)\n                        .classed(\"unselected\", false)\n                        .classed(\"selected\", true);\n                } else {\n                    d3.select(checkNode)\n                        .classed(\"selected\", false)\n                        .classed(\"unselected\", true);\n                }\n            });\n    }\n\n    function unselect() {\n        links\n            .each(function() {\n                d3.select(this)\n                    .classed(\"selected\", false)\n                    .classed(\"unselected\", true);\n            });\n        labels\n            .each(function() {\n                d3.select(this)\n                    .classed(\"selected\", true)\n                    .classed(\"unselected\", false);\n            });\n        points\n            .each(function() {\n                d3.select(this)\n                    .classed(\"selected\", true)\n                    .classed(\"unselected\", false);\n            });\n    }\n\n    function point(l, r) {\n        var x = l * Math.cos(r);\n        var y = l * Math.sin(r);\n        return [x, y];\n    }\n\n    // Public methods\n\n    render.read = function(data) {\n        // if (typeof data == 'object') {\n            if (!arguments.length) {\n                return config.data;\n            }\n            config.data = data;\n            return this;\n        // }\n    }\n\n    render.size = function(size) {\n        if (!arguments.length) {\n            return config.size;\n        }\n        config.size = size;\n        return this;\n    };\n\n    render.setPieColors = function(color) {\n        if (!arguments.length) {\n            return config.allColorsExp;\n        }\n        config.allColorsExp = color;\n        return this;\n    };\n\n    render.setFontSize = function(size) {\n        if (!arguments.length) {\n            return config.fontSize;\n        }\n        if(typeof size== \"number\"){\n            size = String(size+'px');\n        }\n        config.fontSize=size;\n        return this;\n    };\n\n    render.setPointSize = function(size) {\n        if (!arguments.length) {\n            return config.pointSize;\n        }\n        config.pointSize = size;\n        return this;\n    };\n\n    render.setPointColor = function(color) {\n        if (!arguments.length) {\n            return config.pointColor;\n        }\n        config.pointColor = color;\n        return this;\n    };\n\n    render.filter_type = function(type) {\n        points\n            .style(\"display\", function(d) {\n                if (!type) {\n                    return \"block\";\n                }\n                if (d.type !== type) {\n                    return \"none\";\n                }\n                return \"block\";\n            });\n    };\n    return render;\n};\n\nmodule.exports = exports = vis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/plugins/visualizations/charts/static/repository/plugins/biojs/visPieChart/~/visualize_piechart/src/vis.js\n// module id = 14\n// module chunks = 1"],"sourceRoot":""}